!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADD_CFLAGS	nnvm/make/config.mk	/^ADD_CFLAGS=$/;"	m
ADD_LDFLAGS	nnvm/make/config.mk	/^ADD_LDFLAGS=$/;"	m
ALIB	dmlc-core/Makefile	/^ALIB=libdmlc.a$/;"	m
ALLSPHINXOPTS	dmlc-core/doc/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
ALL_DEP	Makefile	/^ALL_DEP = $(OBJ) $(LIB_DEP)$/;"	m
ALL_DEP	nnvm/Makefile	/^ALL_DEP = $(ALL_OBJ) $(PLUGIN_OBJ)$/;"	m
ALL_EXAMPLE	dmlc-core/example/dmlc_example.mk	/^ALL_EXAMPLE=example\/parameter$/;"	m
ALL_OBJ	nnvm/Makefile	/^ALL_OBJ = $(patsubst %.cc, build\/%.o, $(SRC))$/;"	m
ALL_TEST	dmlc-core/test/dmlc_test.mk	/^ALL_TEST=$(TEST) $(UNITTEST)$/;"	m
ALL_TEST_OBJ	dmlc-core/test/dmlc_test.mk	/^ALL_TEST_OBJ=$(UNITTEST_OBJ)$/;"	m
API_BEGIN	nnvm/src/c_api/c_api_common.h	18;"	d
API_BEGIN	src/c_api.cc	16;"	d	file:
API_END	nnvm/src/c_api/c_api_common.h	21;"	d
API_END	src/c_api.cc	19;"	d	file:
API_END_HANDLE_ERROR	nnvm/src/c_api/c_api_common.h	27;"	d
API_END_HANDLE_ERROR	src/c_api.cc	25;"	d	file:
AST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class AST {$/;"	c	namespace:nnvm::fusion
AVLTree	dmlc-core/test/registry_test.cc	/^struct AVLTree : public Tree {$/;"	s	namespace:tree	file:
AdamOptimizer	python/tinyflow/train.py	/^class AdamOptimizer(object):$/;"	c
AddAlias	dmlc-core/include/dmlc/parameter.h	/^  inline void AddAlias(const std::string& field, const std::string& alias) {$/;"	f	class:dmlc::parameter::ParamManager
AddAlias	dmlc-core/include/dmlc/registry.h	/^  inline void AddAlias(const std::string& key_name,$/;"	f	class:dmlc::Registry
AddAlias	nnvm/include/dmlc/parameter.h	/^  inline void AddAlias(const std::string& field, const std::string& alias) {$/;"	f	class:dmlc::parameter::ParamManager
AddAlias	nnvm/include/dmlc/registry.h	/^  inline void AddAlias(const std::string& key_name,$/;"	f	class:dmlc::Registry
AddControlDeps	nnvm/src/core/symbolic.cc	/^void Symbol::AddControlDeps(const Symbol& src) {$/;"	f	class:nnvm::Symbol
AddEntry	dmlc-core/include/dmlc/parameter.h	/^  inline void AddEntry(const std::string &key, FieldAccessEntry *e) {$/;"	f	class:dmlc::parameter::ParamManager
AddEntry	nnvm/include/dmlc/parameter.h	/^  inline void AddEntry(const std::string &key, FieldAccessEntry *e) {$/;"	f	class:dmlc::parameter::ParamManager
AddGroupTrigger	nnvm/src/core/op.cc	/^void Op::AddGroupTrigger(const std::string& group_name,$/;"	f	class:nnvm::Op
Alloc	nnvm/src/pass/plan_memory.cc	/^  StorageID Alloc(int dev_id, size_t size) {$/;"	f	class:nnvm::pass::__anon7::GraphAllocator	file:
AnyJSONManager	dmlc-core/include/dmlc/json.h	/^  AnyJSONManager() {}$/;"	f	class:dmlc::json::AnyJSONManager
AnyJSONManager	dmlc-core/include/dmlc/json.h	/^class AnyJSONManager {$/;"	c	namespace:dmlc::json
AnyJSONManager	nnvm/include/dmlc/json.h	/^  AnyJSONManager() {}$/;"	f	class:dmlc::json::AnyJSONManager
AnyJSONManager	nnvm/include/dmlc/json.h	/^class AnyJSONManager {$/;"	c	namespace:dmlc::json
ApplicationMaster	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private ApplicationMaster() throws IOException {$/;"	m	class:ApplicationMaster	file:
ApplicationMaster	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^public class ApplicationMaster {$/;"	c
ApplyPass	nnvm/include/nnvm/pass.h	/^inline Graph ApplyPass(Graph src, const std::string& pass) {$/;"	f	namespace:nnvm
ApplyPasses	nnvm/src/core/pass.cc	/^Graph ApplyPasses(Graph g,$/;"	f	namespace:nnvm
ArrayHandler	dmlc-core/include/dmlc/json.h	/^struct ArrayHandler {$/;"	s	namespace:dmlc::json
ArrayHandler	nnvm/include/dmlc/json.h	/^struct ArrayHandler {$/;"	s	namespace:dmlc::json
ArrayPacker	python/tinyflow/datasets.py	/^class ArrayPacker(object):$/;"	c
ArraySubscriptAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  ArraySubscriptAST(ASTPtr lhs, ASTPtr rhs)$/;"	f	class:nnvm::fusion::ArraySubscriptAST
ArraySubscriptAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class ArraySubscriptAST : public AST {$/;"	c	namespace:nnvm::fusion
ArrayViewTest	dmlc-core/test/unittest/unittest_array_view.cc	/^void ArrayViewTest(dmlc::array_view<int> view, int base) {$/;"	f
AssignAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  AssignAST(ASTPtr var, ASTPtr val)$/;"	f	class:nnvm::fusion::AssignAST
AssignAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class AssignAST : public AST {$/;"	c	namespace:nnvm::fusion
AtEnd	dmlc-core/src/io/local_filesys.cc	/^  virtual bool AtEnd(void) const {$/;"	f	class:dmlc::io::FileStream
AtEnd	dmlc-core/src/io/s3_filesys.cc	/^  virtual bool AtEnd(void) const {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
AttrScope	nnvm/python/nnvm/_ctypes/symbol.py	/^from ..attribute import AttrScope$/;"	i
AttrScope	nnvm/python/nnvm/attribute.py	/^class AttrScope(object):$/;"	c
AttrScope	nnvm/python/nnvm/cython/symbol.pyx	/^from ..attribute import AttrScope$/;"	i
AttrScope	nnvm/python/nnvm/symbol.py	/^from .attribute import AttrScope$/;"	i
AutoStructify	dmlc-core/doc/conf.py	/^from sphinx_util import MarkdownParser, AutoStructify$/;"	i
AutoStructify	dmlc-core/doc/sphinx_util.py	/^AutoStructify = transform.AutoStructify$/;"	v
AzureFileSystem	dmlc-core/src/io/azure_filesys.cc	/^AzureFileSystem::AzureFileSystem() {$/;"	f	class:dmlc::io::AzureFileSystem
AzureFileSystem	dmlc-core/src/io/azure_filesys.h	/^class AzureFileSystem : public FileSystem {$/;"	c	namespace:dmlc::io
BUILDDIR	dmlc-core/doc/Makefile	/^BUILDDIR      = _build$/;"	m
BUILD_TEST	dmlc-core/make/config.mk	/^BUILD_TEST=0$/;"	m
BackFindEndLine	dmlc-core/src/data/text_parser.h	/^  inline char* BackFindEndLine(char *bptr,$/;"	f	class:dmlc::data::TextParserBase
Base64	dmlc-core/src/io/s3_filesys.cc	/^static std::string Base64(unsigned char md[], unsigned len) {$/;"	f	namespace:dmlc::io::s3
BasicRowIter	dmlc-core/src/data/basic_row_iter.h	/^  explicit BasicRowIter(Parser<IndexType> *parser)$/;"	f	class:dmlc::data::BasicRowIter
BasicRowIter	dmlc-core/src/data/basic_row_iter.h	/^class BasicRowIter: public RowBlockIter<IndexType> {$/;"	c	namespace:dmlc::data
BatchNormalizationParam	src/op_nn.cc	/^struct BatchNormalizationParam : public dmlc::Parameter<BatchNormalizationParam> {$/;"	s	namespace:tinyflow	file:
BatchNormalizationShape	src/op_nn.cc	/^inline bool BatchNormalizationShape(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
BeforeFirst	dmlc-core/include/dmlc/threadediter.h	/^    virtual void BeforeFirst(void) {$/;"	f	class:dmlc::ThreadedIter::Producer
BeforeFirst	dmlc-core/include/dmlc/threadediter.h	/^  virtual void BeforeFirst(void) {$/;"	f	class:dmlc::ThreadedIter
BeforeFirst	dmlc-core/src/data/basic_row_iter.h	/^  virtual void BeforeFirst(void) {$/;"	f	class:dmlc::data::BasicRowIter
BeforeFirst	dmlc-core/src/data/disk_row_iter.h	/^  virtual void BeforeFirst(void) {$/;"	f	class:dmlc::data::DiskRowIter
BeforeFirst	dmlc-core/src/data/parser.h	/^  virtual void BeforeFirst() {$/;"	f	class:dmlc::data::ThreadedParser
BeforeFirst	dmlc-core/src/data/text_parser.h	/^  virtual void BeforeFirst(void) {$/;"	f	class:dmlc::data::TextParserBase
BeforeFirst	dmlc-core/src/io/cached_input_split.h	/^  virtual void BeforeFirst(void) {$/;"	f	class:dmlc::io::CachedInputSplit
BeforeFirst	dmlc-core/src/io/input_split_base.cc	/^void InputSplitBase::BeforeFirst(void) {$/;"	f	class:dmlc::io::InputSplitBase
BeforeFirst	dmlc-core/src/io/single_file_split.h	/^  virtual void BeforeFirst(void) {$/;"	f	class:dmlc::io::SingleFileSplit
BeforeFirst	dmlc-core/src/io/threaded_input_split.h	/^  virtual void BeforeFirst() {$/;"	f	class:dmlc::io::ThreadedInputSplit
BeforeFirst	dmlc-core/test/unittest/unittest_threaditer.cc	/^  virtual void BeforeFirst(void) {$/;"	f	struct:producer_test::IntProducer
BeginArray	dmlc-core/include/dmlc/json.h	/^inline void JSONReader::BeginArray() {$/;"	f	class:dmlc::JSONReader
BeginArray	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::BeginArray(bool multi_line) {$/;"	f	class:dmlc::JSONWriter
BeginArray	nnvm/include/dmlc/json.h	/^inline void JSONReader::BeginArray() {$/;"	f	class:dmlc::JSONReader
BeginArray	nnvm/include/dmlc/json.h	/^inline void JSONWriter::BeginArray(bool multi_line) {$/;"	f	class:dmlc::JSONWriter
BeginObject	dmlc-core/include/dmlc/json.h	/^inline void JSONReader::BeginObject() {$/;"	f	class:dmlc::JSONReader
BeginObject	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::BeginObject(bool multi_line) {$/;"	f	class:dmlc::JSONWriter
BeginObject	nnvm/include/dmlc/json.h	/^inline void JSONReader::BeginObject() {$/;"	f	class:dmlc::JSONReader
BeginObject	nnvm/include/dmlc/json.h	/^inline void JSONWriter::BeginObject(bool multi_line) {$/;"	f	class:dmlc::JSONWriter
BeginPtr	dmlc-core/include/dmlc/base.h	/^inline T *BeginPtr(std::vector<T> &vec) {  \/\/ NOLINT(*)$/;"	f	namespace:dmlc
BeginPtr	dmlc-core/include/dmlc/base.h	/^inline char* BeginPtr(std::string &str) {  \/\/ NOLINT(*)$/;"	f	namespace:dmlc
BeginPtr	dmlc-core/include/dmlc/base.h	/^inline const T *BeginPtr(const std::vector<T> &vec) {$/;"	f	namespace:dmlc
BeginPtr	dmlc-core/include/dmlc/base.h	/^inline const char* BeginPtr(const std::string &str) {$/;"	f	namespace:dmlc
BeginPtr	nnvm/include/dmlc/base.h	/^inline T *BeginPtr(std::vector<T> &vec) {  \/\/ NOLINT(*)$/;"	f	namespace:dmlc
BeginPtr	nnvm/include/dmlc/base.h	/^inline char* BeginPtr(std::string &str) {  \/\/ NOLINT(*)$/;"	f	namespace:dmlc
BeginPtr	nnvm/include/dmlc/base.h	/^inline const T *BeginPtr(const std::vector<T> &vec) {$/;"	f	namespace:dmlc
BeginPtr	nnvm/include/dmlc/base.h	/^inline const char* BeginPtr(const std::string &str) {$/;"	f	namespace:dmlc
BinaryAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  BinaryAST(char op, ASTPtr lhs, ASTPtr rhs)$/;"	f	class:nnvm::fusion::BinaryAST
BinaryAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class BinaryAST : public AST {$/;"	c	namespace:nnvm::fusion
BinaryTree	dmlc-core/test/registry_test.cc	/^struct BinaryTree : public Tree {$/;"	s	namespace:tree	file:
Blob	dmlc-core/include/dmlc/io.h	/^  struct Blob {$/;"	s	class:dmlc::InputSplit
BuildCache	dmlc-core/src/data/disk_row_iter.h	/^BuildCache(Parser<IndexType> *parser) {$/;"	f	class:dmlc::data::DiskRowIter
BytesRead	dmlc-core/src/data/parser.h	/^  virtual size_t BytesRead(void) const {$/;"	f	class:dmlc::data::ThreadedParser
BytesRead	dmlc-core/src/data/text_parser.h	/^  virtual size_t BytesRead(void) const {$/;"	f	class:dmlc::data::TextParserBase
CC	dmlc-core/make/config.mk	/^export CC = gcc$/;"	m
CFLAGS	Makefile	/^export CFLAGS =  -std=c++11 -Wall -O2 -msse2  -Wno-unknown-pragmas -funroll-loops\\$/;"	m
CFLAGS	dmlc-core/Makefile	/^export CFLAGS = -O3 -Wall -Wno-unknown-pragmas -Iinclude  -std=c++0x$/;"	m
CFLAGS	nnvm/Makefile	/^export CFLAGS = -std=c++11 -Wall -O2 -msse2  -Wno-unknown-pragmas -funroll-loops\\$/;"	m
CIFAR10Data	python/tinyflow/datasets.py	/^CIFAR10Data = namedtuple("CIFAR10Data", ["train", "test"])$/;"	v
CPATH	dmlc-core/tracker/yarn/build.bat	/^for \/f %%i in ('%HADOOP_HOME%\\bin\\hadoop classpath') do set CPATH=%%i$/;"	v
CSVParser	dmlc-core/src/data/csv_parser.h	/^  explicit CSVParser(InputSplit *source,$/;"	f	class:dmlc::data::CSVParser
CSVParser	dmlc-core/src/data/csv_parser.h	/^class CSVParser : public TextParserBase<IndexType> {$/;"	c	namespace:dmlc::data
CSVParserParam	dmlc-core/src/data/csv_parser.h	/^struct CSVParserParam : public Parameter<CSVParserParam> {$/;"	s	namespace:dmlc::data
CUDA_PATH	Makefile	/^	CUDA_PATH = \/usr\/local\/cuda$/;"	m
CUDA_RUNTIME_SAFE_CALL	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	29;"	d
CUDA_SAFE_CALL	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	18;"	d
CUOBJ	Makefile	/^CUOBJ = $(patsubst %.cu, build\/%_gpu.o, $(CUSRC))$/;"	m
CURLGlobal	dmlc-core/src/io/s3_filesys.cc	/^  CURLGlobal() {$/;"	f	struct:dmlc::io::s3::CURLGlobal
CURLGlobal	dmlc-core/src/io/s3_filesys.cc	/^struct CURLGlobal {$/;"	s	namespace:dmlc::io::s3	file:
CURLReadStreamBase	dmlc-core/src/io/s3_filesys.cc	/^  CURLReadStreamBase()$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
CURLReadStreamBase	dmlc-core/src/io/s3_filesys.cc	/^class CURLReadStreamBase : public SeekStream {$/;"	c	namespace:dmlc::io::s3	file:
CUSRC	Makefile	/^CUSRC = $(wildcard src\/*.cu src\/*\/*.cu src\/*\/*\/*.cu)$/;"	m
CXX	dmlc-core/make/config.mk	/^export CXX = g++$/;"	m
CXX_SUFFIX	dmlc-core/scripts/lint.py	/^CXX_SUFFIX = set(['cc', 'c', 'cpp', 'h', 'cu', 'hpp'])$/;"	v
CXX_SUFFIX	dmlc-core/scripts/lint3.py	/^CXX_SUFFIX = set(['cc', 'c', 'cpp', 'h', 'cu', 'hpp'])$/;"	v
CachedInputSplit	dmlc-core/src/io/cached_input_split.h	/^  CachedInputSplit(InputSplitBase *base,$/;"	f	class:dmlc::io::CachedInputSplit
CachedInputSplit	dmlc-core/src/io/cached_input_split.h	/^class CachedInputSplit : public InputSplit {$/;"	c	namespace:dmlc::io
CallAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  CallAST(const std::string& callee, std::vector<ASTPtr> args)$/;"	f	class:nnvm::fusion::CallAST
CallAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class CallAST : public AST {$/;"	c	namespace:nnvm::fusion
Callback	dmlc-core/src/io/s3_filesys.cc	/^  static size_t Callback(char *buf, size_t size, size_t count, void *fp) {$/;"	f	struct:dmlc::io::s3::ReadStringStream
Check	dmlc-core/include/dmlc/parameter.h	/^  virtual void Check(void *head) const {$/;"	f	class:dmlc::parameter::FieldEntryNumeric
Check	dmlc-core/include/dmlc/parameter.h	/^  virtual void Check(void *head) const {}$/;"	f	class:dmlc::parameter::FieldAccessEntry
Check	nnvm/include/dmlc/parameter.h	/^  virtual void Check(void *head) const {$/;"	f	class:dmlc::parameter::FieldEntryNumeric
Check	nnvm/include/dmlc/parameter.h	/^  virtual void Check(void *head) const {}$/;"	f	class:dmlc::parameter::FieldAccessEntry
Chunk	dmlc-core/src/io/input_split_base.h	/^    explicit Chunk(size_t buffer_size)$/;"	f	struct:dmlc::io::InputSplitBase::Chunk
Chunk	dmlc-core/src/io/input_split_base.h	/^  struct Chunk {$/;"	s	class:dmlc::io::InputSplitBase
Cleanup	dmlc-core/src/io/s3_filesys.cc	/^void CURLReadStreamBase::Cleanup() {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
Clear	dmlc-core/src/config.cc	/^void Config::Clear() {$/;"	f	class:dmlc::Config
Clear	dmlc-core/src/data/row_block.h	/^  inline void Clear(void) {$/;"	f	struct:dmlc::data::RowBlockContainer
ClearAuxiliaryMembers	src/session.cc	/^void TorchExecutor::ClearAuxiliaryMembers() {$/;"	f	class:tinyflow::TorchExecutor
Client	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private Client() throws IOException {$/;"	m	class:Client	file:
Client	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^public class Client {$/;"	c
Close	dmlc-core/src/io/hdfs_filesys.cc	/^  inline void Close(void) {$/;"	f	class:dmlc::io::HDFSStream
Close	dmlc-core/src/io/local_filesys.cc	/^  inline void Close(void) {$/;"	f	class:dmlc::io::FileStream
Close	dmlc-core/src/io/s3_filesys.cc	/^  virtual void Close() {$/;"	f	class:dmlc::io::s3::WriteStream
CodeGen	nnvm/plugin/nnvm-fusion/src/codegen.cc	/^Graph CodeGen(Graph ret) {$/;"	f	namespace:nnvm::fusion::__anon2
CollectionHandler	dmlc-core/include/dmlc/serializer.h	/^struct CollectionHandler {$/;"	s	namespace:dmlc::serializer
ColorNodeGroup	nnvm/src/pass/graph_algorithm.h	/^inline uint32_t ColorNodeGroup($/;"	f	namespace:nnvm::pass
CommonJSONSerializer	dmlc-core/include/dmlc/json.h	/^struct CommonJSONSerializer {$/;"	s	namespace:dmlc::json
CommonJSONSerializer	nnvm/include/dmlc/json.h	/^struct CommonJSONSerializer {$/;"	s	namespace:dmlc::json
Compose	nnvm/src/core/symbolic.cc	/^void Symbol::Compose(const array_view<const Symbol*>& args,$/;"	f	class:nnvm::Symbol
ComposeVectorHandler	dmlc-core/include/dmlc/serializer.h	/^struct ComposeVectorHandler {$/;"	s	namespace:dmlc::serializer
ComputeMD5	dmlc-core/src/io/s3_filesys.cc	/^static std::string ComputeMD5(const std::string &buf) {$/;"	f	namespace:dmlc::io::s3
ConcurrentBlockingQueue	dmlc-core/include/dmlc/concurrency.h	/^ConcurrentBlockingQueue<T, type>::ConcurrentBlockingQueue()$/;"	f	class:dmlc::ConcurrentBlockingQueue
ConcurrentBlockingQueue	dmlc-core/include/dmlc/concurrency.h	/^class ConcurrentBlockingQueue {$/;"	c	namespace:dmlc
ConcurrentQueueType	dmlc-core/include/dmlc/concurrency.h	/^enum class ConcurrentQueueType {$/;"	c	namespace:dmlc
Config	dmlc-core/include/dmlc/config.h	/^class Config {$/;"	c	namespace:dmlc
Config	dmlc-core/src/config.cc	/^Config::Config(bool m): multi_value_(m) {$/;"	f	class:dmlc::Config
Config	dmlc-core/src/config.cc	/^Config::Config(istream& is, bool m): multi_value_(m) {$/;"	f	class:dmlc::Config
ConfigEntry	dmlc-core/include/dmlc/config.h	/^  typedef std::pair<std::string, std::string> ConfigEntry;$/;"	t	class:dmlc::Config
ConfigIterator	dmlc-core/include/dmlc/config.h	/^  class ConfigIterator : public std::iterator< std::input_iterator_tag, ConfigEntry > {$/;"	c	class:dmlc::Config
ConfigIterator	dmlc-core/src/config.cc	/^Config::ConfigIterator::ConfigIterator(const Config::ConfigIterator& other)$/;"	f	class:dmlc::Config::ConfigIterator
ConfigIterator	dmlc-core/src/config.cc	/^Config::ConfigIterator::ConfigIterator(size_t i, const Config* c)$/;"	f	class:dmlc::Config::ConfigIterator
ConfigValue	dmlc-core/include/dmlc/config.h	/^  struct ConfigValue {$/;"	s	class:dmlc::Config
ConvPoolParam	src/op_nn.cc	/^struct ConvPoolParam : public dmlc::Parameter<ConvPoolParam> {$/;"	s	namespace:tinyflow	file:
ConvPoolShape	src/op_nn.cc	/^inline bool ConvPoolShape(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
Convert	dmlc-core/include/dmlc/lua.h	/^inline LuaRef LuaState::Convert(const T& value) {$/;"	f	class:dmlc::LuaState
ConvertPathInfo	dmlc-core/src/io/hdfs_filesys.cc	/^inline FileInfo ConvertPathInfo(const URI &path, const hdfsFileInfo &info) {$/;"	f	namespace:dmlc::io
Copy	nnvm/src/core/symbolic.cc	/^Symbol Symbol::Copy() const {$/;"	f	class:nnvm::Symbol
CopyFromTo	src/torch/torch_util.h	/^  void CopyFromTo(LuaRef from, LuaRef to) {$/;"	f	class:tinyflow::TorchState
Create	dmlc-core/include/dmlc/memory.h	/^  inline static ThreadlocalSharedPtr<T> Create(Args&&... args) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
Create	dmlc-core/src/data.cc	/^Parser<uint32_t>::Create(const char *uri_,$/;"	f	class:dmlc::Parser
Create	dmlc-core/src/data.cc	/^Parser<uint64_t>::Create(const char *uri_,$/;"	f	class:dmlc::Parser
Create	dmlc-core/src/data.cc	/^RowBlockIter<uint32_t>::Create(const char *uri,$/;"	f	class:dmlc::RowBlockIter
Create	dmlc-core/src/data.cc	/^RowBlockIter<uint64_t>::Create(const char *uri,$/;"	f	class:dmlc::RowBlockIter
Create	dmlc-core/src/io.cc	/^InputSplit* InputSplit::Create(const char *uri_,$/;"	f	class:dmlc::InputSplit
Create	dmlc-core/src/io.cc	/^Stream *Stream::Create(const char *uri,$/;"	f	class:dmlc::Stream
Create	nnvm/include/dmlc/memory.h	/^  inline static ThreadlocalSharedPtr<T> Create(Args&&... args) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
Create	nnvm/src/core/node.cc	/^NodePtr Node::Create() {$/;"	f	class:nnvm::Node
Create	src/session.cc	/^Session* Session::Create(const std::string& option) {$/;"	f	class:tinyflow::Session
CreateCSVParser	dmlc-core/src/data.cc	/^CreateCSVParser(const std::string& path,$/;"	f	namespace:dmlc::data
CreateForRead	dmlc-core/src/io.cc	/^SeekStream *SeekStream::CreateForRead(const char *uri, bool try_create) {$/;"	f	class:dmlc::SeekStream
CreateFunctor	nnvm/src/core/symbolic.cc	/^Symbol Symbol::CreateFunctor(const Op* op,$/;"	f	class:nnvm::Symbol
CreateGroup	nnvm/src/core/symbolic.cc	/^Symbol Symbol::CreateGroup(const std::vector<Symbol> &symbols) {$/;"	f	class:nnvm::Symbol
CreateIter_	dmlc-core/src/data.cc	/^CreateIter_(const char *uri_,$/;"	f	namespace:dmlc::data
CreateLibSVMParser	dmlc-core/src/data.cc	/^CreateLibSVMParser(const std::string& path,$/;"	f	namespace:dmlc::data
CreateNode	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^InternalNodePtr CreateNode(NodePtr n) {$/;"	f	namespace:nnvm::fusion::__anon4
CreateParser_	dmlc-core/src/data.cc	/^CreateParser_(const char *uri_,$/;"	f	namespace:dmlc::data
CreateVariable	nnvm/src/core/symbolic.cc	/^Symbol Symbol::CreateVariable(const std::string& name) {$/;"	f	class:nnvm::Symbol
CreateVariableNode	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^InternalNodePtr CreateVariableNode(Graph& g, NodePtr n) {$/;"	f	namespace:nnvm::fusion::__anon4
CreateVariableNode	nnvm/src/core/symbolic.cc	/^NodePtr CreateVariableNode(const std::string& name) {$/;"	f	namespace:nnvm
Create_	dmlc-core/include/dmlc/lua.h	/^inline LuaState* LuaState::Create_(Option opt) {$/;"	f	class:dmlc::LuaState
CtrlCHandler	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^        public CtrlCHandler(ApplicationId appId, YarnClient yarnClient){$/;"	m	class:Client.CtrlCHandler
CtrlCHandler	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    class CtrlCHandler implements SignalHandler{$/;"	c	class:Client
DECLARE	dmlc-core/include/dmlc/parameter.h	/^  inline parameter::FieldEntry<DType>& DECLARE($/;"	f	struct:dmlc::Parameter
DECLARE	nnvm/include/dmlc/parameter.h	/^  inline parameter::FieldEntry<DType>& DECLARE($/;"	f	struct:dmlc::Parameter
DEPS_PATH	dmlc-core/make/config.mk	/^DEPS_PATH=$/;"	m
DFSVisit	nnvm/include/nnvm/graph.h	/^inline void DFSVisit(const std::vector<NodeEntry>& heads,$/;"	f	namespace:nnvm
DISALLOW_COPY_AND_ASSIGN	dmlc-core/include/dmlc/base.h	112;"	d
DISALLOW_COPY_AND_ASSIGN	dmlc-core/include/dmlc/base.h	118;"	d
DISALLOW_COPY_AND_ASSIGN	nnvm/include/dmlc/base.h	112;"	d
DISALLOW_COPY_AND_ASSIGN	nnvm/include/dmlc/base.h	118;"	d
DMLC_ANY_H_	dmlc-core/include/dmlc/any.h	7;"	d
DMLC_ANY_H_	nnvm/include/dmlc/any.h	7;"	d
DMLC_ARRAY_VIEW_H_	dmlc-core/include/dmlc/array_view.h	7;"	d
DMLC_ARRAY_VIEW_H_	nnvm/include/dmlc/array_view.h	7;"	d
DMLC_ATTRIBUTE_UNUSED	dmlc-core/include/dmlc/base.h	93;"	d
DMLC_ATTRIBUTE_UNUSED	dmlc-core/include/dmlc/base.h	95;"	d
DMLC_ATTRIBUTE_UNUSED	nnvm/include/dmlc/base.h	93;"	d
DMLC_ATTRIBUTE_UNUSED	nnvm/include/dmlc/base.h	95;"	d
DMLC_BASE_H_	dmlc-core/include/dmlc/base.h	7;"	d
DMLC_BASE_H_	nnvm/include/dmlc/base.h	7;"	d
DMLC_COMMON_H_	dmlc-core/include/dmlc/common.h	7;"	d
DMLC_CONCURRENCY_H_	dmlc-core/include/dmlc/concurrency.h	8;"	d
DMLC_CONFIG_H_	dmlc-core/include/dmlc/config.h	7;"	d
DMLC_DATA_BASIC_ROW_ITER_H_	dmlc-core/src/data/basic_row_iter.h	9;"	d
DMLC_DATA_CSV_PARSER_H_	dmlc-core/src/data/csv_parser.h	8;"	d
DMLC_DATA_DISK_ROW_ITER_H_	dmlc-core/src/data/disk_row_iter.h	9;"	d
DMLC_DATA_H_	dmlc-core/include/dmlc/data.h	8;"	d
DMLC_DATA_LIBSVM_PARSER_H_	dmlc-core/src/data/libsvm_parser.h	8;"	d
DMLC_DATA_PARSER_H_	dmlc-core/src/data/parser.h	8;"	d
DMLC_DATA_ROW_BLOCK_H_	dmlc-core/src/data/row_block.h	9;"	d
DMLC_DATA_STRTONUM_H_	dmlc-core/src/data/strtonum.h	7;"	d
DMLC_DATA_TEXT_PARSER_H_	dmlc-core/src/data/text_parser.h	8;"	d
DMLC_DECLARE_ALIAS	dmlc-core/include/dmlc/parameter.h	252;"	d
DMLC_DECLARE_ALIAS	nnvm/include/dmlc/parameter.h	254;"	d
DMLC_DECLARE_FIELD	dmlc-core/include/dmlc/parameter.h	245;"	d
DMLC_DECLARE_FIELD	nnvm/include/dmlc/parameter.h	247;"	d
DMLC_DECLARE_PARAMETER	dmlc-core/example/parameter.cc	/^  DMLC_DECLARE_PARAMETER(MyParam) {$/;"	f	struct:MyParam
DMLC_DECLARE_PARAMETER	dmlc-core/include/dmlc/parameter.h	237;"	d
DMLC_DECLARE_PARAMETER	dmlc-core/src/data/csv_parser.h	/^  DMLC_DECLARE_PARAMETER(CSVParserParam) {$/;"	f	struct:dmlc::data::CSVParserParam
DMLC_DECLARE_PARAMETER	dmlc-core/test/parameter_test.cc	/^  DMLC_DECLARE_PARAMETER(Param) {$/;"	f	struct:Param
DMLC_DECLARE_PARAMETER	dmlc-core/test/parameter_test.cc	/^  DMLC_DECLARE_PARAMETER(SecondParam) {$/;"	f	struct:SecondParam
DMLC_DECLARE_PARAMETER	nnvm/include/dmlc/parameter.h	239;"	d
DMLC_DECLARE_PARAMETER	src/op_nn.cc	/^  DMLC_DECLARE_PARAMETER(BatchNormalizationParam) {$/;"	f	struct:tinyflow::BatchNormalizationParam
DMLC_DECLARE_PARAMETER	src/op_nn.cc	/^  DMLC_DECLARE_PARAMETER(ConvPoolParam) {$/;"	f	struct:tinyflow::ConvPoolParam
DMLC_DECLARE_PARAMETER	src/op_nn.cc	/^  DMLC_DECLARE_PARAMETER(LinearParam) {$/;"	f	struct:tinyflow::LinearParam
DMLC_DECLARE_PARAMETER	src/op_nn.cc	/^  DMLC_DECLARE_PARAMETER(PadParam) {$/;"	f	struct:tinyflow::PadParam
DMLC_DECLARE_PARAMETER	src/op_tensor.cc	/^  DMLC_DECLARE_PARAMETER(ReduceParam) {$/;"	f	struct:tinyflow::ReduceParam
DMLC_DECLARE_PARAMETER	src/op_tensor.cc	/^  DMLC_DECLARE_PARAMETER(ZeroParam) {$/;"	f	struct:tinyflow::ZeroParam
DMLC_DECLARE_TRAITS	dmlc-core/include/dmlc/type_traits.h	109;"	d
DMLC_DECLARE_TRAITS	nnvm/include/dmlc/type_traits.h	109;"	d
DMLC_DECLARE_TYPE_NAME	dmlc-core/include/dmlc/type_traits.h	116;"	d
DMLC_DECLARE_TYPE_NAME	nnvm/include/dmlc/type_traits.h	116;"	d
DMLC_ENABLE_STD_THREAD	dmlc-core/include/dmlc/base.h	83;"	d
DMLC_ENABLE_STD_THREAD	nnvm/include/dmlc/base.h	83;"	d
DMLC_IO_AZURE_FILESYS_H_	dmlc-core/src/io/azure_filesys.h	8;"	d
DMLC_IO_CACHED_INPUT_SPLIT_H_	dmlc-core/src/io/cached_input_split.h	10;"	d
DMLC_IO_FILESYS_H_	dmlc-core/src/io/filesys.h	8;"	d
DMLC_IO_HDFS_FILESYS_H_	dmlc-core/src/io/hdfs_filesys.h	8;"	d
DMLC_IO_H_	dmlc-core/include/dmlc/io.h	7;"	d
DMLC_IO_INPUT_SPLIT_BASE_H_	dmlc-core/src/io/input_split_base.h	8;"	d
DMLC_IO_LINE_SPLIT_H_	dmlc-core/src/io/line_split.h	8;"	d
DMLC_IO_LOCAL_FILESYS_H_	dmlc-core/src/io/local_filesys.h	8;"	d
DMLC_IO_RECORDIO_SPLIT_H_	dmlc-core/src/io/recordio_split.h	8;"	d
DMLC_IO_S3_FILESYS_H_	dmlc-core/src/io/s3_filesys.h	8;"	d
DMLC_IO_SINGLE_FILE_SPLIT_H_	dmlc-core/src/io/single_file_split.h	8;"	d
DMLC_IO_THREADED_INPUT_SPLIT_H_	dmlc-core/src/io/threaded_input_split.h	8;"	d
DMLC_IO_URI_SPEC_H_	dmlc-core/src/io/uri_spec.h	10;"	d
DMLC_JSON_ENABLE_ANY	dmlc-core/include/dmlc/json.h	336;"	d
DMLC_JSON_ENABLE_ANY	nnvm/include/dmlc/json.h	336;"	d
DMLC_JSON_ENABLE_ANY_VAR_DEF	dmlc-core/include/dmlc/json.h	324;"	d
DMLC_JSON_ENABLE_ANY_VAR_DEF	nnvm/include/dmlc/json.h	324;"	d
DMLC_JSON_H_	dmlc-core/include/dmlc/json.h	8;"	d
DMLC_JSON_H_	nnvm/include/dmlc/json.h	8;"	d
DMLC_LOGGING_H_	dmlc-core/include/dmlc/logging.h	9;"	d
DMLC_LOGGING_H_	nnvm/include/dmlc/logging.h	9;"	d
DMLC_LOG_BEFORE_THROW	dmlc-core/include/dmlc/base.h	29;"	d
DMLC_LOG_BEFORE_THROW	nnvm/include/dmlc/base.h	29;"	d
DMLC_LOG_CUSTOMIZE	dmlc-core/include/dmlc/base.h	37;"	d
DMLC_LOG_CUSTOMIZE	nnvm/include/dmlc/base.h	37;"	d
DMLC_LOG_FATAL_THROW	dmlc-core/include/dmlc/base.h	21;"	d
DMLC_LOG_FATAL_THROW	dmlc-core/test/unittest/unittest_logging.cc	2;"	d	file:
DMLC_LOG_FATAL_THROW	nnvm/include/dmlc/base.h	21;"	d
DMLC_LUA_H_	dmlc-core/include/dmlc/lua.h	30;"	d
DMLC_MEMORY_H_	dmlc-core/include/dmlc/memory.h	7;"	d
DMLC_MEMORY_H_	nnvm/include/dmlc/memory.h	7;"	d
DMLC_MEMORY_IO_H_	dmlc-core/include/dmlc/memory_io.h	7;"	d
DMLC_NO_EXCEPTION	dmlc-core/include/dmlc/base.h	182;"	d
DMLC_NO_EXCEPTION	dmlc-core/include/dmlc/base.h	185;"	d
DMLC_NO_EXCEPTION	nnvm/include/dmlc/base.h	182;"	d
DMLC_NO_EXCEPTION	nnvm/include/dmlc/base.h	185;"	d
DMLC_OMP_H_	dmlc-core/include/dmlc/omp.h	7;"	d
DMLC_PARAMETER_H_	dmlc-core/include/dmlc/parameter.h	7;"	d
DMLC_PARAMETER_H_	nnvm/include/dmlc/parameter.h	7;"	d
DMLC_RECORDIO_H_	dmlc-core/include/dmlc/recordio.h	9;"	d
DMLC_REGISTER_DATA_PARSER	dmlc-core/include/dmlc/data.h	302;"	d
DMLC_REGISTER_PARAMETER	dmlc-core/include/dmlc/parameter.h	262;"	d
DMLC_REGISTER_PARAMETER	nnvm/include/dmlc/parameter.h	264;"	d
DMLC_REGISTRY_ENABLE	dmlc-core/include/dmlc/registry.h	229;"	d
DMLC_REGISTRY_ENABLE	nnvm/include/dmlc/registry.h	229;"	d
DMLC_REGISTRY_FILE_TAG	dmlc-core/include/dmlc/registry.h	258;"	d
DMLC_REGISTRY_FILE_TAG	nnvm/include/dmlc/registry.h	258;"	d
DMLC_REGISTRY_H_	dmlc-core/include/dmlc/registry.h	7;"	d
DMLC_REGISTRY_H_	nnvm/include/dmlc/registry.h	7;"	d
DMLC_REGISTRY_LINK_TAG	dmlc-core/include/dmlc/registry.h	300;"	d
DMLC_REGISTRY_LINK_TAG	nnvm/include/dmlc/registry.h	300;"	d
DMLC_REGISTRY_REGISTER	dmlc-core/include/dmlc/registry.h	245;"	d
DMLC_REGISTRY_REGISTER	nnvm/include/dmlc/registry.h	245;"	d
DMLC_SERIALIZER_H_	dmlc-core/include/dmlc/serializer.h	8;"	d
DMLC_STRICT_CXX11	dmlc-core/include/dmlc/base.h	63;"	d
DMLC_STRICT_CXX11	nnvm/include/dmlc/base.h	63;"	d
DMLC_STR_CONCAT	dmlc-core/include/dmlc/base.h	100;"	d
DMLC_STR_CONCAT	nnvm/include/dmlc/base.h	100;"	d
DMLC_STR_CONCAT_	dmlc-core/include/dmlc/base.h	99;"	d
DMLC_STR_CONCAT_	nnvm/include/dmlc/base.h	99;"	d
DMLC_THREADEDITER_H_	dmlc-core/include/dmlc/threadediter.h	10;"	d
DMLC_THREAD_LOCAL_H_	dmlc-core/include/dmlc/thread_local.h	7;"	d
DMLC_THREAD_LOCAL_H_	nnvm/include/dmlc/thread_local.h	7;"	d
DMLC_THROW_EXCEPTION	dmlc-core/include/dmlc/base.h	181;"	d
DMLC_THROW_EXCEPTION	dmlc-core/include/dmlc/base.h	184;"	d
DMLC_THROW_EXCEPTION	nnvm/include/dmlc/base.h	181;"	d
DMLC_THROW_EXCEPTION	nnvm/include/dmlc/base.h	184;"	d
DMLC_TIMER_H_	dmlc-core/include/dmlc/timer.h	8;"	d
DMLC_TIMER_H_	nnvm/include/dmlc/timer.h	8;"	d
DMLC_TYPE_TRAITS_H_	dmlc-core/include/dmlc/type_traits.h	7;"	d
DMLC_TYPE_TRAITS_H_	nnvm/include/dmlc/type_traits.h	7;"	d
DMLC_USE_CXX11	dmlc-core/include/dmlc/base.h	57;"	d
DMLC_USE_CXX11	dmlc-core/include/dmlc/base.h	72;"	d
DMLC_USE_CXX11	dmlc-core/include/dmlc/base.h	73;"	d
DMLC_USE_CXX11	nnvm/include/dmlc/base.h	57;"	d
DMLC_USE_CXX11	nnvm/include/dmlc/base.h	72;"	d
DMLC_USE_CXX11	nnvm/include/dmlc/base.h	73;"	d
DMLC_USE_GLOG	dmlc-core/include/dmlc/base.h	11;"	d
DMLC_USE_GLOG	nnvm/include/dmlc/base.h	11;"	d
DMLC_USE_HDFS	dmlc-core/include/dmlc/base.h	42;"	d
DMLC_USE_HDFS	nnvm/include/dmlc/base.h	42;"	d
DMLC_USE_PS	dmlc-core/include/dmlc/base.h	52;"	d
DMLC_USE_PS	nnvm/include/dmlc/base.h	52;"	d
DMLC_USE_REGEX	dmlc-core/include/dmlc/base.h	88;"	d
DMLC_USE_REGEX	nnvm/include/dmlc/base.h	88;"	d
DMLC_USE_S3	dmlc-core/include/dmlc/base.h	47;"	d
DMLC_USE_S3	nnvm/include/dmlc/base.h	47;"	d
DTYPE_ASSIGN	src/op_util.h	27;"	d
Data	dmlc-core/include/dmlc/any.h	/^  union Data {$/;"	u	class:dmlc::any
Data	nnvm/include/dmlc/any.h	/^  union Data {$/;"	u	class:dmlc::any
DataIter	dmlc-core/include/dmlc/data.h	/^class DataIter {$/;"	c	namespace:dmlc
DataType	include/tinyflow/base.h	/^enum DataType {$/;"	g	namespace:tinyflow
DecRef	dmlc-core/include/dmlc/memory.h	/^  inline static void DecRef(RefBlock* block) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
DecRef	nnvm/include/dmlc/memory.h	/^  inline static void DecRef(RefBlock* block) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
DeclFloatAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  DeclFloatAST(ASTPtr var)$/;"	f	class:nnvm::fusion::DeclFloatAST
DeclFloatAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class DeclFloatAST : public AST {$/;"	c	namespace:nnvm::fusion
DeclareField	dmlc-core/include/dmlc/json.h	/^  inline void DeclareField(const std::string &key, T *addr) {$/;"	f	class:dmlc::JSONObjectReadHelper
DeclareField	nnvm/include/dmlc/json.h	/^  inline void DeclareField(const std::string &key, T *addr) {$/;"	f	class:dmlc::JSONObjectReadHelper
DeclareFieldInternal	dmlc-core/include/dmlc/json.h	/^DeclareFieldInternal(const std::string &key, T *addr, bool optional) {$/;"	f	class:dmlc::JSONObjectReadHelper
DeclareFieldInternal	nnvm/include/dmlc/json.h	/^DeclareFieldInternal(const std::string &key, T *addr, bool optional) {$/;"	f	class:dmlc::JSONObjectReadHelper
DeclareOptionalField	dmlc-core/include/dmlc/json.h	/^  inline void DeclareOptionalField(const std::string &key, T *addr) {$/;"	f	class:dmlc::JSONObjectReadHelper
DeclareOptionalField	nnvm/include/dmlc/json.h	/^  inline void DeclareOptionalField(const std::string &key, T *addr) {$/;"	f	class:dmlc::JSONObjectReadHelper
DecodeFlag	dmlc-core/include/dmlc/recordio.h	/^  inline static uint32_t DecodeFlag(uint32_t rec) {$/;"	f	class:dmlc::RecordIOWriter
DecodeLength	dmlc-core/include/dmlc/recordio.h	/^  inline static uint32_t DecodeLength(uint32_t rec) {$/;"	f	class:dmlc::RecordIOWriter
DefaultAggregateGradient	nnvm/src/pass/gradient.cc	/^NodeEntry DefaultAggregateGradient(std::vector<NodeEntry>&& v) {$/;"	f	namespace:nnvm::pass::__anon8
DefaultVarName	nnvm/src/core/symbolic.cc	/^inline std::string DefaultVarName(const std::string &op_name,$/;"	f	namespace:nnvm
Destroy	dmlc-core/include/dmlc/threadediter.h	/^inline void ThreadedIter<DType>::Destroy(void) {$/;"	f	class:dmlc::ThreadedIter
DeviceMask	include/tinyflow/base.h	/^enum DeviceMask {$/;"	g	namespace:tinyflow
DiskRowIter	dmlc-core/src/data/disk_row_iter.h	/^  explicit DiskRowIter(Parser<IndexType> *parser,$/;"	f	class:dmlc::data::DiskRowIter
DiskRowIter	dmlc-core/src/data/disk_row_iter.h	/^class DiskRowIter: public RowBlockIter<IndexType> {$/;"	c	namespace:dmlc::data
EatChar	dmlc-core/src/config.cc	/^  void EatChar() {$/;"	f	class:dmlc::Tokenizer	file:
EmptyAttr	src/op_special.cc	/^inline bool EmptyAttr(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
EnableType	dmlc-core/include/dmlc/json.h	/^  inline AnyJSONManager& EnableType(const std::string& type_name) {  \/\/ NOLINT(*)$/;"	f	class:dmlc::json::AnyJSONManager
EnableType	nnvm/include/dmlc/json.h	/^  inline AnyJSONManager& EnableType(const std::string& type_name) {  \/\/ NOLINT(*)$/;"	f	class:dmlc::json::AnyJSONManager
EncodeLRec	dmlc-core/include/dmlc/recordio.h	/^  inline static uint32_t EncodeLRec(uint32_t cflag, uint32_t length) {$/;"	f	class:dmlc::RecordIOWriter
EndArray	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::EndArray() {$/;"	f	class:dmlc::JSONWriter
EndArray	nnvm/include/dmlc/json.h	/^inline void JSONWriter::EndArray() {$/;"	f	class:dmlc::JSONWriter
EndObject	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::EndObject() {$/;"	f	class:dmlc::JSONWriter
EndObject	nnvm/include/dmlc/json.h	/^inline void JSONWriter::EndObject() {$/;"	f	class:dmlc::JSONWriter
Entry	dmlc-core/include/dmlc/concurrency.h	/^  struct Entry {$/;"	s	class:dmlc::ConcurrentBlockingQueue
Entry	dmlc-core/include/dmlc/json.h	/^  struct Entry {$/;"	s	class:dmlc::JSONObjectReadHelper
Entry	dmlc-core/include/dmlc/json.h	/^  struct Entry {$/;"	s	class:dmlc::json::AnyJSONManager
Entry	nnvm/include/dmlc/json.h	/^  struct Entry {$/;"	s	class:dmlc::JSONObjectReadHelper
Entry	nnvm/include/dmlc/json.h	/^  struct Entry {$/;"	s	class:dmlc::json::AnyJSONManager
Entry	nnvm/src/pass/saveload_json.cc	/^  struct Entry {$/;"	s	struct:nnvm::pass::__anon5::JSONNode	file:
EntryType	dmlc-core/include/dmlc/parameter.h	/^  typedef TEntry EntryType;$/;"	t	class:dmlc::parameter::FieldEntryBase
EntryType	nnvm/include/dmlc/parameter.h	/^  typedef TEntry EntryType;$/;"	t	class:dmlc::parameter::FieldEntryBase
Error	dmlc-core/include/dmlc/logging.h	/^  explicit Error(const std::string &s) : std::runtime_error(s) {}$/;"	f	struct:dmlc::Error
Error	dmlc-core/include/dmlc/logging.h	/^struct Error : public std::runtime_error {$/;"	s	namespace:dmlc
Error	nnvm/include/dmlc/logging.h	/^  explicit Error(const std::string &s) : std::runtime_error(s) {}$/;"	f	struct:dmlc::Error
Error	nnvm/include/dmlc/logging.h	/^struct Error : public std::runtime_error {$/;"	s	namespace:dmlc
ErrorEntry	nnvm/src/c_api/c_api_error.cc	/^struct ErrorEntry {$/;"	s	file:
Eval	dmlc-core/include/dmlc/lua.h	/^  inline LuaRef Eval(const std::string& lua_code) {$/;"	f	class:dmlc::LuaState
Eval	dmlc-core/include/dmlc/lua.h	/^inline LuaRef LuaState::Eval(const char* lua_code) {$/;"	f	class:dmlc::LuaState
ExSocket	dmlc-core/tracker/dmlc_tracker/tracker.py	/^class ExSocket(object):$/;"	c
ExecEntry	src/session.cc	/^  struct ExecEntry {$/;"	s	class:tinyflow::TorchSession	file:
Extension	nnvm/python/setup.py	/^        from distutils.extension import Extension$/;"	i
ExtractNextChunk	dmlc-core/src/io/input_split_base.cc	/^bool InputSplitBase::ExtractNextChunk(Blob *out_chunk, Chunk *chunk) {$/;"	f	class:dmlc::io::InputSplitBase
ExtractNextRecord	dmlc-core/src/io/line_split.cc	/^bool LineSplitter::ExtractNextRecord(Blob *out_rec, Chunk *chunk) {$/;"	f	class:dmlc::io::LineSplitter
ExtractNextRecord	dmlc-core/src/io/recordio_split.cc	/^bool RecordIOSplitter::ExtractNextRecord(Blob *out_rec, Chunk *chunk) {$/;"	f	class:dmlc::io::RecordIOSplitter
Factory	dmlc-core/include/dmlc/data.h	/^  typedef Parser<IndexType>* (*Factory)$/;"	t	class:dmlc::Parser
FieldAccessEntry	dmlc-core/include/dmlc/parameter.h	/^  FieldAccessEntry()$/;"	f	class:dmlc::parameter::FieldAccessEntry
FieldAccessEntry	dmlc-core/include/dmlc/parameter.h	/^class FieldAccessEntry {$/;"	c	namespace:dmlc::parameter
FieldAccessEntry	nnvm/include/dmlc/parameter.h	/^  FieldAccessEntry()$/;"	f	class:dmlc::parameter::FieldAccessEntry
FieldAccessEntry	nnvm/include/dmlc/parameter.h	/^class FieldAccessEntry {$/;"	c	namespace:dmlc::parameter
FieldEntry	dmlc-core/include/dmlc/parameter.h	/^  FieldEntry<int>() : is_enum_(false) {}$/;"	f	class:dmlc::parameter::FieldEntry
FieldEntry	dmlc-core/include/dmlc/parameter.h	/^class FieldEntry :$/;"	c	namespace:dmlc::parameter
FieldEntry	dmlc-core/include/dmlc/parameter.h	/^class FieldEntry<bool>$/;"	c	namespace:dmlc::parameter
FieldEntry	dmlc-core/include/dmlc/parameter.h	/^class FieldEntry<int>$/;"	c	namespace:dmlc::parameter
FieldEntry	dmlc-core/include/dmlc/parameter.h	/^class FieldEntry<std::string>$/;"	c	namespace:dmlc::parameter
FieldEntry	nnvm/include/dmlc/parameter.h	/^  FieldEntry<int>() : is_enum_(false) {}$/;"	f	class:dmlc::parameter::FieldEntry
FieldEntry	nnvm/include/dmlc/parameter.h	/^class FieldEntry :$/;"	c	namespace:dmlc::parameter
FieldEntry	nnvm/include/dmlc/parameter.h	/^class FieldEntry<bool>$/;"	c	namespace:dmlc::parameter
FieldEntry	nnvm/include/dmlc/parameter.h	/^class FieldEntry<int>$/;"	c	namespace:dmlc::parameter
FieldEntry	nnvm/include/dmlc/parameter.h	/^class FieldEntry<std::string>$/;"	c	namespace:dmlc::parameter
FieldEntryBase	dmlc-core/include/dmlc/parameter.h	/^class FieldEntryBase : public FieldAccessEntry {$/;"	c	namespace:dmlc::parameter
FieldEntryBase	nnvm/include/dmlc/parameter.h	/^class FieldEntryBase : public FieldAccessEntry {$/;"	c	namespace:dmlc::parameter
FieldEntryNumeric	dmlc-core/include/dmlc/parameter.h	/^  FieldEntryNumeric()$/;"	f	class:dmlc::parameter::FieldEntryNumeric
FieldEntryNumeric	dmlc-core/include/dmlc/parameter.h	/^class FieldEntryNumeric$/;"	c	namespace:dmlc::parameter
FieldEntryNumeric	nnvm/include/dmlc/parameter.h	/^  FieldEntryNumeric()$/;"	f	class:dmlc::parameter::FieldEntryNumeric
FieldEntryNumeric	nnvm/include/dmlc/parameter.h	/^class FieldEntryNumeric$/;"	c	namespace:dmlc::parameter
FileInfo	dmlc-core/src/io/filesys.h	/^  FileInfo() : size(0), type(kFile) {}$/;"	f	struct:dmlc::io::FileInfo
FileInfo	dmlc-core/src/io/filesys.h	/^struct FileInfo {$/;"	s	namespace:dmlc::io
FileStream	dmlc-core/src/io/local_filesys.cc	/^  explicit FileStream(FILE *fp, bool use_stdio)$/;"	f	class:dmlc::io::FileStream
FileStream	dmlc-core/src/io/local_filesys.cc	/^class FileStream : public SeekStream {$/;"	c	namespace:dmlc::io	file:
FileSystem	dmlc-core/src/io/filesys.h	/^class FileSystem {$/;"	c	namespace:dmlc::io
FileType	dmlc-core/src/io/filesys.h	/^enum FileType {$/;"	g	namespace:dmlc::io
FillBuffer	dmlc-core/src/io/s3_filesys.cc	/^int CURLReadStreamBase::FillBuffer(size_t nwant) {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
FillData	dmlc-core/src/data/text_parser.h	/^FillData(std::vector<RowBlockContainer<IndexType> > *data) {$/;"	f	class:dmlc::data::TextParserBase
Find	dmlc-core/include/dmlc/parameter.h	/^  inline FieldAccessEntry *Find(const std::string &key) const {$/;"	f	class:dmlc::parameter::ParamManager
Find	dmlc-core/include/dmlc/registry.h	/^  inline static const EntryType *Find(const std::string &name) {$/;"	f	class:dmlc::Registry
Find	nnvm/include/dmlc/parameter.h	/^  inline FieldAccessEntry *Find(const std::string &key) const {$/;"	f	class:dmlc::parameter::ParamManager
Find	nnvm/include/dmlc/registry.h	/^  inline static const EntryType *Find(const std::string &name) {$/;"	f	class:dmlc::Registry
FindBestPath	nnvm/src/pass/graph_algorithm.h	/^inline uint32_t FindBestPath($/;"	f	namespace:nnvm::pass
FindHttpError	dmlc-core/src/io/s3_filesys.cc	/^inline bool FindHttpError(const std::string &header) {$/;"	f	namespace:dmlc::io::s3
FindLastRecordBegin	dmlc-core/src/io/line_split.cc	/^const char* LineSplitter::FindLastRecordBegin(const char *begin,$/;"	f	class:dmlc::io::LineSplitter
FindLastRecordBegin	dmlc-core/src/io/recordio_split.cc	/^const char* RecordIOSplitter::FindLastRecordBegin(const char *begin,$/;"	f	class:dmlc::io::RecordIOSplitter
FindLastRecordBegin	dmlc-core/src/io/single_file_split.h	/^  inline const char* FindLastRecordBegin(const char *begin,$/;"	f	class:dmlc::io::SingleFileSplit
FindNextIndex	dmlc-core/src/config.cc	/^void Config::ConfigIterator::FindNextIndex() {$/;"	f	class:dmlc::Config::ConfigIterator
FindNextRecord	dmlc-core/src/io/single_file_split.h	/^  inline char* FindNextRecord(char *begin, char *end) {$/;"	f	class:dmlc::io::SingleFileSplit
FindNextRecordIOHead	dmlc-core/src/recordio.cc	/^inline char *FindNextRecordIOHead(char *begin, char *end) {$/;"	f	namespace:dmlc
FindPassDep	nnvm/src/core/pass.cc	/^const PassFunctionReg* FindPassDep(const std::string&attr_name) {$/;"	f	namespace:nnvm
Finish	dmlc-core/src/io/s3_filesys.cc	/^void WriteStream::Finish(void) {$/;"	f	class:dmlc::io::s3::WriteStream
FlatTo2D	nnvm/include/nnvm/tuple.h	/^  inline mshadow::Shape<2> FlatTo2D(void) const {$/;"	f	class:nnvm::TShape
FlatTo3D	nnvm/include/nnvm/tuple.h	/^  inline mshadow::Shape<3> FlatTo3D(index_t axis) const {$/;"	f	class:nnvm::TShape
FlatTo3D	nnvm/include/nnvm/tuple.h	/^  inline mshadow::Shape<3> FlatTo3D(index_t axis_begin, index_t axis_end) const {$/;"	f	class:nnvm::TShape
FloatAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  FloatAST(float val)$/;"	f	class:nnvm::fusion::FloatAST
FloatAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class FloatAST : public AST {$/;"	c	namespace:nnvm::fusion
FunctionRegEntryBase	dmlc-core/include/dmlc/registry.h	/^class FunctionRegEntryBase {$/;"	c	namespace:dmlc
FunctionRegEntryBase	nnvm/include/dmlc/registry.h	/^class FunctionRegEntryBase {$/;"	c	namespace:dmlc
Fusion	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^Graph Fusion(Graph&& src) {$/;"	f	namespace:nnvm::fusion::__anon4
FusionShape	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^inline bool FusionShape(const NodeAttrs& attrs,$/;"	f	namespace:nnvm::fusion::__anon4
GTEST_INC	dmlc-core/test/unittest/dmlc_unittest.mk	/^GTEST_INC=$(GTEST_PATH)\/include\/$/;"	m
GTEST_INC	nnvm/tests/cpp/unittest.mk	/^GTEST_INC=$(GTEST_PATH)\/include\/$/;"	m
GTEST_LIB	dmlc-core/test/unittest/dmlc_unittest.mk	/^GTEST_LIB=$(GTEST_PATH)\/lib\/$/;"	m
GTEST_LIB	nnvm/tests/cpp/unittest.mk	/^GTEST_LIB=$(GTEST_PATH)\/lib\/$/;"	m
GTEST_PATH	dmlc-core/make/config.mk	/^GTEST_PATH=$/;"	m
GenASTPtr	nnvm/plugin/nnvm-fusion/src/codegen.cc	/^ASTPtr GenASTPtr(const InternalNodePtr internal, ASTPtrIter begin, ASTPtrIter end) {$/;"	f	namespace:nnvm::fusion::__anon2
GenerateRTCClosure	src/session.cc	/^FOpExec TorchExecutor::GenerateRTCClosure(RTC& rtc,$/;"	f	class:tinyflow::TorchExecutor
Get	dmlc-core/include/dmlc/lua.h	/^  static inline ContainerType Get(lua_State* L, int index, LuaState* s) {$/;"	f	struct:dmlc::lua_stack::MapHandler
Get	dmlc-core/include/dmlc/lua.h	/^  static inline LuaRef Get(lua_State* L, int index, LuaState* s) {$/;"	f	struct:dmlc::lua_stack::Handler
Get	dmlc-core/include/dmlc/lua.h	/^  static inline T Get(lua_State* L, int index, LuaState* s) {$/;"	f	struct:dmlc::lua_stack::NumberHandler
Get	dmlc-core/include/dmlc/lua.h	/^  static inline std::string Get(lua_State* L, int index, LuaState* s) {$/;"	f	struct:dmlc::lua_stack::Handler
Get	dmlc-core/include/dmlc/lua.h	/^  static inline std::vector<T> Get(lua_State* L, int index, LuaState* s) {$/;"	f	struct:dmlc::lua_stack::Handler
Get	dmlc-core/include/dmlc/lua.h	/^inline T LuaRef::Get() const {$/;"	f	class:dmlc::LuaRef
Get	dmlc-core/include/dmlc/parameter.h	/^  inline DType &Get(void *head) const {$/;"	f	class:dmlc::parameter::FieldEntryBase
Get	dmlc-core/include/dmlc/thread_local.h	/^  static T* Get() {$/;"	f	class:dmlc::ThreadLocalStore
Get	nnvm/include/dmlc/parameter.h	/^  inline DType &Get(void *head) const {$/;"	f	class:dmlc::parameter::FieldEntryBase
Get	nnvm/include/dmlc/thread_local.h	/^  static T* Get() {$/;"	f	class:dmlc::ThreadLocalStore
Get	nnvm/src/core/op.cc	/^const Op* Op::Get(const std::string& name) {$/;"	f	class:nnvm::Op
Get	src/torch/torch_util.h	/^  static inline nnvm::TShape Get(lua_State* L, int index, LuaState* s) {$/;"	f	struct:dmlc::lua_stack::Handler
GetAttr	nnvm/include/nnvm/graph.h	/^inline const T& Graph::GetAttr(const std::string& attr_name) const {$/;"	f	class:nnvm::Graph
GetAttr	nnvm/include/nnvm/op.h	/^inline const OpMap<ValueType>& Op::GetAttr(const std::string& key) {$/;"	f	class:nnvm::Op
GetAttr	nnvm/src/core/symbolic.cc	/^bool Symbol::GetAttr(const std::string& key, std::string* out) const {$/;"	f	class:nnvm::Symbol
GetAttrMap	nnvm/src/core/op.cc	/^const any* Op::GetAttrMap(const std::string& key) {$/;"	f	class:nnvm::Op
GetBlock	dmlc-core/src/data/row_block.h	/^RowBlockContainer<IndexType>::GetBlock(void) const {$/;"	f	class:dmlc::data::RowBlockContainer
GetDateString	dmlc-core/src/io/s3_filesys.cc	/^inline std::string GetDateString(void) {$/;"	f	namespace:dmlc::io::s3
GetDict	dmlc-core/include/dmlc/parameter.h	/^  inline std::vector<std::pair<std::string, std::string> > GetDict(void * head) const {$/;"	f	class:dmlc::parameter::ParamManager
GetDict	nnvm/include/dmlc/parameter.h	/^  inline std::vector<std::pair<std::string, std::string> > GetDict(void * head) const {$/;"	f	class:dmlc::parameter::ParamManager
GetEnv	dmlc-core/include/dmlc/parameter.h	/^inline ValueType GetEnv(const char *key,$/;"	f	namespace:dmlc
GetEnv	nnvm/include/dmlc/parameter.h	/^inline ValueType GetEnv(const char *key,$/;"	f	namespace:dmlc
GetFieldInfo	dmlc-core/include/dmlc/parameter.h	/^  inline std::vector<ParamFieldInfo> GetFieldInfo() const {$/;"	f	class:dmlc::parameter::ParamManager
GetFieldInfo	dmlc-core/include/dmlc/parameter.h	/^  virtual ParamFieldInfo GetFieldInfo() const {$/;"	f	class:dmlc::parameter::FieldEntry
GetFieldInfo	dmlc-core/include/dmlc/parameter.h	/^  virtual ParamFieldInfo GetFieldInfo() const {$/;"	f	class:dmlc::parameter::FieldEntryBase
GetFieldInfo	nnvm/include/dmlc/parameter.h	/^  inline std::vector<ParamFieldInfo> GetFieldInfo() const {$/;"	f	class:dmlc::parameter::ParamManager
GetFieldInfo	nnvm/include/dmlc/parameter.h	/^  virtual ParamFieldInfo GetFieldInfo() const {$/;"	f	class:dmlc::parameter::FieldEntry
GetFieldInfo	nnvm/include/dmlc/parameter.h	/^  virtual ParamFieldInfo GetFieldInfo() const {$/;"	f	class:dmlc::parameter::FieldEntryBase
GetFusionNode	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^NodePtr GetFusionNode(Graph& g, NodePtr node,$/;"	f	namespace:nnvm::fusion::__anon4
GetInstance	dmlc-core/src/io.cc	/^FileSystem *FileSystem::GetInstance(const URI &path) {$/;"	f	class:dmlc::io::FileSystem
GetInstance	dmlc-core/src/io/azure_filesys.h	/^  inline static AzureFileSystem *GetInstance(void) {$/;"	f	class:dmlc::io::AzureFileSystem
GetInstance	dmlc-core/src/io/hdfs_filesys.h	/^  inline static HDFSFileSystem *GetInstance(const std::string &namenode = "default") {$/;"	f	class:dmlc::io::HDFSFileSystem
GetInstance	dmlc-core/src/io/local_filesys.h	/^  inline static LocalFileSystem *GetInstance(void) {$/;"	f	class:dmlc::io::LocalFileSystem
GetInstance	dmlc-core/src/io/s3_filesys.h	/^  inline static S3FileSystem *GetInstance(void) {$/;"	f	class:dmlc::io::S3FileSystem
GetInternals	nnvm/src/core/symbolic.cc	/^Symbol Symbol::GetInternals() const {$/;"	f	class:nnvm::Symbol
GetKeys	nnvm/src/core/symbolic.cc	/^inline std::vector<std::string> GetKeys($/;"	f	namespace:nnvm
GetNext	dmlc-core/src/io/s3_filesys.cc	/^  inline bool GetNext(const char *key,$/;"	f	struct:dmlc::io::s3::XMLIter
GetNextToken	dmlc-core/src/config.cc	/^  bool GetNextToken(Token* tok) {$/;"	f	class:dmlc::Tokenizer
GetParam	dmlc-core/src/config.cc	/^const string& Config::GetParam(const string& key) const {$/;"	f	class:dmlc::Config
GetPathInfo	dmlc-core/src/io/azure_filesys.h	/^  virtual FileInfo GetPathInfo(const URI &path) { return FileInfo(); }$/;"	f	class:dmlc::io::AzureFileSystem
GetPathInfo	dmlc-core/src/io/hdfs_filesys.cc	/^FileInfo HDFSFileSystem::GetPathInfo(const URI &path) {$/;"	f	class:dmlc::io::HDFSFileSystem
GetPathInfo	dmlc-core/src/io/local_filesys.cc	/^FileInfo LocalFileSystem::GetPathInfo(const URI &path) {$/;"	f	class:dmlc::io::LocalFileSystem
GetPathInfo	dmlc-core/src/io/s3_filesys.cc	/^FileInfo S3FileSystem::GetPathInfo(const URI &path) {$/;"	f	class:dmlc::io::S3FileSystem
GetStringValue	dmlc-core/include/dmlc/parameter.h	/^  virtual std::string GetStringValue(void *head) const {$/;"	f	class:dmlc::parameter::FieldEntryBase
GetStringValue	nnvm/include/dmlc/parameter.h	/^  virtual std::string GetStringValue(void *head) const {$/;"	f	class:dmlc::parameter::FieldEntryBase
GetTBlob	src/torch/torch_util.h	/^  TBlob GetTBlob(LuaRef tensor) {$/;"	f	class:tinyflow::TorchState
GetTime	dmlc-core/include/dmlc/timer.h	/^inline double GetTime(void) {$/;"	f	namespace:dmlc
GetTime	nnvm/include/dmlc/timer.h	/^inline double GetTime(void) {$/;"	f	namespace:dmlc
GetUDataPtr	dmlc-core/include/dmlc/lua.h	/^inline T* LuaRef::GetUDataPtr() const {$/;"	f	class:dmlc::LuaRef
GetVariableNum	nnvm/plugin/nnvm-fusion/src/codegen.cc	/^uint32_t GetVariableNum(const InternalNodePtr internal) {$/;"	f	namespace:nnvm::fusion::__anon2
Global	dmlc-core/include/dmlc/json.h	/^  inline static AnyJSONManager* Global() {$/;"	f	class:dmlc::json::AnyJSONManager
Global	nnvm/include/dmlc/json.h	/^  inline static AnyJSONManager* Global() {$/;"	f	class:dmlc::json::AnyJSONManager
Global	nnvm/src/core/op.cc	/^  static OpManager* Global() {$/;"	f	struct:nnvm::OpManager
GradEntry	nnvm/src/pass/gradient.cc	/^struct GradEntry {$/;"	s	namespace:nnvm::pass::__anon8	file:
Gradient	nnvm/include/nnvm/pass_functions.h	/^inline Graph Gradient($/;"	f	namespace:nnvm::pass
Gradient	nnvm/src/pass/gradient.cc	/^Graph Gradient(Graph src) {$/;"	f	namespace:nnvm::pass::__anon8
GradientDescentOptimizer	python/tinyflow/train.py	/^class GradientDescentOptimizer(object):$/;"	c
Graph	nnvm/include/nnvm/graph.h	/^class Graph {$/;"	c	namespace:nnvm
Graph	nnvm/python/nnvm/graph.py	/^class Graph(object):$/;"	c
GraphAllocator	nnvm/src/pass/plan_memory.cc	/^  explicit GraphAllocator(const IndexedGraph* idx) : idx_(idx) {$/;"	f	class:nnvm::pass::__anon7::GraphAllocator
GraphAllocator	nnvm/src/pass/plan_memory.cc	/^class GraphAllocator {$/;"	c	namespace:nnvm::pass::__anon7	file:
GraphHandle	nnvm/include/nnvm/c_api.h	/^typedef void *GraphHandle;$/;"	t
GraphHandle	nnvm/python/nnvm/_base.py	/^GraphHandle = ctypes.c_void_p$/;"	v
GraphHandle	nnvm/python/nnvm/graph.py	/^from ._base import GraphHandle, SymbolHandle$/;"	i
Group	nnvm/python/nnvm/symbol.py	/^def Group(symbols):$/;"	f
HADOOP_HDFS_HOME	dmlc-core/make/dmlc.mk	/^	HADOOP_HDFS_HOME=$(HADOOP_HOME)$/;"	m
HDFSFileSystem	dmlc-core/src/io/hdfs_filesys.cc	/^HDFSFileSystem::HDFSFileSystem(const std::string &namenode): namenode_(namenode) {$/;"	f	class:dmlc::io::HDFSFileSystem
HDFSFileSystem	dmlc-core/src/io/hdfs_filesys.h	/^class HDFSFileSystem : public FileSystem {$/;"	c	namespace:dmlc::io
HDFSStream	dmlc-core/src/io/hdfs_filesys.cc	/^  HDFSStream(hdfsFS fs,$/;"	f	class:dmlc::io::HDFSStream
HDFSStream	dmlc-core/src/io/hdfs_filesys.cc	/^class HDFSStream : public SeekStream {$/;"	c	namespace:dmlc::io	file:
HDFS_INC_PATH	dmlc-core/make/dmlc.mk	/^		HDFS_INC_PATH=$(HADOOP_HDFS_HOME)\/include$/;"	m
HDFS_LIB_PATH	dmlc-core/make/dmlc.mk	/^		HDFS_LIB_PATH=$(HADOOP_HDFS_HOME)\/lib\/native$/;"	m
Handler	dmlc-core/include/dmlc/json.h	/^struct Handler {$/;"	s	namespace:dmlc::json
Handler	dmlc-core/include/dmlc/json.h	/^struct Handler<any> {$/;"	s	namespace:dmlc::json
Handler	dmlc-core/include/dmlc/json.h	/^struct Handler<std::list<T> > : public ArrayHandler<std::list<T> > {$/;"	s	namespace:dmlc::json
Handler	dmlc-core/include/dmlc/json.h	/^struct Handler<std::map<std::string, V> > : public MapHandler<std::map<std::string, V> > {$/;"	s	namespace:dmlc::json
Handler	dmlc-core/include/dmlc/json.h	/^struct Handler<std::pair<K, V> > {$/;"	s	namespace:dmlc::json
Handler	dmlc-core/include/dmlc/json.h	/^struct Handler<std::string> {$/;"	s	namespace:dmlc::json
Handler	dmlc-core/include/dmlc/json.h	/^struct Handler<std::unordered_map<std::string, V> >$/;"	s	namespace:dmlc::json
Handler	dmlc-core/include/dmlc/json.h	/^struct Handler<std::vector<T> > : public ArrayHandler<std::vector<T> > {$/;"	s	namespace:dmlc::json
Handler	dmlc-core/include/dmlc/lua.h	/^struct Handler$/;"	s	namespace:dmlc::lua_stack
Handler	dmlc-core/include/dmlc/lua.h	/^struct Handler<LuaRef> {$/;"	s	namespace:dmlc::lua_stack
Handler	dmlc-core/include/dmlc/lua.h	/^struct Handler<std::nullptr_t> {$/;"	s	namespace:dmlc::lua_stack
Handler	dmlc-core/include/dmlc/lua.h	/^struct Handler<std::string> {$/;"	s	namespace:dmlc::lua_stack
Handler	dmlc-core/include/dmlc/lua.h	/^struct Handler<std::unordered_map<K, V> >$/;"	s	namespace:dmlc::lua_stack
Handler	dmlc-core/include/dmlc/lua.h	/^struct Handler<std::vector<T> > {$/;"	s	namespace:dmlc::lua_stack
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler {$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::basic_string<T> > {$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::deque<T> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::list<T> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::map<K, V> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::multimap<K, V> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::multiset<T> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::pair<TA, TB> > {$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::set<T> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::unordered_map<K, V> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::unordered_multimap<K, V> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::unordered_multiset<T> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::unordered_set<T> >$/;"	s	namespace:dmlc::serializer
Handler	dmlc-core/include/dmlc/serializer.h	/^struct Handler<std::vector<T> > {$/;"	s	namespace:dmlc::serializer
Handler	nnvm/include/dmlc/json.h	/^struct Handler {$/;"	s	namespace:dmlc::json
Handler	nnvm/include/dmlc/json.h	/^struct Handler<any> {$/;"	s	namespace:dmlc::json
Handler	nnvm/include/dmlc/json.h	/^struct Handler<std::list<T> > : public ArrayHandler<std::list<T> > {$/;"	s	namespace:dmlc::json
Handler	nnvm/include/dmlc/json.h	/^struct Handler<std::map<std::string, V> > : public MapHandler<std::map<std::string, V> > {$/;"	s	namespace:dmlc::json
Handler	nnvm/include/dmlc/json.h	/^struct Handler<std::pair<K, V> > {$/;"	s	namespace:dmlc::json
Handler	nnvm/include/dmlc/json.h	/^struct Handler<std::string> {$/;"	s	namespace:dmlc::json
Handler	nnvm/include/dmlc/json.h	/^struct Handler<std::unordered_map<std::string, V> >$/;"	s	namespace:dmlc::json
Handler	nnvm/include/dmlc/json.h	/^struct Handler<std::vector<T> > : public ArrayHandler<std::vector<T> > {$/;"	s	namespace:dmlc::json
Handler	nnvm/src/pass/saveload_json.cc	/^struct Handler<std::shared_ptr<any> > {$/;"	s	namespace:dmlc::json	file:
Handler	src/torch/torch_util.h	/^struct Handler<nnvm::TShape> {$/;"	s	namespace:dmlc::lua_stack
HintChunkSize	dmlc-core/include/dmlc/io.h	/^  virtual void HintChunkSize(size_t chunk_size) {}$/;"	f	class:dmlc::InputSplit
HintChunkSize	dmlc-core/src/io/cached_input_split.h	/^  virtual void HintChunkSize(size_t chunk_size) {$/;"	f	class:dmlc::io::CachedInputSplit
HintChunkSize	dmlc-core/src/io/input_split_base.h	/^  virtual void HintChunkSize(size_t chunk_size) {$/;"	f	class:dmlc::io::InputSplitBase
HintChunkSize	dmlc-core/src/io/single_file_split.h	/^  virtual void HintChunkSize(size_t chunk_size) {$/;"	f	class:dmlc::io::SingleFileSplit
HintChunkSize	dmlc-core/src/io/threaded_input_split.h	/^  virtual void HintChunkSize(size_t chunk_size) {$/;"	f	class:dmlc::io::ThreadedInputSplit
HttpReadStream	dmlc-core/src/io/s3_filesys.cc	/^  explicit HttpReadStream(const URI &path)$/;"	f	class:dmlc::io::s3::HttpReadStream
HttpReadStream	dmlc-core/src/io/s3_filesys.cc	/^class HttpReadStream : public CURLReadStreamBase {$/;"	c	namespace:dmlc::io::s3	file:
I18NSPHINXOPTS	dmlc-core/doc/Makefile	/^I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
IfThenElse	dmlc-core/include/dmlc/serializer.h	/^struct IfThenElse<false, Then, Else, T> {$/;"	s	namespace:dmlc::serializer
IfThenElse	dmlc-core/include/dmlc/serializer.h	/^struct IfThenElse<true, Then, Else, T> {$/;"	s	namespace:dmlc::serializer
IfThenElseType	dmlc-core/include/dmlc/type_traits.h	/^struct IfThenElseType<false, Then, Else> {$/;"	s	namespace:dmlc
IfThenElseType	dmlc-core/include/dmlc/type_traits.h	/^struct IfThenElseType<true, Then, Else> {$/;"	s	namespace:dmlc
IfThenElseType	nnvm/include/dmlc/type_traits.h	/^struct IfThenElseType<false, Then, Else> {$/;"	s	namespace:dmlc
IfThenElseType	nnvm/include/dmlc/type_traits.h	/^struct IfThenElseType<true, Then, Else> {$/;"	s	namespace:dmlc
InBuf	dmlc-core/include/dmlc/io.h	/^    explicit InBuf(size_t buffer_size)$/;"	f	class:dmlc::istream::InBuf
InBuf	dmlc-core/include/dmlc/io.h	/^  class InBuf : public std::streambuf {$/;"	c	class:dmlc::istream
IncRef	dmlc-core/include/dmlc/memory.h	/^  inline static void IncRef(RefBlock* block) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
IncRef	nnvm/include/dmlc/memory.h	/^  inline static void IncRef(RefBlock* block) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
IndexedGraph	nnvm/include/nnvm/graph.h	/^class IndexedGraph {$/;"	c	namespace:nnvm
IndexedGraph	nnvm/src/core/graph.cc	/^IndexedGraph::IndexedGraph(const Graph &g) {$/;"	f	class:nnvm::IndexedGraph
InferAttr	nnvm/src/pass/infer_shape_type.cc	/^Graph InferAttr(Graph &&ret,$/;"	f	namespace:nnvm::pass::__anon10
InferShape	nnvm/include/nnvm/pass_functions.h	/^inline Graph InferShape(Graph graph,$/;"	f	namespace:nnvm::pass
InferType	nnvm/include/nnvm/pass_functions.h	/^inline Graph InferType(Graph graph,$/;"	f	namespace:nnvm::pass
Init	dmlc-core/include/dmlc/parameter.h	/^  inline void Init(const Container &kwargs,$/;"	f	struct:dmlc::Parameter
Init	dmlc-core/include/dmlc/parameter.h	/^  inline void Init(const std::string &key,$/;"	f	class:dmlc::parameter::FieldEntryBase
Init	dmlc-core/include/dmlc/threadediter.h	/^Init(Producer *producer, bool pass_ownership) {$/;"	f	class:dmlc::ThreadedIter
Init	dmlc-core/include/dmlc/threadediter.h	/^Init(std::function<bool(DType **)> next,$/;"	f	class:dmlc::ThreadedIter
Init	dmlc-core/src/data/basic_row_iter.h	/^inline void BasicRowIter<IndexType>::Init(Parser<IndexType> *parser) {$/;"	f	class:dmlc::data::BasicRowIter
Init	dmlc-core/src/io/input_split_base.cc	/^void InputSplitBase::Init(FileSystem *filesys,$/;"	f	class:dmlc::io::InputSplitBase
Init	dmlc-core/src/io/s3_filesys.cc	/^void CURLReadStreamBase::Init(size_t begin_bytes) {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
Init	dmlc-core/src/io/s3_filesys.cc	/^void WriteStream::Init(void) {$/;"	f	class:dmlc::io::s3::WriteStream
Init	nnvm/include/dmlc/parameter.h	/^  inline void Init(const Container &kwargs,$/;"	f	struct:dmlc::Parameter
Init	nnvm/include/dmlc/parameter.h	/^  inline void Init(const std::string &key,$/;"	f	class:dmlc::parameter::FieldEntryBase
Init	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^void RTC::Init() {$/;"	f	class:nnvm::fusion::RTC
Init	nnvm/src/pass/plan_memory.cc	/^  void Init(size_t match_range, uint32_t num_match_color) {$/;"	f	class:nnvm::pass::__anon7::GraphAllocator	file:
Init	src/session.cc	/^void TorchExecutor::Init(nnvm::Symbol symbol,$/;"	f	class:tinyflow::TorchExecutor
InitAllowUnknown	dmlc-core/include/dmlc/parameter.h	/^  InitAllowUnknown(const Container &kwargs) {$/;"	f	struct:dmlc::Parameter
InitAllowUnknown	nnvm/include/dmlc/parameter.h	/^  InitAllowUnknown(const Container &kwargs) {$/;"	f	struct:dmlc::Parameter
InitCachedIter	dmlc-core/src/io/cached_input_split.h	/^inline bool CachedInputSplit::InitCachedIter(void) {$/;"	f	class:dmlc::io::CachedInputSplit
InitGPU	src/torch/torch_util.h	/^  inline void InitGPU() {$/;"	f	class:tinyflow::TorchState
InitInputFileInfo	dmlc-core/src/io/input_split_base.cc	/^void InputSplitBase::InitInputFileInfo(const std::string& uri) {$/;"	f	class:dmlc::io::InputSplitBase
InitLogging	dmlc-core/include/dmlc/logging.h	/^inline void InitLogging(const char* argv0) {$/;"	f	namespace:dmlc
InitLogging	nnvm/include/dmlc/logging.h	/^inline void InitLogging(const char* argv0) {$/;"	f	namespace:dmlc
InitPreprocIter	dmlc-core/src/io/cached_input_split.h	/^inline void CachedInputSplit:: InitPreprocIter(void) {$/;"	f	class:dmlc::io::CachedInputSplit
InitRequest	dmlc-core/src/io/s3_filesys.cc	/^  virtual void InitRequest(size_t begin_bytes,$/;"	f	class:dmlc::io::s3::HttpReadStream
InitRequest	dmlc-core/src/io/s3_filesys.cc	/^void ReadStream::InitRequest(size_t begin_bytes,$/;"	f	class:dmlc::io::s3::ReadStream
InplaceIn0Out0	nnvm/example/src/operator.cc	/^inline std::vector<std::pair<int, int> > InplaceIn0Out0(const NodeAttrs& attrs) {$/;"	f	namespace:myproject
InplaceIn0Out0	src/op_util.h	/^inline std::vector<std::pair<int, int> > InplaceIn0Out0(const NodeAttrs& attrs) {$/;"	f	namespace:tinyflow
InplaceIn1Out0	src/op_util.h	/^inline std::vector<std::pair<int, int> > InplaceIn1Out0(const NodeAttrs& attrs) {$/;"	f	namespace:tinyflow
InputSplit	dmlc-core/include/dmlc/io.h	/^class InputSplit {$/;"	c	namespace:dmlc
InputSplitBase	dmlc-core/src/io/input_split_base.h	/^  InputSplitBase()$/;"	f	class:dmlc::io::InputSplitBase
InputSplitBase	dmlc-core/src/io/input_split_base.h	/^class InputSplitBase : public InputSplit {$/;"	c	namespace:dmlc::io
Insert	dmlc-core/src/config.cc	/^void Config::Insert(const std::string& key, const std::string& value, bool is_string) {$/;"	f	class:dmlc::Config
IntAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  IntAST(int val)$/;"	f	class:nnvm::fusion::IntAST
IntAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class IntAST : public AST {$/;"	c	namespace:nnvm::fusion
IntProducer	dmlc-core/test/unittest/unittest_threaditer.cc	/^  IntProducer(int maxcap, int sleep)$/;"	f	struct:producer_test::IntProducer
IntProducer	dmlc-core/test/unittest/unittest_threaditer.cc	/^struct IntProducer : public ThreadedIter<int>::Producer {$/;"	s	namespace:producer_test	file:
IsAtomic	nnvm/src/core/symbolic.cc	/^inline bool IsAtomic(const std::vector<NodeEntry>& outputs) {$/;"	f	namespace:nnvm
IsFusible	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^bool IsFusible(Graph& g, NodePtr n1, NodePtr n2) {$/;"	f	namespace:nnvm::fusion::__anon4
IsGenuineString	dmlc-core/src/config.cc	/^bool Config::IsGenuineString(const std::string& key) const {$/;"	f	class:dmlc::Config
IsMutate	nnvm/src/pass/order_mutation.cc	/^inline bool IsMutate(const std::vector<uint32_t>& mutate_inputs, uint32_t i) {$/;"	f	namespace:nnvm::pass::__anon6
JSONGraph	nnvm/src/pass/saveload_json.cc	/^struct JSONGraph {$/;"	s	namespace:nnvm::pass::__anon5	file:
JSONNode	nnvm/src/pass/saveload_json.cc	/^struct JSONNode {$/;"	s	namespace:nnvm::pass::__anon5	file:
JSONObjectReadHelper	dmlc-core/include/dmlc/json.h	/^class JSONObjectReadHelper {$/;"	c	namespace:dmlc
JSONObjectReadHelper	nnvm/include/dmlc/json.h	/^class JSONObjectReadHelper {$/;"	c	namespace:dmlc
JSONReader	dmlc-core/include/dmlc/json.h	/^  explicit JSONReader(std::istream *is)$/;"	f	class:dmlc::JSONReader
JSONReader	dmlc-core/include/dmlc/json.h	/^class JSONReader {$/;"	c	namespace:dmlc
JSONReader	nnvm/include/dmlc/json.h	/^  explicit JSONReader(std::istream *is)$/;"	f	class:dmlc::JSONReader
JSONReader	nnvm/include/dmlc/json.h	/^class JSONReader {$/;"	c	namespace:dmlc
JSONWriter	dmlc-core/include/dmlc/json.h	/^  explicit JSONWriter(std::ostream *os)$/;"	f	class:dmlc::JSONWriter
JSONWriter	dmlc-core/include/dmlc/json.h	/^class JSONWriter {$/;"	c	namespace:dmlc
JSONWriter	nnvm/include/dmlc/json.h	/^  explicit JSONWriter(std::ostream *os)$/;"	f	class:dmlc::JSONWriter
JSONWriter	nnvm/include/dmlc/json.h	/^class JSONWriter {$/;"	c	namespace:dmlc
KernelCodeGen	nnvm/plugin/nnvm-fusion/src/codegen.cc	/^Kernel KernelCodeGen(const std::string& kernel_name, InternalGraph internal_graph) {$/;"	f	namespace:nnvm::fusion::__anon2
KeywordArgumentMismatch	nnvm/src/core/symbolic.cc	/^inline void KeywordArgumentMismatch(const char *source,$/;"	f	namespace:nnvm
L	dmlc-core/include/dmlc/lua.h	/^  lua_State* L;$/;"	m	struct:dmlc::LuaState::StackReset
L	dmlc-core/include/dmlc/lua.h	/^  lua_State* L;$/;"	m	struct:dmlc::lua_stack::PushArg
LDFLAGS	Makefile	/^export LDFLAGS = -pthread -lm$/;"	m
LDFLAGS	dmlc-core/Makefile	/^export LDFLAGS= -pthread -lm$/;"	m
LDFLAGS	nnvm/Makefile	/^export LDFLAGS = -pthread -lm$/;"	m
LIBJVM	dmlc-core/make/config.mk	/^LIBJVM=$(JAVA_HOME)\/jre\/lib\/amd64\/server$/;"	m
LIBJVM	dmlc-core/make/dmlc.mk	/^	LIBJVM=$(JAVA_HOME)\/jre\/lib\/amd64\/server$/;"	m
LIB_DEP	Makefile	/^LIB_DEP = $(NNVM_PATH)\/lib\/libnnvm.a$/;"	m
LINT_LANG	dmlc-core/Makefile	/^	LINT_LANG="all"$/;"	m
LOG	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private static final Log LOG = LogFactory.getLog(ApplicationMaster.class);$/;"	f	class:ApplicationMaster	file:
LOG	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private static final Log LOG = LogFactory.getLog(Client.class);$/;"	f	class:Client	file:
LUA_CALL	dmlc-core/include/dmlc/lua.h	287;"	d
L_	dmlc-core/include/dmlc/lua.h	/^  lua_State* L_;$/;"	m	class:dmlc::LuaState
LibSVMParser	dmlc-core/src/data/libsvm_parser.h	/^  explicit LibSVMParser(InputSplit *source,$/;"	f	class:dmlc::data::LibSVMParser
LibSVMParser	dmlc-core/src/data/libsvm_parser.h	/^class LibSVMParser : public TextParserBase<IndexType> {$/;"	c	namespace:dmlc::data
LineSplitter	dmlc-core/src/io/line_split.h	/^  LineSplitter(FileSystem *fs,$/;"	f	class:dmlc::io::LineSplitter
LineSplitter	dmlc-core/src/io/line_split.h	/^class LineSplitter : public InputSplitBase {$/;"	c	namespace:dmlc::io
LinearParam	src/op_nn.cc	/^struct LinearParam : public dmlc::Parameter<LinearParam> {$/;"	s	namespace:tinyflow	file:
LinearShape	src/op_nn.cc	/^inline bool LinearShape(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
LinkedList	dmlc-core/include/dmlc/memory.h	/^  struct LinkedList {$/;"	s	class:dmlc::MemoryPool
LinkedList	nnvm/include/dmlc/memory.h	/^  struct LinkedList {$/;"	s	class:dmlc::MemoryPool
LintHelper	dmlc-core/scripts/lint.py	/^class LintHelper(object):$/;"	c
LintHelper	dmlc-core/scripts/lint3.py	/^class LintHelper(object):$/;"	c
List	dmlc-core/include/dmlc/registry.h	/^  inline static const std::vector<const EntryType*>& List() {$/;"	f	class:dmlc::Registry
List	nnvm/include/dmlc/registry.h	/^  inline static const std::vector<const EntryType*>& List() {$/;"	f	class:dmlc::Registry
ListAllNames	dmlc-core/include/dmlc/registry.h	/^  inline static std::vector<std::string> ListAllNames() {$/;"	f	class:dmlc::Registry
ListAllNames	nnvm/include/dmlc/registry.h	/^  inline static std::vector<std::string> ListAllNames() {$/;"	f	class:dmlc::Registry
ListAttrOption	nnvm/include/nnvm/symbolic.h	/^  enum ListAttrOption {$/;"	g	class:nnvm::Symbol
ListAttrs	nnvm/src/core/symbolic.cc	/^std::unordered_map<std::string, std::string> Symbol::ListAttrs(ListAttrOption option) const {$/;"	f	class:nnvm::Symbol
ListDirectory	dmlc-core/src/io/azure_filesys.cc	/^void AzureFileSystem::ListDirectory($/;"	f	class:dmlc::io::AzureFileSystem
ListDirectory	dmlc-core/src/io/hdfs_filesys.cc	/^void HDFSFileSystem::ListDirectory(const URI &path, std::vector<FileInfo> *out_list) {$/;"	f	class:dmlc::io::HDFSFileSystem
ListDirectory	dmlc-core/src/io/local_filesys.cc	/^void LocalFileSystem::ListDirectory(const URI &path, std::vector<FileInfo> *out_list) {$/;"	f	class:dmlc::io::LocalFileSystem
ListDirectory	dmlc-core/src/io/s3_filesys.cc	/^void S3FileSystem::ListDirectory(const URI &path, std::vector<FileInfo> *out_list) {$/;"	f	class:dmlc::io::S3FileSystem
ListHandler	dmlc-core/include/dmlc/serializer.h	/^struct ListHandler {$/;"	s	namespace:dmlc::serializer
ListInputNames	nnvm/src/core/symbolic.cc	/^std::vector<std::string> Symbol::ListInputNames(ListInputOption option) const {$/;"	f	class:nnvm::Symbol
ListInputOption	nnvm/include/nnvm/symbolic.h	/^  enum ListInputOption {$/;"	g	class:nnvm::Symbol
ListInputs	nnvm/src/core/symbolic.cc	/^std::vector<NodePtr> Symbol::ListInputs(ListInputOption option) const {$/;"	f	class:nnvm::Symbol
ListObjects	dmlc-core/src/io/s3_filesys.cc	/^void ListObjects(const URI &path,$/;"	f	namespace:dmlc::io::s3
ListOutputNames	nnvm/src/core/symbolic.cc	/^std::vector<std::string> Symbol::ListOutputNames() const {$/;"	f	class:nnvm::Symbol
Load	dmlc-core/include/dmlc/parameter.h	/^  inline void Load(dmlc::JSONReader *reader) {$/;"	f	struct:dmlc::Parameter
Load	dmlc-core/src/data/row_block.h	/^RowBlockContainer<IndexType>::Load(Stream *fi) {$/;"	f	class:dmlc::data::RowBlockContainer
Load	dmlc-core/src/io/input_split_base.cc	/^bool InputSplitBase::Chunk::Load(InputSplitBase *split, size_t buffer_size) {$/;"	f	class:dmlc::io::InputSplitBase::Chunk
Load	dmlc-core/test/unittest/unittest_json.cc	/^  inline void Load(dmlc::JSONReader *reader) {$/;"	f	class:json::MyClass
Load	dmlc-core/test/unittest/unittest_serializer.cc	/^  inline bool Load(dmlc::Stream *strm) {$/;"	f	class:MyClass
Load	nnvm/include/dmlc/parameter.h	/^  inline void Load(dmlc::JSONReader *reader) {$/;"	f	struct:dmlc::Parameter
Load	nnvm/include/nnvm/tuple.h	/^  inline bool Load(TStream *strm) {$/;"	f	class:nnvm::TShape
Load	nnvm/include/nnvm/tuple.h	/^  inline void Load(dmlc::JSONReader* reader) {$/;"	f	class:nnvm::Tuple
Load	nnvm/src/pass/saveload_json.cc	/^    void Load(dmlc::JSONReader *reader) {$/;"	f	struct:nnvm::pass::__anon5::JSONNode::Entry
Load	nnvm/src/pass/saveload_json.cc	/^  void Load(dmlc::JSONReader *reader) {$/;"	f	struct:nnvm::pass::__anon5::JSONGraph
Load	nnvm/src/pass/saveload_json.cc	/^  void Load(dmlc::JSONReader *reader) {$/;"	f	struct:nnvm::pass::__anon5::JSONNode
LoadChunk	dmlc-core/src/io/single_file_split.h	/^  inline bool LoadChunk(void) {$/;"	f	class:dmlc::io::SingleFileSplit
LoadFromStream	dmlc-core/src/config.cc	/^void Config::LoadFromStream(istream& is) {$/;"	f	class:dmlc::Config
LoadJSON	nnvm/include/nnvm/pass_functions.h	/^inline Graph LoadJSON(const std::string& json_str) {$/;"	f	namespace:nnvm::pass
LoadJSON	nnvm/src/pass/saveload_json.cc	/^Graph LoadJSON(Graph src) {$/;"	f	namespace:nnvm::pass::__anon5
LocalFileSystem	dmlc-core/src/io/local_filesys.h	/^  LocalFileSystem() {}$/;"	f	class:dmlc::io::LocalFileSystem
LocalFileSystem	dmlc-core/src/io/local_filesys.h	/^class LocalFileSystem : public FileSystem {$/;"	c	namespace:dmlc::io
LuaRef	dmlc-core/include/dmlc/lua.h	/^class LuaRef {$/;"	c	namespace:dmlc
LuaRef	dmlc-core/include/dmlc/lua.h	/^inline LuaRef::LuaRef(LuaRef&& other) {$/;"	f	class:dmlc::LuaRef
LuaRef	dmlc-core/include/dmlc/lua.h	/^inline LuaRef::LuaRef(const LuaRef& other) {$/;"	f	class:dmlc::LuaRef
LuaReshape	src/torch/op_nn_torch.cc	/^const char* LuaReshape = R"($/;"	m	namespace:tinyflow	file:
LuaState	dmlc-core/include/dmlc/lua.h	/^class LuaState {$/;"	c	namespace:dmlc
LuaState	dmlc-core/include/dmlc/lua.h	/^inline LuaState::LuaState() {$/;"	f	class:dmlc::LuaState
MNISTData	python/tinyflow/datasets.py	/^MNISTData = namedtuple("MNISTData", ["train", "test"])$/;"	v
MPICXX	dmlc-core/make/config.mk	/^export MPICXX = mpicxx$/;"	m
MX_TREAD_LOCAL	dmlc-core/include/dmlc/thread_local.h	17;"	d
MX_TREAD_LOCAL	nnvm/include/dmlc/thread_local.h	17;"	d
MakeBackwardGrads	src/op_util.h	/^inline std::vector<NodeEntry> MakeBackwardGrads($/;"	f	namespace:tinyflow
MakeNNBackwardNode	src/op_nn.cc	/^inline std::vector<NodeEntry> MakeNNBackwardNode($/;"	f	namespace:tinyflow
MakeNode	nnvm/example/src/operator.cc	/^inline NodeEntry MakeNode(const char* op_name,$/;"	f	namespace:myproject
MakeNode	src/op_util.h	/^inline NodeEntry MakeNode(const char* op_name,$/;"	f	namespace:tinyflow
MakeProtoStringValue	dmlc-core/src/config.cc	/^string MakeProtoStringValue(const std::string& str) {$/;"	f	namespace:dmlc
MapHandler	dmlc-core/include/dmlc/json.h	/^struct MapHandler{$/;"	s	namespace:dmlc::json
MapHandler	dmlc-core/include/dmlc/lua.h	/^struct MapHandler {$/;"	s	namespace:dmlc::lua_stack
MapHandler	nnvm/include/dmlc/json.h	/^struct MapHandler{$/;"	s	namespace:dmlc::json
MarkdownParser	dmlc-core/doc/conf.py	/^from sphinx_util import MarkdownParser, AutoStructify$/;"	i
MarkdownParser	dmlc-core/doc/sphinx_util.py	/^MarkdownParser = parser.CommonMarkParser$/;"	v
MemCostBytes	dmlc-core/include/dmlc/data.h	/^  inline size_t MemCostBytes(void) const {$/;"	f	struct:dmlc::RowBlock
MemCostBytes	dmlc-core/src/data/row_block.h	/^  inline size_t MemCostBytes(void) const {$/;"	f	struct:dmlc::data::RowBlockContainer
MemoryFixedSizeStream	dmlc-core/include/dmlc/memory_io.h	/^  MemoryFixedSizeStream(void *p_buffer, size_t buffer_size)$/;"	f	struct:dmlc::MemoryFixedSizeStream
MemoryFixedSizeStream	dmlc-core/include/dmlc/memory_io.h	/^struct MemoryFixedSizeStream : public SeekStream {$/;"	s	namespace:dmlc
MemoryPool	dmlc-core/include/dmlc/memory.h	/^  MemoryPool() {$/;"	f	class:dmlc::MemoryPool
MemoryPool	dmlc-core/include/dmlc/memory.h	/^class MemoryPool {$/;"	c	namespace:dmlc
MemoryPool	nnvm/include/dmlc/memory.h	/^  MemoryPool() {$/;"	f	class:dmlc::MemoryPool
MemoryPool	nnvm/include/dmlc/memory.h	/^class MemoryPool {$/;"	c	namespace:dmlc
MemoryStringStream	dmlc-core/include/dmlc/memory_io.h	/^  explicit MemoryStringStream(std::string *p_buffer)$/;"	f	struct:dmlc::MemoryStringStream
MemoryStringStream	dmlc-core/include/dmlc/memory_io.h	/^struct MemoryStringStream : public dmlc::SeekStream {$/;"	s	namespace:dmlc
MergeIntoInput	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^void MergeIntoInput(NodePtr fnode,$/;"	f	namespace:nnvm::fusion::__anon4
MoveCopyAttr	nnvm/include/nnvm/graph.h	/^inline T Graph::MoveCopyAttr(const std::string& attr_name) {$/;"	f	class:nnvm::Graph
MyClass	dmlc-core/test/unittest/unittest_json.cc	/^  MyClass() {}$/;"	f	class:json::MyClass
MyClass	dmlc-core/test/unittest/unittest_json.cc	/^  MyClass(std::string data) : data_{data}, value_(0) {}$/;"	f	class:json::MyClass
MyClass	dmlc-core/test/unittest/unittest_json.cc	/^class MyClass {$/;"	c	namespace:json	file:
MyClass	dmlc-core/test/unittest/unittest_serializer.cc	/^  MyClass() {}$/;"	f	class:MyClass
MyClass	dmlc-core/test/unittest/unittest_serializer.cc	/^  MyClass(std::string data) : data_(data) {}$/;"	f	class:MyClass
MyClass	dmlc-core/test/unittest/unittest_serializer.cc	/^class MyClass {$/;"	c	file:
MyParam	dmlc-core/example/parameter.cc	/^DMLC_REGISTER_PARAMETER(MyParam);$/;"	v
MyParam	dmlc-core/example/parameter.cc	/^struct MyParam : public dmlc::Parameter<MyParam> {$/;"	s	file:
NMCallbackHandler	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private class NMCallbackHandler implements NMClientAsync.CallbackHandler {$/;"	c	class:ApplicationMaster
NNAPIErrorStore	nnvm/src/c_api/c_api_error.cc	/^typedef dmlc::ThreadLocalStore<ErrorEntry> NNAPIErrorStore;$/;"	t	file:
NNAPIHandleException	nnvm/src/c_api/c_api_common.h	/^inline int NNAPIHandleException(const dmlc::Error &e) {$/;"	f
NNAPIHandleException	src/c_api.cc	/^inline int NNAPIHandleException(const dmlc::Error &e) {$/;"	f
NNAPISetLastError	nnvm/src/c_api/c_api_error.cc	/^void NNAPISetLastError(const char* msg) {$/;"	f
NNAPIThreadLocalEntry	nnvm/src/c_api/c_api_common.h	/^struct NNAPIThreadLocalEntry {$/;"	s
NNAPIThreadLocalStore	nnvm/src/c_api/c_api_common.h	/^typedef dmlc::ThreadLocalStore<NNAPIThreadLocalEntry> NNAPIThreadLocalStore;$/;"	t
NNAddControlDeps	nnvm/src/c_api/c_api_symbolic.cc	/^int NNAddControlDeps(SymbolHandle handle,$/;"	f
NNBackwardParam	src/op_util.h	/^struct NNBackwardParam {$/;"	s	namespace:tinyflow
NNGetLastError	nnvm/src/c_api/c_api_error.cc	/^const char *NNGetLastError() {$/;"	f
NNGetOpHandle	nnvm/src/c_api/c_api_symbolic.cc	/^int NNGetOpHandle(const char* op_name,$/;"	f
NNGetOpInfo	nnvm/src/c_api/c_api_symbolic.cc	/^int NNGetOpInfo(OpHandle handle,$/;"	f
NNGraphApplyPasses	nnvm/src/c_api/c_api_graph.cc	/^int NNGraphApplyPasses(GraphHandle src,$/;"	f
NNGraphCreate	nnvm/src/c_api/c_api_graph.cc	/^int NNGraphCreate(SymbolHandle symbol, GraphHandle *graph) {$/;"	f
NNGraphFree	nnvm/src/c_api/c_api_graph.cc	/^int NNGraphFree(GraphHandle handle) {$/;"	f
NNGraphGetJSONAttr	nnvm/src/c_api/c_api_graph.cc	/^int NNGraphGetJSONAttr(GraphHandle handle,$/;"	f
NNGraphGetSymbol	nnvm/src/c_api/c_api_graph.cc	/^int NNGraphGetSymbol(GraphHandle graph, SymbolHandle *symbol) {$/;"	f
NNGraphSetJSONAttr	nnvm/src/c_api/c_api_graph.cc	/^int NNGraphSetJSONAttr(GraphHandle handle,$/;"	f
NNGraphSetNodeEntryListAttr_	nnvm/src/c_api/c_api_graph.cc	/^int NNGraphSetNodeEntryListAttr_(GraphHandle handle,$/;"	f
NNListAllOpNames	nnvm/src/c_api/c_api_symbolic.cc	/^int NNListAllOpNames(nn_uint *out_size,$/;"	f
NNListUniqueOps	nnvm/src/c_api/c_api_symbolic.cc	/^int NNListUniqueOps(nn_uint *out_size,$/;"	f
NNSessionClose	src/c_api.cc	/^int NNSessionClose(SessionHandle handle) {$/;"	f
NNSessionCreate	src/c_api.cc	/^int NNSessionCreate(SessionHandle* handle, const char* option) {$/;"	f
NNSessionRun	src/c_api.cc	/^int NNSessionRun(SessionHandle handle,$/;"	f
NNSymbolCompose	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolCompose(SymbolHandle sym,$/;"	f
NNSymbolCopy	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolCopy(SymbolHandle symbol, SymbolHandle *out) {$/;"	f
NNSymbolCreateAtomicSymbol	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolCreateAtomicSymbol(OpHandle creator,$/;"	f
NNSymbolCreateGroup	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolCreateGroup(nn_uint num_symbols,$/;"	f
NNSymbolCreateVariable	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolCreateVariable(const char *name, SymbolHandle *out) {$/;"	f
NNSymbolFree	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolFree(SymbolHandle symbol) {$/;"	f
NNSymbolGetAttr	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolGetAttr(SymbolHandle symbol,$/;"	f
NNSymbolGetInternals	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolGetInternals(SymbolHandle symbol,$/;"	f
NNSymbolGetOutput	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolGetOutput(SymbolHandle symbol,$/;"	f
NNSymbolListAttrs	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolListAttrs(SymbolHandle symbol,$/;"	f
NNSymbolListInputNames	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolListInputNames(SymbolHandle symbol,$/;"	f
NNSymbolListInputVariables	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolListInputVariables(SymbolHandle symbol,$/;"	f
NNSymbolListOutputNames	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolListOutputNames(SymbolHandle symbol,$/;"	f
NNSymbolPrint	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolPrint(SymbolHandle symbol, const char **out_str) {$/;"	f
NNSymbolSetAttrs	nnvm/src/c_api/c_api_symbolic.cc	/^int NNSymbolSetAttrs(SymbolHandle symbol,$/;"	f
NNVMError	nnvm/python/nnvm/__init__.py	/^from ._base import NNVMError$/;"	i
NNVMError	nnvm/python/nnvm/_base.py	/^class NNVMError(Exception):$/;"	c
NNVMError	nnvm/python/nnvm/cython/symbol.pyx	/^from .._base import NNVMError$/;"	i
NNVMError	nnvm/tests/python/test_symbol.py	/^from nnvm import NNVMError$/;"	i
NNVM_BASE_H_	nnvm/include/nnvm/base.h	7;"	d
NNVM_C_API_C_API_COMMON_H_	nnvm/src/c_api/c_api_common.h	7;"	d
NNVM_C_API_H_	nnvm/include/nnvm/c_api.h	9;"	d
NNVM_DLL	nnvm/include/nnvm/c_api.h	20;"	d
NNVM_DLL	nnvm/include/nnvm/c_api.h	22;"	d
NNVM_DLL	nnvm/include/nnvm/c_api.h	25;"	d
NNVM_EXTERN_C	nnvm/include/nnvm/c_api.h	12;"	d
NNVM_EXTERN_C	nnvm/include/nnvm/c_api.h	14;"	d
NNVM_FUSION_AST_H_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	7;"	d
NNVM_FUSION_BASE_H_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/base.h	7;"	d
NNVM_FUSION_DEBUG	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/base.h	16;"	d
NNVM_FUSION_INTERNAL_H_	nnvm/plugin/nnvm-fusion/src/internal.h	2;"	d
NNVM_FUSION_PATH	Makefile	/^  	NNVM_FUSION_PATH = $(NNVM_PATH)\/plugin\/nnvm-fusion\/$/;"	m
NNVM_FUSION_RTC_H_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	7;"	d
NNVM_FUSION_SRC	nnvm/plugin/nnvm-fusion/nnvm-fusion.mk	/^NNVM_FUSION_SRC = $(wildcard $(NNVM_FUSION_PATH)\/src\/*.cc)$/;"	m
NNVM_GRAPH_ATTR_TYPES_H_	nnvm/include/nnvm/graph_attr_types.h	7;"	d
NNVM_GRAPH_H_	nnvm/include/nnvm/graph.h	7;"	d
NNVM_NODE_H_	nnvm/include/nnvm/node.h	7;"	d
NNVM_OP_ATTR_TYPES_H_	nnvm/include/nnvm/op_attr_types.h	7;"	d
NNVM_OP_H_	nnvm/include/nnvm/op.h	7;"	d
NNVM_PASS_FUNCTIONS_H_	nnvm/include/nnvm/pass_functions.h	11;"	d
NNVM_PASS_GRAPH_ALGORITHM_H_	nnvm/src/pass/graph_algorithm.h	9;"	d
NNVM_PASS_H_	nnvm/include/nnvm/pass.h	7;"	d
NNVM_PATH	Makefile	/^	NNVM_PATH = $(ROOTDIR)\/nnvm$/;"	m
NNVM_REGISTER_GVAR_DEF	nnvm/include/nnvm/op.h	351;"	d
NNVM_REGISTER_OP	nnvm/include/nnvm/op.h	369;"	d
NNVM_REGISTER_OP_GROUP	nnvm/include/nnvm/op.h	394;"	d
NNVM_REGISTER_PASS	nnvm/include/nnvm/pass.h	123;"	d
NNVM_REGISTER_VAR_DEF	nnvm/include/nnvm/op.h	348;"	d
NNVM_SYMBOLIC_H_	nnvm/include/nnvm/symbolic.h	11;"	d
NNVM_TUPLE_H_	nnvm/include/nnvm/tuple.h	7;"	d
NO_WHOLE_ARCH	Makefile	/^	NO_WHOLE_ARCH= --no-whole-archive$/;"	m
NO_WHOLE_ARCH	Makefile	/^	NO_WHOLE_ARCH= -noall_load$/;"	m
NO_WHOLE_ARCH	nnvm/Makefile	/^	NO_WHOLE_ARCH= --no-whole-archive$/;"	m
NO_WHOLE_ARCH	nnvm/Makefile	/^	NO_WHOLE_ARCH= -noall_load$/;"	m
NVCC	nnvm/make/config.mk	/^export NVCC = nvcc$/;"	m
NVRTC_SAFE_CALL	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	39;"	d
NameManager	nnvm/python/nnvm/_ctypes/symbol.py	/^from ..name import NameManager$/;"	i
NameManager	nnvm/python/nnvm/cython/symbol.pyx	/^from ..name import NameManager$/;"	i
NameManager	nnvm/python/nnvm/name.py	/^class NameManager(object):$/;"	c
NameManager	python/tinyflow/_base.py	/^from nnvm.name import NameManager$/;"	i
NeedBroadCast	nnvm/plugin/nnvm-fusion/src/codegen.cc	/^bool NeedBroadCast(const InternalNode* var) {$/;"	f	namespace:nnvm::fusion::__anon2
NewStorage	src/torch/torch_util.h	/^  LuaRef NewStorage(size_t size, int dev_mask = kCPU, int dtype = 0) {$/;"	f	class:tinyflow::TorchState
NewSymbol	nnvm/python/nnvm/cython/symbol.pyx	/^cdef NewSymbol(SymbolHandle handle):$/;"	f
NewTensorEmpty	src/torch/torch_util.h	/^  LuaRef NewTensorEmpty(int dev_mask = kCPU, int dtype = 0) {$/;"	f	class:tinyflow::TorchState
NewTensorShared	src/torch/torch_util.h	/^  LuaRef NewTensorShared(TBlob src) {$/;"	f	class:tinyflow::TorchState
Next	dmlc-core/include/dmlc/threadediter.h	/^  virtual bool Next(void) {$/;"	f	class:dmlc::ThreadedIter
Next	dmlc-core/include/dmlc/threadediter.h	/^Next(DType **out_dptr) {$/;"	f	class:dmlc::ThreadedIter
Next	dmlc-core/src/data/basic_row_iter.h	/^  virtual bool Next(void) {$/;"	f	class:dmlc::data::BasicRowIter
Next	dmlc-core/src/data/disk_row_iter.h	/^  virtual bool Next(void) {$/;"	f	class:dmlc::data::DiskRowIter
Next	dmlc-core/src/data/parser.h	/^  virtual bool Next(void) {$/;"	f	class:dmlc::data::ParserImpl
Next	dmlc-core/src/data/parser.h	/^  virtual bool Next(void) {$/;"	f	class:dmlc::data::ThreadedParser
Next	dmlc-core/test/unittest/unittest_threaditer.cc	/^  virtual bool Next(int **inout_dptr) {$/;"	f	struct:producer_test::IntProducer
NextArrayItem	dmlc-core/include/dmlc/json.h	/^inline bool JSONReader::NextArrayItem() {$/;"	f	class:dmlc::JSONReader
NextArrayItem	nnvm/include/dmlc/json.h	/^inline bool JSONReader::NextArrayItem() {$/;"	f	class:dmlc::JSONReader
NextChunk	dmlc-core/src/io/cached_input_split.h	/^  virtual bool NextChunk(Blob *out_chunk) {$/;"	f	class:dmlc::io::CachedInputSplit
NextChunk	dmlc-core/src/io/input_split_base.h	/^  virtual bool NextChunk(Blob *out_chunk) {$/;"	f	class:dmlc::io::InputSplitBase
NextChunk	dmlc-core/src/io/single_file_split.h	/^  virtual bool NextChunk(Blob *out_chunk) {$/;"	f	class:dmlc::io::SingleFileSplit
NextChunk	dmlc-core/src/io/threaded_input_split.h	/^  virtual bool NextChunk(Blob *out_chunk) {$/;"	f	class:dmlc::io::ThreadedInputSplit
NextNonSpace	dmlc-core/include/dmlc/json.h	/^inline int JSONReader::NextNonSpace() {$/;"	f	class:dmlc::JSONReader
NextNonSpace	nnvm/include/dmlc/json.h	/^inline int JSONReader::NextNonSpace() {$/;"	f	class:dmlc::JSONReader
NextObjectItem	dmlc-core/include/dmlc/json.h	/^inline bool JSONReader::NextObjectItem(std::string *out_key) {$/;"	f	class:dmlc::JSONReader
NextObjectItem	nnvm/include/dmlc/json.h	/^inline bool JSONReader::NextObjectItem(std::string *out_key) {$/;"	f	class:dmlc::JSONReader
NextRecord	dmlc-core/src/io/cached_input_split.h	/^  virtual bool NextRecord(Blob *out_rec) {$/;"	f	class:dmlc::io::CachedInputSplit
NextRecord	dmlc-core/src/io/input_split_base.h	/^  virtual bool NextRecord(Blob *out_rec) {$/;"	f	class:dmlc::io::InputSplitBase
NextRecord	dmlc-core/src/io/single_file_split.h	/^  virtual bool NextRecord(Blob *out_rec) {$/;"	f	class:dmlc::io::SingleFileSplit
NextRecord	dmlc-core/src/io/threaded_input_split.h	/^  virtual bool NextRecord(Blob *out_rec) {$/;"	f	class:dmlc::io::ThreadedInputSplit
NextRecord	dmlc-core/src/recordio.cc	/^bool RecordIOChunkReader::NextRecord(InputSplit::Blob *out_rec) {$/;"	f	class:dmlc::RecordIOChunkReader
NextRecord	dmlc-core/src/recordio.cc	/^bool RecordIOReader::NextRecord(std::string *out_rec) {$/;"	f	class:dmlc::RecordIOReader
Node	nnvm/include/nnvm/graph.h	/^  struct Node {$/;"	s	class:nnvm::IndexedGraph
Node	nnvm/include/nnvm/node.h	/^class Node {$/;"	c	namespace:nnvm
NodeAttrs	nnvm/include/nnvm/node.h	/^struct NodeAttrs {$/;"	s	namespace:nnvm
NodeEntry	nnvm/include/nnvm/graph.h	/^  struct NodeEntry {$/;"	s	class:nnvm::IndexedGraph
NodeEntry	nnvm/include/nnvm/node.h	/^struct NodeEntry {$/;"	s	namespace:nnvm
NotImplemented	dmlc-core/include/dmlc/threadediter.h	/^  inline static void NotImplemented(void) {$/;"	f	class:dmlc::ThreadedIter
NumCol	dmlc-core/src/data/basic_row_iter.h	/^  virtual size_t NumCol(void) const {$/;"	f	class:dmlc::data::BasicRowIter
NumCol	dmlc-core/src/data/disk_row_iter.h	/^  virtual size_t NumCol(void) const {$/;"	f	class:dmlc::data::DiskRowIter
NumberHandler	dmlc-core/include/dmlc/lua.h	/^struct NumberHandler {$/;"	s	namespace:dmlc::lua_stack
NumericHandler	dmlc-core/include/dmlc/json.h	/^struct NumericHandler {$/;"	s	namespace:dmlc::json
NumericHandler	nnvm/include/dmlc/json.h	/^struct NumericHandler {$/;"	s	namespace:dmlc::json
OBJ	Makefile	/^OBJ = $(patsubst %.cc, build\/%.o, $(SRC))$/;"	m
OBJ	dmlc-core/Makefile	/^OBJ=line_split.o recordio_split.o input_split_base.o io.o local_filesys.o data.o recordio.o config.o$/;"	m
Op	nnvm/include/nnvm/op.h	/^class Op {$/;"	c	namespace:nnvm
Op	nnvm/src/core/op.cc	/^Op::Op() {$/;"	f	class:nnvm::Op
OpGroup	nnvm/include/nnvm/op.h	/^class OpGroup {$/;"	c	namespace:nnvm
OpHandle	nnvm/include/nnvm/c_api.h	/^typedef void *OpHandle;$/;"	t
OpHandle	nnvm/python/nnvm/_base.py	/^OpHandle = ctypes.c_void_p$/;"	v
OpHandle	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import SymbolHandle, OpHandle$/;"	i
OpManager	nnvm/src/core/op.cc	/^struct OpManager {$/;"	s	namespace:nnvm	file:
OpMap	nnvm/include/nnvm/op.h	/^class OpMap {$/;"	c	namespace:nnvm
Open	dmlc-core/src/io/azure_filesys.h	/^  virtual Stream *Open(const URI &path, const char* const flag, bool allow_null) {$/;"	f	class:dmlc::io::AzureFileSystem
Open	dmlc-core/src/io/hdfs_filesys.cc	/^SeekStream *HDFSFileSystem::Open(const URI &path,$/;"	f	class:dmlc::io::HDFSFileSystem
Open	dmlc-core/src/io/local_filesys.cc	/^SeekStream *LocalFileSystem::Open(const URI &path,$/;"	f	class:dmlc::io::LocalFileSystem
Open	dmlc-core/src/io/s3_filesys.cc	/^Stream *S3FileSystem::Open(const URI &path, const char* const flag, bool allow_null) {$/;"	f	class:dmlc::io::S3FileSystem
OpenForRead	dmlc-core/src/io/azure_filesys.h	/^  virtual SeekStream *OpenForRead(const URI &path, bool allow_null) {$/;"	f	class:dmlc::io::AzureFileSystem
OpenForRead	dmlc-core/src/io/hdfs_filesys.cc	/^SeekStream *HDFSFileSystem::OpenForRead(const URI &path, bool allow_null) {$/;"	f	class:dmlc::io::HDFSFileSystem
OpenForRead	dmlc-core/src/io/local_filesys.cc	/^SeekStream *LocalFileSystem::OpenForRead(const URI &path, bool allow_null) {$/;"	f	class:dmlc::io::LocalFileSystem
OpenForRead	dmlc-core/src/io/s3_filesys.cc	/^SeekStream *S3FileSystem::OpenForRead(const URI &path, bool allow_null) {$/;"	f	class:dmlc::io::S3FileSystem
Option	dmlc-core/include/dmlc/lua.h	/^  enum Option {$/;"	g	class:dmlc::LuaState
OrderMutation	nnvm/include/nnvm/pass_functions.h	/^inline Graph OrderMutation(Graph src) {$/;"	f	namespace:nnvm::pass
OrderMutation	nnvm/src/pass/order_mutation.cc	/^Graph OrderMutation(const Graph& src) {$/;"	f	namespace:nnvm::pass::__anon6
OutBuf	dmlc-core/include/dmlc/io.h	/^    explicit OutBuf(size_t buffer_size)$/;"	f	class:dmlc::ostream::OutBuf
OutBuf	dmlc-core/include/dmlc/io.h	/^  class OutBuf : public std::streambuf {$/;"	c	class:dmlc::ostream
PAPER	dmlc-core/doc/Makefile	/^PAPER         =$/;"	m
PAPEROPT_a4	dmlc-core/doc/Makefile	/^PAPEROPT_a4     = -D latex_paper_size=a4$/;"	m
PAPEROPT_letter	dmlc-core/doc/Makefile	/^PAPEROPT_letter = -D latex_paper_size=letter$/;"	m
PLUGIN_OBJ	nnvm/Makefile	/^PLUGIN_OBJ =$/;"	m
PODHandler	dmlc-core/include/dmlc/serializer.h	/^struct PODHandler {$/;"	s	namespace:dmlc::serializer
PODStringHandler	dmlc-core/include/dmlc/serializer.h	/^struct PODStringHandler {$/;"	s	namespace:dmlc::serializer
PODVectorHandler	dmlc-core/include/dmlc/serializer.h	/^struct PODVectorHandler {$/;"	s	namespace:dmlc::serializer
PRun_	dmlc-core/include/dmlc/lua.h	/^inline void LuaState::PRun_(F f) {$/;"	f	class:dmlc::LuaState
PSTracker	dmlc-core/tracker/dmlc_tracker/tracker.py	/^class PSTracker(object):$/;"	c
PYTHON_SUFFIX	dmlc-core/scripts/lint.py	/^PYTHON_SUFFIX = set(['py'])$/;"	v
PYTHON_SUFFIX	dmlc-core/scripts/lint3.py	/^PYTHON_SUFFIX = set(['py'])$/;"	v
PY_MAJOR_VERSION	nnvm/python/nnvm/cython/symbol.pyx	/^from cpython.version cimport PY_MAJOR_VERSION$/;"	i
PadParam	src/op_nn.cc	/^struct PadParam : public dmlc::Parameter<PadParam> {$/;"	s	namespace:tinyflow	file:
PadShape	src/op_nn.cc	/^inline bool PadShape(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
Page	dmlc-core/include/dmlc/memory.h	/^  struct Page {$/;"	s	class:dmlc::MemoryPool
Page	nnvm/include/dmlc/memory.h	/^  struct Page {$/;"	s	class:dmlc::MemoryPool
PairHandler	dmlc-core/include/dmlc/serializer.h	/^struct PairHandler {$/;"	s	namespace:dmlc::serializer
Param	dmlc-core/test/parameter_test.cc	/^DMLC_REGISTER_PARAMETER(Param);$/;"	v
Param	dmlc-core/test/parameter_test.cc	/^struct Param : public dmlc::Parameter<Param> {$/;"	s	file:
Param	dmlc-core/test/unittest/unittest_serializer.cc	/^  Param() {}$/;"	f	struct:Param
Param	dmlc-core/test/unittest/unittest_serializer.cc	/^  Param(int a, int b) : a(a), b(b) {}$/;"	f	struct:Param
Param	dmlc-core/test/unittest/unittest_serializer.cc	/^struct Param {$/;"	s	file:
ParamError	dmlc-core/include/dmlc/parameter.h	/^  explicit ParamError(const std::string &msg)$/;"	f	struct:dmlc::ParamError
ParamError	dmlc-core/include/dmlc/parameter.h	/^struct ParamError : public dmlc::Error {$/;"	s	namespace:dmlc
ParamError	nnvm/include/dmlc/parameter.h	/^  explicit ParamError(const std::string &msg)$/;"	f	struct:dmlc::ParamError
ParamError	nnvm/include/dmlc/parameter.h	/^struct ParamError : public dmlc::Error {$/;"	s	namespace:dmlc
ParamFieldInfo	dmlc-core/include/dmlc/parameter.h	/^struct ParamFieldInfo {$/;"	s	namespace:dmlc
ParamFieldInfo	nnvm/include/dmlc/parameter.h	/^struct ParamFieldInfo {$/;"	s	namespace:dmlc
ParamInitOption	dmlc-core/include/dmlc/parameter.h	/^enum ParamInitOption {$/;"	g	namespace:dmlc::parameter
ParamInitOption	nnvm/include/dmlc/parameter.h	/^enum ParamInitOption {$/;"	g	namespace:dmlc::parameter
ParamManager	dmlc-core/include/dmlc/parameter.h	/^class ParamManager {$/;"	c	namespace:dmlc::parameter
ParamManager	nnvm/include/dmlc/parameter.h	/^class ParamManager {$/;"	c	namespace:dmlc::parameter
ParamManagerSingleton	dmlc-core/include/dmlc/parameter.h	/^  explicit ParamManagerSingleton(const std::string &param_name) {$/;"	f	struct:dmlc::parameter::ParamManagerSingleton
ParamManagerSingleton	dmlc-core/include/dmlc/parameter.h	/^struct ParamManagerSingleton {$/;"	s	namespace:dmlc::parameter
ParamManagerSingleton	nnvm/include/dmlc/parameter.h	/^  explicit ParamManagerSingleton(const std::string &param_name) {$/;"	f	struct:dmlc::parameter::ParamManagerSingleton
ParamManagerSingleton	nnvm/include/dmlc/parameter.h	/^struct ParamManagerSingleton {$/;"	s	namespace:dmlc::parameter
ParamParser	src/op_util.h	/^inline void ParamParser(nnvm::NodeAttrs* attrs) {$/;"	f	namespace:tinyflow
Parameter	dmlc-core/include/dmlc/parameter.h	/^struct Parameter {$/;"	s	namespace:dmlc
Parameter	nnvm/include/dmlc/parameter.h	/^struct Parameter {$/;"	s	namespace:dmlc
Parent	dmlc-core/include/dmlc/parameter.h	/^  typedef FieldEntryBase<FieldEntry<bool>, bool> Parent;$/;"	t	class:dmlc::parameter::FieldEntry
Parent	dmlc-core/include/dmlc/parameter.h	/^  typedef FieldEntryBase<FieldEntry<std::string>, std::string> Parent;$/;"	t	class:dmlc::parameter::FieldEntry
Parent	dmlc-core/include/dmlc/parameter.h	/^  typedef FieldEntryNumeric<FieldEntry<int>, int> Parent;$/;"	t	class:dmlc::parameter::FieldEntry
Parent	nnvm/include/dmlc/parameter.h	/^  typedef FieldEntryBase<FieldEntry<bool>, bool> Parent;$/;"	t	class:dmlc::parameter::FieldEntry
Parent	nnvm/include/dmlc/parameter.h	/^  typedef FieldEntryBase<FieldEntry<std::string>, std::string> Parent;$/;"	t	class:dmlc::parameter::FieldEntry
Parent	nnvm/include/dmlc/parameter.h	/^  typedef FieldEntryNumeric<FieldEntry<int>, int> Parent;$/;"	t	class:dmlc::parameter::FieldEntry
ParseBlock	dmlc-core/src/data/csv_parser.h	/^ParseBlock(char *begin,$/;"	f	class:dmlc::data::CSVParser
ParseBlock	dmlc-core/src/data/libsvm_parser.h	/^ParseBlock(char *begin,$/;"	f	class:dmlc::data::LibSVMParser
ParseComments	dmlc-core/src/config.cc	/^  void ParseComments() {$/;"	f	class:dmlc::Tokenizer
ParseNext	dmlc-core/src/data/parser.h	/^  virtual bool ParseNext(std::vector<RowBlockContainer<IndexType> > *data) {$/;"	f	class:dmlc::data::ThreadedParser
ParseNext	dmlc-core/src/data/text_parser.h	/^  virtual bool ParseNext(std::vector<RowBlockContainer<IndexType> > *data) {$/;"	f	class:dmlc::data::TextParserBase
ParsePair	dmlc-core/src/data/strtonum.h	/^inline int ParsePair(const char * begin, const char * end,$/;"	f	namespace:dmlc::data
ParseState	dmlc-core/src/config.cc	/^  enum ParseState {$/;"	g	class:dmlc::Tokenizer	file:
ParseString	dmlc-core/src/config.cc	/^  void ParseString(string* tok) {$/;"	f	class:dmlc::Tokenizer
Parser	dmlc-core/include/dmlc/data.h	/^class Parser : public DataIter<RowBlock<IndexType> > {$/;"	c	namespace:dmlc
ParserFactoryReg	dmlc-core/include/dmlc/data.h	/^struct ParserFactoryReg$/;"	s	namespace:dmlc
ParserImpl	dmlc-core/src/data/parser.h	/^  ParserImpl() : data_ptr_(0), data_end_(0) {}$/;"	f	class:dmlc::data::ParserImpl
ParserImpl	dmlc-core/src/data/parser.h	/^class ParserImpl : public Parser<IndexType> {$/;"	c	namespace:dmlc::data
PassFunction	nnvm/include/nnvm/pass.h	/^typedef std::function<Graph (Graph src)> PassFunction;$/;"	t	namespace:nnvm
PassFunctionReg	nnvm/include/nnvm/pass.h	/^struct PassFunctionReg$/;"	s	namespace:nnvm
PeekChar	dmlc-core/src/config.cc	/^  char PeekChar() {$/;"	f	class:dmlc::Tokenizer	file:
PeekNextNonSpace	dmlc-core/include/dmlc/json.h	/^inline int JSONReader::PeekNextNonSpace() {$/;"	f	class:dmlc::JSONReader
PeekNextNonSpace	nnvm/include/dmlc/json.h	/^inline int JSONReader::PeekNextNonSpace() {$/;"	f	class:dmlc::JSONReader
PlaceDevice	nnvm/include/nnvm/pass_functions.h	/^inline Graph PlaceDevice(Graph graph,$/;"	f	namespace:nnvm::pass
PlaceDevice	nnvm/src/pass/place_device.cc	/^Graph PlaceDevice(Graph src) {$/;"	f	namespace:nnvm::pass::__anon9
PlanMemory	nnvm/src/pass/plan_memory.cc	/^Graph PlanMemory(Graph ret) {$/;"	f	namespace:nnvm::pass::__anon7
Pop	dmlc-core/include/dmlc/concurrency.h	/^bool ConcurrentBlockingQueue<T, type>::Pop(T* rv) {$/;"	f	class:dmlc::ConcurrentBlockingQueue
PostOrderDFSVisit	nnvm/include/nnvm/graph.h	/^void PostOrderDFSVisit(const std::vector<GNode>& heads,$/;"	f	namespace:nnvm
Prefix	nnvm/python/nnvm/name.py	/^class Prefix(NameManager):$/;"	c
Print	dmlc-core/test/registry_test.cc	/^  virtual void Print() {$/;"	f	struct:tree::AVLTree
Print	dmlc-core/test/registry_test.cc	/^  virtual void Print() {$/;"	f	struct:tree::BinaryTree
Print	nnvm/src/core/symbolic.cc	/^void Symbol::Print(std::ostream &os) const {$/;"	f	class:nnvm::Symbol
PrintDefaultValueString	dmlc-core/include/dmlc/parameter.h	/^  virtual void PrintDefaultValueString(std::ostream &os) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintDefaultValueString	dmlc-core/include/dmlc/parameter.h	/^  virtual void PrintDefaultValueString(std::ostream &os) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntryBase
PrintDefaultValueString	dmlc-core/include/dmlc/parameter.h	/^  virtual void PrintDefaultValueString(std::ostream &os) const { \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintDefaultValueString	nnvm/include/dmlc/parameter.h	/^  virtual void PrintDefaultValueString(std::ostream &os) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintDefaultValueString	nnvm/include/dmlc/parameter.h	/^  virtual void PrintDefaultValueString(std::ostream &os) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntryBase
PrintDefaultValueString	nnvm/include/dmlc/parameter.h	/^  virtual void PrintDefaultValueString(std::ostream &os) const { \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintDocString	dmlc-core/include/dmlc/parameter.h	/^  inline void PrintDocString(std::ostream &os) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::ParamManager
PrintDocString	nnvm/include/dmlc/parameter.h	/^  inline void PrintDocString(std::ostream &os) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::ParamManager
PrintEnums	dmlc-core/include/dmlc/parameter.h	/^  inline void PrintEnums(std::ostream &os) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintEnums	nnvm/include/dmlc/parameter.h	/^  inline void PrintEnums(std::ostream &os) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintInternalNode	nnvm/plugin/nnvm-fusion/src/codegen.cc	/^void PrintInternalNode(const InternalNodePtr internal, int indent=0) {$/;"	f	namespace:nnvm::fusion::__anon2
PrintValue	dmlc-core/include/dmlc/parameter.h	/^  virtual void PrintValue(std::ostream &os, DType value) const { \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntryBase
PrintValue	dmlc-core/include/dmlc/parameter.h	/^  virtual void PrintValue(std::ostream &os, bool value) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintValue	dmlc-core/include/dmlc/parameter.h	/^  virtual void PrintValue(std::ostream &os, int value) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintValue	nnvm/include/dmlc/parameter.h	/^  virtual void PrintValue(std::ostream &os, DType value) const { \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntryBase
PrintValue	nnvm/include/dmlc/parameter.h	/^  virtual void PrintValue(std::ostream &os, bool value) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
PrintValue	nnvm/include/dmlc/parameter.h	/^  virtual void PrintValue(std::ostream &os, int value) const {  \/\/ NOLINT(*)$/;"	f	class:dmlc::parameter::FieldEntry
ProdShape	nnvm/include/nnvm/tuple.h	/^  inline index_t ProdShape(int dimstart, int dimend) const {$/;"	f	class:nnvm::TShape
Producer	dmlc-core/include/dmlc/threadediter.h	/^  class Producer {$/;"	c	class:dmlc::ThreadedIter
Push	dmlc-core/include/dmlc/concurrency.h	/^void ConcurrentBlockingQueue<T, type>::Push(E&& e, int priority) {$/;"	f	class:dmlc::ConcurrentBlockingQueue
Push	dmlc-core/include/dmlc/lua.h	/^  static inline void Push(lua_State* L, const ContainerType& v) {$/;"	f	struct:dmlc::lua_stack::MapHandler
Push	dmlc-core/include/dmlc/lua.h	/^  static inline void Push(lua_State* L, const LuaRef& v) {$/;"	f	struct:dmlc::lua_stack::Handler
Push	dmlc-core/include/dmlc/lua.h	/^  static inline void Push(lua_State* L, const T& v) {$/;"	f	struct:dmlc::lua_stack::NumberHandler
Push	dmlc-core/include/dmlc/lua.h	/^  static inline void Push(lua_State* L, const std::nullptr_t& v) {$/;"	f	struct:dmlc::lua_stack::Handler
Push	dmlc-core/include/dmlc/lua.h	/^  static inline void Push(lua_State* L, const std::string& v) {$/;"	f	struct:dmlc::lua_stack::Handler
Push	dmlc-core/include/dmlc/lua.h	/^  static inline void Push(lua_State* L, const std::vector<T>& v) {$/;"	f	struct:dmlc::lua_stack::Handler
Push	dmlc-core/src/data/row_block.h	/^  inline void Push(Row<I> row) {$/;"	f	struct:dmlc::data::RowBlockContainer
Push	dmlc-core/src/data/row_block.h	/^  inline void Push(RowBlock<I> batch) {$/;"	f	struct:dmlc::data::RowBlockContainer
Push	src/torch/torch_util.h	/^  static inline void Push(lua_State* L, const nnvm::TShape& shape) {$/;"	f	struct:dmlc::lua_stack::Handler
PushArg	dmlc-core/include/dmlc/lua.h	/^struct PushArg {$/;"	s	namespace:dmlc::lua_stack
REGISTER_TREE	dmlc-core/test/registry_test.cc	27;"	d	file:
RMCallbackHandler	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private class RMCallbackHandler implements AMRMClientAsync.CallbackHandler {$/;"	c	class:ApplicationMaster
ROOTDIR	Makefile	/^ROOTDIR = $(CURDIR)$/;"	m
ROOTDIR	nnvm/Makefile	/^ROOTDIR = $(CURDIR)$/;"	m
RTC	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^class RTC {$/;"	c	namespace:nnvm::fusion
RTC	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^RTC::RTC(const std::string& name, const std::string& kernel) {$/;"	f	class:nnvm::fusion::RTC
RTCGen	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^Graph RTCGen(Graph ret) {$/;"	f	namespace:nnvm::fusion::__anon3
RabitTracker	dmlc-core/tracker/dmlc_tracker/tracker.py	/^class RabitTracker(object):$/;"	c
Read	dmlc-core/include/dmlc/io.h	/^inline bool Stream::Read(T *out_data) {$/;"	f	class:dmlc::Stream
Read	dmlc-core/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, ContainerType *array) {$/;"	f	struct:dmlc::json::ArrayHandler
Read	dmlc-core/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, ContainerType *map) {$/;"	f	struct:dmlc::json::MapHandler
Read	dmlc-core/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, T *data) {$/;"	f	struct:dmlc::json::Handler
Read	dmlc-core/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, T *value) {$/;"	f	struct:dmlc::json::CommonJSONSerializer
Read	dmlc-core/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, ValueType *value) {$/;"	f	struct:dmlc::json::NumericHandler
Read	dmlc-core/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, any *data) {$/;"	f	struct:dmlc::json::Handler
Read	dmlc-core/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, std::pair<K, V> *kv) {$/;"	f	struct:dmlc::json::Handler
Read	dmlc-core/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, std::string *str) {$/;"	f	struct:dmlc::json::Handler
Read	dmlc-core/include/dmlc/json.h	/^inline void JSONReader::Read(ValueType *out_value) {$/;"	f	class:dmlc::JSONReader
Read	dmlc-core/include/dmlc/memory_io.h	/^  virtual size_t Read(void *ptr, size_t size) {$/;"	f	struct:dmlc::MemoryFixedSizeStream
Read	dmlc-core/include/dmlc/memory_io.h	/^  virtual size_t Read(void *ptr, size_t size) {$/;"	f	struct:dmlc::MemoryStringStream
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, ContainerType *data) {$/;"	f	struct:dmlc::serializer::CollectionHandler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, ListType *data) {$/;"	f	struct:dmlc::serializer::ListHandler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, T *data) {$/;"	f	struct:dmlc::serializer::Handler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, T *data) {$/;"	f	struct:dmlc::serializer::IfThenElse
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, T *data) {$/;"	f	struct:dmlc::serializer::SaveLoadClassHandler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, T *dptr) {$/;"	f	struct:dmlc::serializer::PODHandler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, std::basic_string<T> *data) {$/;"	f	struct:dmlc::serializer::Handler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, std::basic_string<T> *out_vec) {$/;"	f	struct:dmlc::serializer::PODStringHandler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, std::pair<TA, TB> *data) {$/;"	f	struct:dmlc::serializer::Handler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, std::pair<TA, TB> *data) {$/;"	f	struct:dmlc::serializer::PairHandler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, std::vector<T> *data) {$/;"	f	struct:dmlc::serializer::Handler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, std::vector<T> *out_vec) {$/;"	f	struct:dmlc::serializer::ComposeVectorHandler
Read	dmlc-core/include/dmlc/serializer.h	/^  inline static bool Read(Stream *strm, std::vector<T> *out_vec) {$/;"	f	struct:dmlc::serializer::PODVectorHandler
Read	dmlc-core/src/io/hdfs_filesys.cc	/^  virtual size_t Read(void *ptr, size_t size) {$/;"	f	class:dmlc::io::HDFSStream
Read	dmlc-core/src/io/input_split_base.cc	/^size_t InputSplitBase::Read(void *ptr, size_t size) {$/;"	f	class:dmlc::io::InputSplitBase
Read	dmlc-core/src/io/local_filesys.cc	/^  virtual size_t Read(void *ptr, size_t size) {$/;"	f	class:dmlc::io::FileStream
Read	dmlc-core/src/io/s3_filesys.cc	/^  virtual size_t Read(void *ptr, size_t size) {$/;"	f	class:dmlc::io::s3::WriteStream
Read	dmlc-core/src/io/s3_filesys.cc	/^size_t CURLReadStreamBase::Read(void *ptr, size_t size) {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
Read	dmlc-core/src/io/single_file_split.h	/^  virtual size_t Read(void *ptr, size_t size) {$/;"	f	class:dmlc::io::SingleFileSplit
Read	nnvm/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, ContainerType *array) {$/;"	f	struct:dmlc::json::ArrayHandler
Read	nnvm/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, ContainerType *map) {$/;"	f	struct:dmlc::json::MapHandler
Read	nnvm/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, T *data) {$/;"	f	struct:dmlc::json::Handler
Read	nnvm/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, T *value) {$/;"	f	struct:dmlc::json::CommonJSONSerializer
Read	nnvm/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, ValueType *value) {$/;"	f	struct:dmlc::json::NumericHandler
Read	nnvm/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, any *data) {$/;"	f	struct:dmlc::json::Handler
Read	nnvm/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, std::pair<K, V> *kv) {$/;"	f	struct:dmlc::json::Handler
Read	nnvm/include/dmlc/json.h	/^  inline static void Read(JSONReader *reader, std::string *str) {$/;"	f	struct:dmlc::json::Handler
Read	nnvm/include/dmlc/json.h	/^inline void JSONReader::Read(ValueType *out_value) {$/;"	f	class:dmlc::JSONReader
Read	nnvm/src/pass/saveload_json.cc	/^  inline static void Read(JSONReader *reader, std::shared_ptr<any> *data) {$/;"	f	struct:dmlc::json::Handler
ReadAllFields	dmlc-core/include/dmlc/json.h	/^inline void JSONObjectReadHelper::ReadAllFields(JSONReader *reader) {$/;"	f	class:dmlc::JSONObjectReadHelper
ReadAllFields	nnvm/include/dmlc/json.h	/^inline void JSONObjectReadHelper::ReadAllFields(JSONReader *reader) {$/;"	f	class:dmlc::JSONObjectReadHelper
ReadAny	dmlc-core/include/dmlc/json.h	/^  inline static void ReadAny(JSONReader *reader, any* data) {$/;"	f	class:dmlc::json::AnyJSONManager
ReadAny	nnvm/include/dmlc/json.h	/^  inline static void ReadAny(JSONReader *reader, any* data) {$/;"	f	class:dmlc::json::AnyJSONManager
ReadChunk	dmlc-core/src/io/input_split_base.cc	/^bool InputSplitBase::ReadChunk(void *buf, size_t *size) {$/;"	f	class:dmlc::io::InputSplitBase
ReadChunk	dmlc-core/src/io/single_file_split.h	/^  inline bool ReadChunk(void *buf, size_t *size) {$/;"	f	class:dmlc::io::SingleFileSplit
ReadFunction	dmlc-core/include/dmlc/json.h	/^  typedef void (*ReadFunction)(JSONReader *reader, void *addr);$/;"	t	class:dmlc::JSONObjectReadHelper
ReadFunction	nnvm/include/dmlc/json.h	/^  typedef void (*ReadFunction)(JSONReader *reader, void *addr);$/;"	t	class:dmlc::JSONObjectReadHelper
ReadNumber	dmlc-core/include/dmlc/json.h	/^inline void JSONReader::ReadNumber(ValueType *out_value) {$/;"	f	class:dmlc::JSONReader
ReadNumber	nnvm/include/dmlc/json.h	/^inline void JSONReader::ReadNumber(ValueType *out_value) {$/;"	f	class:dmlc::JSONReader
ReadStream	dmlc-core/src/io/s3_filesys.cc	/^  ReadStream(const URI &path,$/;"	f	class:dmlc::io::s3::ReadStream
ReadStream	dmlc-core/src/io/s3_filesys.cc	/^class ReadStream : public CURLReadStreamBase {$/;"	c	namespace:dmlc::io::s3	file:
ReadString	dmlc-core/include/dmlc/json.h	/^inline void JSONReader::ReadString(std::string *out_str) {$/;"	f	class:dmlc::JSONReader
ReadString	nnvm/include/dmlc/json.h	/^inline void JSONReader::ReadString(std::string *out_str) {$/;"	f	class:dmlc::JSONReader
ReadStringStream	dmlc-core/src/io/s3_filesys.cc	/^  explicit ReadStringStream(const std::string &data) {$/;"	f	struct:dmlc::io::s3::ReadStringStream
ReadStringStream	dmlc-core/src/io/s3_filesys.cc	/^struct ReadStringStream {$/;"	s	namespace:dmlc::io::s3	file:
ReaderFunction	dmlc-core/include/dmlc/json.h	/^inline void JSONObjectReadHelper::ReaderFunction(JSONReader *reader, void *addr) {$/;"	f	class:dmlc::JSONObjectReadHelper
ReaderFunction	nnvm/include/dmlc/json.h	/^inline void JSONObjectReadHelper::ReaderFunction(JSONReader *reader, void *addr) {$/;"	f	class:dmlc::JSONObjectReadHelper
RecordIOChunkReader	dmlc-core/include/dmlc/recordio.h	/^class RecordIOChunkReader {$/;"	c	namespace:dmlc
RecordIOChunkReader	dmlc-core/src/recordio.cc	/^RecordIOChunkReader::RecordIOChunkReader(InputSplit::Blob chunk,$/;"	f	class:dmlc::RecordIOChunkReader
RecordIOReader	dmlc-core/include/dmlc/recordio.h	/^  explicit RecordIOReader(Stream *stream)$/;"	f	class:dmlc::RecordIOReader
RecordIOReader	dmlc-core/include/dmlc/recordio.h	/^class RecordIOReader {$/;"	c	namespace:dmlc
RecordIOSplitter	dmlc-core/src/io/recordio_split.h	/^  RecordIOSplitter(FileSystem *fs,$/;"	f	class:dmlc::io::RecordIOSplitter
RecordIOSplitter	dmlc-core/src/io/recordio_split.h	/^class RecordIOSplitter : public InputSplitBase {$/;"	c	namespace:dmlc::io
RecordIOWriter	dmlc-core/include/dmlc/recordio.h	/^  explicit RecordIOWriter(Stream *stream)$/;"	f	class:dmlc::RecordIOWriter
RecordIOWriter	dmlc-core/include/dmlc/recordio.h	/^class RecordIOWriter {$/;"	c	namespace:dmlc
Recycle	dmlc-core/include/dmlc/threadediter.h	/^inline void ThreadedIter<DType>::Recycle(DType **inout_dptr) {$/;"	f	class:dmlc::ThreadedIter
ReduceParam	src/op_tensor.cc	/^struct ReduceParam : public dmlc::Parameter<ReduceParam> {$/;"	s	namespace:tinyflow	file:
ReduceShape	src/op_tensor.cc	/^inline bool ReduceShape(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
RefBlock	dmlc-core/include/dmlc/memory.h	/^  struct RefBlock {$/;"	s	struct:dmlc::ThreadlocalSharedPtr
RefBlock	nnvm/include/dmlc/memory.h	/^  struct RefBlock {$/;"	s	struct:dmlc::ThreadlocalSharedPtr
RegisterDelete	dmlc-core/include/dmlc/thread_local.h	/^  void RegisterDelete(T *str) {$/;"	f	class:dmlc::ThreadLocalStore
RegisterDelete	nnvm/include/dmlc/thread_local.h	/^  void RegisterDelete(T *str) {$/;"	f	class:dmlc::ThreadLocalStore
Registry	dmlc-core/include/dmlc/registry.h	/^  Registry() {}$/;"	f	class:dmlc::Registry
Registry	dmlc-core/include/dmlc/registry.h	/^class Registry {$/;"	c	namespace:dmlc
Registry	nnvm/include/dmlc/registry.h	/^  Registry() {}$/;"	f	class:dmlc::Registry
Registry	nnvm/include/dmlc/registry.h	/^class Registry {$/;"	c	namespace:dmlc
Release	nnvm/src/pass/plan_memory.cc	/^  void Release(StorageID id, uint32_t node_id) {$/;"	f	class:nnvm::pass::__anon7::GraphAllocator
Remap	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^void Remap(Graph& g, std::unordered_map<const Node*, NodePtr>& m_mirror) {$/;"	f	namespace:nnvm::fusion::__anon4
RemoveBeginSlash	dmlc-core/src/io/s3_filesys.cc	/^inline const char *RemoveBeginSlash(const std::string &name) {$/;"	f	namespace:dmlc::io::s3
Request	nnvm/src/pass/plan_memory.cc	/^  StorageID Request(int dev_id, int dtype, TShape shape, uint32_t node_id) {$/;"	f	class:nnvm::pass::__anon7::GraphAllocator
ResetNamenode	dmlc-core/src/io/hdfs_filesys.cc	/^void HDFSFileSystem::ResetNamenode(const std::string &namenode) {$/;"	f	class:dmlc::io::HDFSFileSystem
ResetPartition	dmlc-core/src/io/cached_input_split.h	/^  virtual void ResetPartition(unsigned part_index, unsigned num_parts) {$/;"	f	class:dmlc::io::CachedInputSplit
ResetPartition	dmlc-core/src/io/input_split_base.cc	/^void InputSplitBase::ResetPartition(unsigned rank,$/;"	f	class:dmlc::io::InputSplitBase
ResetPartition	dmlc-core/src/io/single_file_split.h	/^  virtual void ResetPartition(unsigned part_index, unsigned num_parts) {$/;"	f	class:dmlc::io::SingleFileSplit
ResetSpace	src/session.cc	/^  inline void ResetSpace(TShape shape, int dev_mask = kCPU, int dtype = 0) {$/;"	f	struct:tinyflow::VarState
ResetStorage	src/torch/torch_util.h	/^  void ResetStorage(LuaRef tensor,$/;"	f	class:tinyflow::TorchState
Row	dmlc-core/include/dmlc/data.h	/^class Row {$/;"	c	namespace:dmlc
RowBlock	dmlc-core/include/dmlc/data.h	/^struct RowBlock {$/;"	s	namespace:dmlc
RowBlockContainer	dmlc-core/src/data/row_block.h	/^  RowBlockContainer(void) {$/;"	f	struct:dmlc::data::RowBlockContainer
RowBlockContainer	dmlc-core/src/data/row_block.h	/^struct RowBlockContainer {$/;"	s	namespace:dmlc::data
RowBlockIter	dmlc-core/include/dmlc/data.h	/^class RowBlockIter : public DataIter<RowBlock<IndexType> > {$/;"	c	namespace:dmlc
Run	dmlc-core/src/io/s3_filesys.cc	/^void WriteStream::Run(const std::string &method,$/;"	f	class:dmlc::io::s3::WriteStream
Run	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^void RTC::Run(std::vector<void*> const& input,$/;"	f	class:nnvm::fusion::RTC
Run	src/session.cc	/^TorchExecutor::Run(const std::unordered_map<std::string, TBlob>& inputs) {$/;"	f	class:tinyflow::TorchExecutor
Run	src/session.cc	/^const std::vector<TBlob>& TorchSession::Run($/;"	f	class:tinyflow::TorchSession
RunInit	dmlc-core/include/dmlc/parameter.h	/^  inline void RunInit(void *head,$/;"	f	class:dmlc::parameter::ParamManager
RunInit	nnvm/include/dmlc/parameter.h	/^  inline void RunInit(void *head,$/;"	f	class:dmlc::parameter::ParamManager
S3FileSystem	dmlc-core/src/io/s3_filesys.cc	/^S3FileSystem::S3FileSystem() {$/;"	f	class:dmlc::io::S3FileSystem
S3FileSystem	dmlc-core/src/io/s3_filesys.h	/^class S3FileSystem : public FileSystem {$/;"	c	namespace:dmlc::io
SDot	dmlc-core/include/dmlc/data.h	/^  inline V SDot(const V *weight, size_t size) const {$/;"	f	class:dmlc::Row
SHAPE_ASSIGN	nnvm/plugin/nnvm-fusion/src/fusion.cc	257;"	d	file:
SHAPE_ASSIGN	src/op_util.h	21;"	d
SPHINXBUILD	dmlc-core/doc/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXOPTS	dmlc-core/doc/Makefile	/^SPHINXOPTS    =$/;"	m
SRC	Makefile	/^SRC = $(wildcard src\/*.cc src\/*\/*.cc src\/*\/*\/*.cc)$/;"	m
SRC	nnvm/Makefile	/^SRC = $(wildcard src\/*.cc src\/*\/*.cc)$/;"	m
SameLuaState	dmlc-core/include/dmlc/lua.h	/^  inline bool SameLuaState(lua_State *L) const {$/;"	f	class:dmlc::LuaState
SameShape	nnvm/example/src/operator.cc	/^inline bool SameShape(const NodeAttrs& attrs,$/;"	f	namespace:myproject
SameShape	src/op_util.h	/^inline bool SameShape(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
SameType	nnvm/src/pass/infer_shape_type.cc	/^inline bool SameType(const NodeAttrs& attrs,$/;"	f	namespace:nnvm::pass::__anon10
Save	dmlc-core/include/dmlc/parameter.h	/^  inline void Save(dmlc::JSONWriter *writer) const {$/;"	f	struct:dmlc::Parameter
Save	dmlc-core/src/data/row_block.h	/^RowBlockContainer<IndexType>::Save(Stream *fo) const {$/;"	f	class:dmlc::data::RowBlockContainer
Save	dmlc-core/test/unittest/unittest_json.cc	/^  inline void Save(dmlc::JSONWriter *writer) const {$/;"	f	class:json::MyClass
Save	dmlc-core/test/unittest/unittest_serializer.cc	/^  inline void Save(dmlc::Stream *strm) const {$/;"	f	class:MyClass
Save	nnvm/include/dmlc/parameter.h	/^  inline void Save(dmlc::JSONWriter *writer) const {$/;"	f	struct:dmlc::Parameter
Save	nnvm/include/nnvm/tuple.h	/^  inline void Save(TStream *strm) const {$/;"	f	class:nnvm::TShape
Save	nnvm/include/nnvm/tuple.h	/^  inline void Save(dmlc::JSONWriter* writer) const {$/;"	f	class:nnvm::Tuple
Save	nnvm/src/pass/saveload_json.cc	/^    void Save(dmlc::JSONWriter *writer) const {$/;"	f	struct:nnvm::pass::__anon5::JSONNode::Entry
Save	nnvm/src/pass/saveload_json.cc	/^  void Save(dmlc::JSONWriter *writer) const {$/;"	f	struct:nnvm::pass::__anon5::JSONGraph
Save	nnvm/src/pass/saveload_json.cc	/^  void Save(dmlc::JSONWriter *writer) const {$/;"	f	struct:nnvm::pass::__anon5::JSONNode
SaveJSON	nnvm/include/nnvm/pass_functions.h	/^inline std::string SaveJSON(Graph graph) {$/;"	f	namespace:nnvm::pass
SaveJSON	nnvm/src/pass/saveload_json.cc	/^Graph SaveJSON(Graph src) {$/;"	f	namespace:nnvm::pass::__anon5
SaveLoadClassHandler	dmlc-core/include/dmlc/serializer.h	/^struct SaveLoadClassHandler {$/;"	s	namespace:dmlc::serializer
ScalarShape	src/op_util.h	/^inline bool ScalarShape(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
SecondParam	dmlc-core/test/parameter_test.cc	/^DMLC_REGISTER_PARAMETER(SecondParam);$/;"	v
SecondParam	dmlc-core/test/parameter_test.cc	/^struct SecondParam : public dmlc::Parameter<SecondParam> {$/;"	s	file:
Seek	dmlc-core/include/dmlc/memory_io.h	/^  virtual void Seek(size_t pos) {$/;"	f	struct:dmlc::MemoryFixedSizeStream
Seek	dmlc-core/include/dmlc/memory_io.h	/^  virtual void Seek(size_t pos) {$/;"	f	struct:dmlc::MemoryStringStream
Seek	dmlc-core/include/dmlc/recordio.h	/^  inline void Seek(size_t pos) {$/;"	f	class:dmlc::RecordIOReader
Seek	dmlc-core/src/io/hdfs_filesys.cc	/^  virtual void Seek(size_t pos) {$/;"	f	class:dmlc::io::HDFSStream
Seek	dmlc-core/src/io/local_filesys.cc	/^  virtual void Seek(size_t pos) {$/;"	f	class:dmlc::io::FileStream
Seek	dmlc-core/src/io/s3_filesys.cc	/^  virtual void Seek(size_t pos) {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
SeekRecordBegin	dmlc-core/src/io/line_split.cc	/^size_t LineSplitter::SeekRecordBegin(Stream *fi) {$/;"	f	class:dmlc::io::LineSplitter
SeekRecordBegin	dmlc-core/src/io/recordio_split.cc	/^size_t RecordIOSplitter::SeekRecordBegin(Stream *fi) {$/;"	f	class:dmlc::io::RecordIOSplitter
SeekStream	dmlc-core/include/dmlc/io.h	/^class SeekStream: public Stream {$/;"	c	namespace:dmlc
Serializable	dmlc-core/include/dmlc/io.h	/^class Serializable {$/;"	c	namespace:dmlc
Session	include/tinyflow/base.h	/^class Session {$/;"	c	namespace:tinyflow
Session	python/tinyflow/__init__.py	/^from ._session import Session$/;"	i
Session	python/tinyflow/_session.py	/^class Session(object):$/;"	c
SessionHandle	include/tinyflow/c_api.h	/^typedef void* SessionHandle;$/;"	t
SessionHandle	python/tinyflow/_session.py	/^SessionHandle = _ctypes.c_void_p$/;"	v
Set	dmlc-core/include/dmlc/parameter.h	/^  virtual void Set(void *head, const std::string &value) const {$/;"	f	class:dmlc::parameter::FieldEntry
Set	dmlc-core/include/dmlc/parameter.h	/^  virtual void Set(void *head, const std::string &value) const {$/;"	f	class:dmlc::parameter::FieldEntryBase
Set	nnvm/include/dmlc/parameter.h	/^  virtual void Set(void *head, const std::string &value) const {$/;"	f	class:dmlc::parameter::FieldEntry
Set	nnvm/include/dmlc/parameter.h	/^  virtual void Set(void *head, const std::string &value) const {$/;"	f	class:dmlc::parameter::FieldEntryBase
SetAttrs	nnvm/src/core/symbolic.cc	/^void Symbol::SetAttrs(const std::vector<std::pair<std::string, std::string> >& attrs) {$/;"	f	class:nnvm::Symbol
SetByPopStack_	dmlc-core/include/dmlc/lua.h	/^inline void LuaRef::SetByPopStack_(LuaState* s) {$/;"	f	class:dmlc::LuaRef
SetCredentials	dmlc-core/src/io/s3_filesys.cc	/^void S3FileSystem::SetCredentials(const std::string& aws_access_id,$/;"	f	class:dmlc::io::S3FileSystem
SetDefault	dmlc-core/include/dmlc/parameter.h	/^  virtual void SetDefault(void *head) const {$/;"	f	class:dmlc::parameter::FieldEntryBase
SetDefault	nnvm/include/dmlc/parameter.h	/^  virtual void SetDefault(void *head) const {$/;"	f	class:dmlc::parameter::FieldEntryBase
SetDim	nnvm/include/nnvm/tuple.h	/^  inline void SetDim(index_t dim) {$/;"	f	class:nnvm::Tuple
SetField	dmlc-core/include/dmlc/lua.h	/^inline LuaRef& LuaRef::SetField(const std::string& key, const T& value) {  \/\/ NOLINT(*)$/;"	f	class:dmlc::LuaRef
SetGlobalField	dmlc-core/include/dmlc/lua.h	/^inline void LuaState::SetGlobalField($/;"	f	class:dmlc::LuaState
SetParam	dmlc-core/include/dmlc/config.h	/^void Config::SetParam(const std::string& key, const T& value, bool is_string) {$/;"	f	class:dmlc::Config
Setup	src/session.cc	/^void TorchExecutor::Setup(const std::unordered_map<std::string, TBlob>& inputs) {$/;"	f	class:tinyflow::TorchExecutor
SetupAuxiliaryMembers	src/session.cc	/^void TorchExecutor::SetupAuxiliaryMembers() {$/;"	f	class:tinyflow::TorchExecutor
SetupFusion	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^bool SetupFusion(Graph& g, NodePtr node,$/;"	f	namespace:nnvm::fusion::__anon4
SetupOpExecs	src/session.cc	/^void TorchExecutor::SetupOpExecs() {$/;"	f	class:tinyflow::TorchExecutor
SetupShapeDType	src/session.cc	/^void TorchExecutor::SetupShapeDType($/;"	f	class:tinyflow::TorchExecutor
SetupStorage	src/session.cc	/^void TorchExecutor::SetupStorage() {$/;"	f	class:tinyflow::TorchExecutor
Sign	dmlc-core/src/io/s3_filesys.cc	/^static std::string Sign(const std::string &key, const std::string &content) {$/;"	f	namespace:dmlc::io::s3
Sign	dmlc-core/src/io/s3_filesys.cc	/^static std::string Sign(const std::string &key,$/;"	f	namespace:dmlc::io::s3
Signal	dmlc-core/include/dmlc/threadediter.h	/^  enum Signal {$/;"	g	class:dmlc::ThreadedIter
SignalForKill	dmlc-core/include/dmlc/concurrency.h	/^void ConcurrentBlockingQueue<T, type>::SignalForKill() {$/;"	f	class:dmlc::ConcurrentBlockingQueue
SingleFileSplit	dmlc-core/src/io/single_file_split.h	/^  explicit SingleFileSplit(const char *fname)$/;"	f	class:dmlc::io::SingleFileSplit
SingleFileSplit	dmlc-core/src/io/single_file_split.h	/^class SingleFileSplit : public InputSplit {$/;"	c	namespace:dmlc::io
Singleton	dmlc-core/include/dmlc/thread_local.h	/^  static ThreadLocalStore<T> *Singleton() {$/;"	f	class:dmlc::ThreadLocalStore
Singleton	nnvm/include/dmlc/thread_local.h	/^  static ThreadLocalStore<T> *Singleton() {$/;"	f	class:dmlc::ThreadLocalStore
Size	dmlc-core/include/dmlc/concurrency.h	/^size_t ConcurrentBlockingQueue<T, type>::Size() {$/;"	f	class:dmlc::ConcurrentBlockingQueue
Size	dmlc-core/src/data/row_block.h	/^  inline size_t Size(void) const {$/;"	f	struct:dmlc::data::RowBlockContainer
Size	nnvm/include/nnvm/tuple.h	/^  inline size_t Size() const {$/;"	f	class:nnvm::TShape
SlaveEntry	dmlc-core/tracker/dmlc_tracker/tracker.py	/^class SlaveEntry(object):$/;"	c
Slice	dmlc-core/include/dmlc/data.h	/^  inline RowBlock Slice(size_t begin, size_t end) const {$/;"	f	struct:dmlc::RowBlock
Spinlock	dmlc-core/include/dmlc/concurrency.h	/^  Spinlock() {$/;"	f	class:dmlc::Spinlock
Spinlock	dmlc-core/include/dmlc/concurrency.h	/^class Spinlock {$/;"	c	namespace:dmlc
Split	dmlc-core/include/dmlc/common.h	/^inline std::vector<std::string> Split(const std::string& s, char delim) {$/;"	f	namespace:dmlc
StackReset	dmlc-core/include/dmlc/lua.h	/^struct LuaState::StackReset {$/;"	s	class:dmlc::LuaState
StorageEntry	nnvm/src/pass/plan_memory.cc	/^  struct StorageEntry {$/;"	s	class:nnvm::pass::__anon7::GraphAllocator	file:
Str2T	dmlc-core/src/data/strtonum.h	/^class Str2T {$/;"	c	namespace:dmlc::data
Str2T	dmlc-core/src/data/strtonum.h	/^class Str2T<float> {$/;"	c	namespace:dmlc::data
Str2T	dmlc-core/src/data/strtonum.h	/^class Str2T<int32_t> {$/;"	c	namespace:dmlc::data
Str2T	dmlc-core/src/data/strtonum.h	/^class Str2T<int64_t> {$/;"	c	namespace:dmlc::data
Str2T	dmlc-core/src/data/strtonum.h	/^class Str2T<uint32_t> {$/;"	c	namespace:dmlc::data
Str2T	dmlc-core/src/data/strtonum.h	/^class Str2T<uint64_t> {$/;"	c	namespace:dmlc::data
Str2Type	dmlc-core/src/data/strtonum.h	/^inline T Str2Type(const char * begin, const char * end) {$/;"	f	namespace:dmlc::data
Stream	dmlc-core/include/dmlc/io.h	/^class Stream {  \/\/ NOLINT(*)$/;"	c	namespace:dmlc
StripEnd	dmlc-core/src/io/input_split_base.cc	/^std::string InputSplitBase::StripEnd(std::string str, char ch) {$/;"	f	class:dmlc::io::InputSplitBase
Symbol	nnvm/include/nnvm/symbolic.h	/^class Symbol {$/;"	c	namespace:nnvm
Symbol	nnvm/python/nnvm/graph.py	/^from .symbol import Symbol, Group as _Group$/;"	i
Symbol	nnvm/python/nnvm/symbol.py	/^class Symbol(SymbolBase):$/;"	c
SymbolBase	nnvm/python/nnvm/_ctypes/symbol.py	/^class SymbolBase(object):$/;"	c
SymbolBase	nnvm/python/nnvm/cython/symbol.pyx	/^cdef class SymbolBase:$/;"	c
SymbolBase	nnvm/python/nnvm/symbol.py	/^        from ._ctypes.symbol import SymbolBase,  _init_symbol_module$/;"	i
SymbolBase	nnvm/python/nnvm/symbol.py	/^        from ._cy2.symbol import SymbolBase,  _init_symbol_module$/;"	i
SymbolBase	nnvm/python/nnvm/symbol.py	/^        from ._cy3.symbol import SymbolBase,  _init_symbol_module$/;"	i
SymbolBase	nnvm/python/nnvm/symbol.py	/^    from ._ctypes.symbol import SymbolBase,  _init_symbol_module$/;"	i
SymbolHandle	nnvm/include/nnvm/c_api.h	/^typedef void *SymbolHandle;$/;"	t
SymbolHandle	nnvm/python/nnvm/_base.py	/^SymbolHandle = ctypes.c_void_p$/;"	v
SymbolHandle	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import SymbolHandle, OpHandle$/;"	i
SymbolHandle	nnvm/python/nnvm/graph.py	/^from ._base import GraphHandle, SymbolHandle$/;"	i
SymbolSetAttr	nnvm/python/nnvm/cython/symbol.pyx	/^cdef SymbolSetAttr(SymbolHandle handle, dict kwargs):$/;"	f
TBlob	include/tinyflow/base.h	/^struct TBlob {$/;"	s	namespace:tinyflow
TEST	dmlc-core/test/dmlc_test.mk	/^TEST=test\/filesys_test test\/dataiter_test\\$/;"	m
TEST	dmlc-core/test/unittest/unittest_any.cc	/^TEST(Any, basics) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_any.cc	/^TEST(Any, cover) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_any.cc	/^TEST(Any, json) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_array_view.cc	/^TEST(ArrayView, Basic) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_config.cc	/^TEST(Config, basics) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_config.cc	/^TEST(Config, multi_value) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_config.cc	/^TEST(Config, order) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_config.cc	/^TEST(Config, set_param) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_json.cc	/^TEST(JSON, any) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_json.cc	/^TEST(JSON, basics) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_logging.cc	/^TEST(Logging, basics) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_serializer.cc	/^TEST(Serializer, basics) {$/;"	f
TEST	dmlc-core/test/unittest/unittest_threaditer.cc	/^TEST(ThreadedIter, basics) {$/;"	f
TEST	nnvm/tests/cpp/op_test.cc	/^TEST(Op, GetAttr) {$/;"	f
TEST	nnvm/tests/cpp/tuple_test.cc	/^TEST(Tuple, Basic) {$/;"	f
TEST	nnvm/tests/cpp/unittest.mk	/^TEST = $(patsubst tests\/cpp\/%_test.cc, tests\/cpp\/%_test, $(TEST_SRC))$/;"	m
TEST_SRC	nnvm/tests/cpp/unittest.mk	/^TEST_SRC = $(wildcard tests\/cpp\/*_test.cc)$/;"	m
TINYFLOW_BASE_H_	include/tinyflow/base.h	7;"	d
TINYFLOW_C_API_H_	include/tinyflow/c_api.h	7;"	d
TINYFLOW_OP_UTIL_H_	src/op_util.h	7;"	d
TINYFLOW_TORCH_UTIL_H_	src/torch/torch_util.h	7;"	d
TORCH_PATH	Makefile	/^TORCH_PATH=${TORCH_HOME}$/;"	m
TShape	nnvm/include/nnvm/tuple.h	/^  inline TShape(RandomAccessIterator begin,$/;"	f	class:nnvm::TShape
TShape	nnvm/include/nnvm/tuple.h	/^  inline TShape(Tuple<index_t>&& s) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::TShape
TShape	nnvm/include/nnvm/tuple.h	/^  inline TShape(const Tuple<index_t>& s) { \/\/ NOLINT(*)$/;"	f	class:nnvm::TShape
TShape	nnvm/include/nnvm/tuple.h	/^  inline TShape(index_t ndim) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::TShape
TShape	nnvm/include/nnvm/tuple.h	/^  inline TShape(mshadow::Shape<dim> &&s) {\/\/ NOLINT(*)$/;"	f	class:nnvm::TShape
TShape	nnvm/include/nnvm/tuple.h	/^  inline TShape(std::initializer_list<index_t> init) {$/;"	f	class:nnvm::TShape
TShape	nnvm/include/nnvm/tuple.h	/^class TShape : public Tuple<index_t> {$/;"	c	namespace:nnvm
TaskRecord	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^    public TaskRecord(int taskId, String role) {$/;"	m	class:TaskRecord
TaskRecord	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^public class TaskRecord {$/;"	c
Tell	dmlc-core/include/dmlc/memory_io.h	/^  virtual size_t Tell(void) {$/;"	f	struct:dmlc::MemoryFixedSizeStream
Tell	dmlc-core/include/dmlc/memory_io.h	/^  virtual size_t Tell(void) {$/;"	f	struct:dmlc::MemoryStringStream
Tell	dmlc-core/include/dmlc/recordio.h	/^  inline size_t Tell(void) {$/;"	f	class:dmlc::RecordIOWriter
Tell	dmlc-core/src/io/hdfs_filesys.cc	/^  virtual size_t Tell(void) {$/;"	f	class:dmlc::io::HDFSStream
Tell	dmlc-core/src/io/local_filesys.cc	/^  virtual size_t Tell(void) {$/;"	f	class:dmlc::io::FileStream
Tell	dmlc-core/src/io/s3_filesys.cc	/^  virtual size_t Tell(void) {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
TestSaveLoad	dmlc-core/test/unittest/unittest_json.cc	/^inline void TestSaveLoad(T data) {$/;"	f	namespace:json
TestSaveLoad	dmlc-core/test/unittest/unittest_serializer.cc	/^inline void TestSaveLoad(T data) {$/;"	f
TextParserBase	dmlc-core/src/data/text_parser.h	/^  explicit TextParserBase(InputSplit *source,$/;"	f	class:dmlc::data::TextParserBase
TextParserBase	dmlc-core/src/data/text_parser.h	/^class TextParserBase : public ParserImpl<IndexType> {$/;"	c	namespace:dmlc::data
Thread	dmlc-core/tracker/dmlc_tracker/local.py	/^from threading import Thread$/;"	i
Thread	dmlc-core/tracker/dmlc_tracker/mpi.py	/^from threading import Thread$/;"	i
Thread	dmlc-core/tracker/dmlc_tracker/ssh.py	/^from threading import Thread$/;"	i
Thread	dmlc-core/tracker/dmlc_tracker/tracker.py	/^from threading import Thread$/;"	i
Thread	dmlc-core/tracker/dmlc_tracker/yarn.py	/^from threading import Thread$/;"	i
ThreadLocalState	dmlc-core/include/dmlc/lua.h	/^inline LuaState* LuaState::ThreadLocalState() {$/;"	f	class:dmlc::LuaState
ThreadLocalState	src/torch/torch_util.h	/^  static TorchState* ThreadLocalState() {$/;"	f	class:tinyflow::TorchState
ThreadLocalStore	dmlc-core/include/dmlc/thread_local.h	/^  ThreadLocalStore() {}$/;"	f	class:dmlc::ThreadLocalStore
ThreadLocalStore	dmlc-core/include/dmlc/thread_local.h	/^class ThreadLocalStore {$/;"	c	namespace:dmlc
ThreadLocalStore	nnvm/include/dmlc/thread_local.h	/^  ThreadLocalStore() {}$/;"	f	class:dmlc::ThreadLocalStore
ThreadLocalStore	nnvm/include/dmlc/thread_local.h	/^class ThreadLocalStore {$/;"	c	namespace:dmlc
ThreadedInputSplit	dmlc-core/src/io/threaded_input_split.h	/^  explicit ThreadedInputSplit(InputSplitBase *base)$/;"	f	class:dmlc::io::ThreadedInputSplit
ThreadedInputSplit	dmlc-core/src/io/threaded_input_split.h	/^class ThreadedInputSplit : public InputSplit {$/;"	c	namespace:dmlc::io
ThreadedIter	dmlc-core/include/dmlc/threadediter.h	/^  explicit ThreadedIter(size_t max_capacity = 8)$/;"	f	class:dmlc::ThreadedIter
ThreadedIter	dmlc-core/include/dmlc/threadediter.h	/^class ThreadedIter : public DataIter<DType> {$/;"	c	namespace:dmlc
ThreadedParser	dmlc-core/src/data/parser.h	/^  explicit ThreadedParser(ParserImpl<IndexType> *base)$/;"	f	class:dmlc::data::ThreadedParser
ThreadedParser	dmlc-core/src/data/parser.h	/^class ThreadedParser : public ParserImpl<IndexType> {$/;"	c	namespace:dmlc::data
ThreadlocalAllocator	dmlc-core/include/dmlc/memory.h	/^  ThreadlocalAllocator() {}$/;"	f	class:dmlc::ThreadlocalAllocator
ThreadlocalAllocator	dmlc-core/include/dmlc/memory.h	/^  ThreadlocalAllocator(const ThreadlocalAllocator<U>& other) {}$/;"	f	class:dmlc::ThreadlocalAllocator
ThreadlocalAllocator	dmlc-core/include/dmlc/memory.h	/^class ThreadlocalAllocator {$/;"	c	namespace:dmlc
ThreadlocalAllocator	nnvm/include/dmlc/memory.h	/^  ThreadlocalAllocator() {}$/;"	f	class:dmlc::ThreadlocalAllocator
ThreadlocalAllocator	nnvm/include/dmlc/memory.h	/^  ThreadlocalAllocator(const ThreadlocalAllocator<U>& other) {}$/;"	f	class:dmlc::ThreadlocalAllocator
ThreadlocalAllocator	nnvm/include/dmlc/memory.h	/^class ThreadlocalAllocator {$/;"	c	namespace:dmlc
ThreadlocalSharedPtr	dmlc-core/include/dmlc/memory.h	/^  ThreadlocalSharedPtr() : block_(nullptr) {}$/;"	f	struct:dmlc::ThreadlocalSharedPtr
ThreadlocalSharedPtr	dmlc-core/include/dmlc/memory.h	/^  ThreadlocalSharedPtr(ThreadlocalSharedPtr<T>&& other)$/;"	f	struct:dmlc::ThreadlocalSharedPtr
ThreadlocalSharedPtr	dmlc-core/include/dmlc/memory.h	/^  ThreadlocalSharedPtr(const ThreadlocalSharedPtr<T>& other)$/;"	f	struct:dmlc::ThreadlocalSharedPtr
ThreadlocalSharedPtr	dmlc-core/include/dmlc/memory.h	/^  ThreadlocalSharedPtr(std::nullptr_t other) : block_(nullptr) {}  \/\/ NOLINT(*)$/;"	f	struct:dmlc::ThreadlocalSharedPtr
ThreadlocalSharedPtr	dmlc-core/include/dmlc/memory.h	/^struct ThreadlocalSharedPtr {$/;"	s	namespace:dmlc
ThreadlocalSharedPtr	nnvm/include/dmlc/memory.h	/^  ThreadlocalSharedPtr() : block_(nullptr) {}$/;"	f	struct:dmlc::ThreadlocalSharedPtr
ThreadlocalSharedPtr	nnvm/include/dmlc/memory.h	/^  ThreadlocalSharedPtr(ThreadlocalSharedPtr<T>&& other)$/;"	f	struct:dmlc::ThreadlocalSharedPtr
ThreadlocalSharedPtr	nnvm/include/dmlc/memory.h	/^  ThreadlocalSharedPtr(const ThreadlocalSharedPtr<T>& other)$/;"	f	struct:dmlc::ThreadlocalSharedPtr
ThreadlocalSharedPtr	nnvm/include/dmlc/memory.h	/^  ThreadlocalSharedPtr(std::nullptr_t other) : block_(nullptr) {}  \/\/ NOLINT(*)$/;"	f	struct:dmlc::ThreadlocalSharedPtr
ThreadlocalSharedPtr	nnvm/include/dmlc/memory.h	/^struct ThreadlocalSharedPtr {$/;"	s	namespace:dmlc
TinyAPIThreadLocalEntry	src/c_api.cc	/^struct TinyAPIThreadLocalEntry {$/;"	s	file:
ToProtoString	dmlc-core/src/config.cc	/^string Config::ToProtoString(void) const {$/;"	f	class:dmlc::Config
Token	dmlc-core/src/config.cc	/^struct Token {$/;"	s	namespace:dmlc	file:
TokenizeError	dmlc-core/src/config.cc	/^  explicit TokenizeError(const string& msg = "tokenize error"): msg_(msg) { }$/;"	f	class:dmlc::TokenizeError
TokenizeError	dmlc-core/src/config.cc	/^class TokenizeError : public exception {$/;"	c	namespace:dmlc	file:
Tokenizer	dmlc-core/src/config.cc	/^  explicit Tokenizer(istream& is): is_(is), state_(kNone) {}  \/\/ NOLINT(*)$/;"	f	class:dmlc::Tokenizer
Tokenizer	dmlc-core/src/config.cc	/^class Tokenizer {$/;"	c	namespace:dmlc	file:
TorchExecutor	src/session.cc	/^class TorchExecutor {$/;"	c	namespace:tinyflow	file:
TorchSession	src/session.cc	/^  explicit TorchSession(const std::string& config) {$/;"	f	class:tinyflow::TorchSession
TorchSession	src/session.cc	/^class TorchSession : public Session {$/;"	c	namespace:tinyflow	file:
TorchState	src/torch/torch_util.h	/^  TorchState() {$/;"	f	class:tinyflow::TorchState
TorchState	src/torch/torch_util.h	/^class TorchState {$/;"	c	namespace:tinyflow
TotalAllocBytes	nnvm/src/pass/plan_memory.cc	/^  size_t TotalAllocBytes() const {$/;"	f	class:nnvm::pass::__anon7::GraphAllocator
Tree	dmlc-core/test/registry_test.cc	/^struct Tree {$/;"	s	namespace:tree	file:
TreeFactory	dmlc-core/test/registry_test.cc	/^struct TreeFactory$/;"	s	namespace:tree	file:
TryGetPathInfo	dmlc-core/src/io/s3_filesys.cc	/^bool S3FileSystem::TryGetPathInfo(const URI &path_, FileInfo *out_info) {$/;"	f	class:dmlc::io::S3FileSystem
TryLoadCache	dmlc-core/src/data/disk_row_iter.h	/^inline bool DiskRowIter<IndexType>::TryLoadCache(void) {$/;"	f	class:dmlc::data::DiskRowIter
Tuple	nnvm/include/nnvm/tuple.h	/^  inline Tuple(RandomAccessIterator begin,$/;"	f	class:nnvm::Tuple
Tuple	nnvm/include/nnvm/tuple.h	/^  inline Tuple(Tuple<ValueType>&& src) { \/\/ NOLINT(*)$/;"	f	class:nnvm::Tuple
Tuple	nnvm/include/nnvm/tuple.h	/^  inline Tuple(const Tuple<ValueType>& s) {$/;"	f	class:nnvm::Tuple
Tuple	nnvm/include/nnvm/tuple.h	/^  inline Tuple(std::initializer_list<ValueType> init) {$/;"	f	class:nnvm::Tuple
Tuple	nnvm/include/nnvm/tuple.h	/^class Tuple {$/;"	c	namespace:nnvm
Type	dmlc-core/include/dmlc/any.h	/^  struct Type {$/;"	s	class:dmlc::any
Type	dmlc-core/include/dmlc/type_traits.h	/^  typedef Else Type;$/;"	t	struct:dmlc::IfThenElseType
Type	dmlc-core/include/dmlc/type_traits.h	/^  typedef Then Type;$/;"	t	struct:dmlc::IfThenElseType
Type	nnvm/include/dmlc/any.h	/^  struct Type {$/;"	s	class:dmlc::any
Type	nnvm/include/dmlc/type_traits.h	/^  typedef Else Type;$/;"	t	struct:dmlc::IfThenElseType
Type	nnvm/include/dmlc/type_traits.h	/^  typedef Then Type;$/;"	t	struct:dmlc::IfThenElseType
TypeInfo	dmlc-core/include/dmlc/any.h	/^  TypeInfo() {$/;"	f	class:dmlc::any::TypeInfo
TypeInfo	dmlc-core/include/dmlc/any.h	/^class any::TypeInfo$/;"	c	class:dmlc::any
TypeInfo	nnvm/include/dmlc/any.h	/^  TypeInfo() {$/;"	f	class:dmlc::any::TypeInfo
TypeInfo	nnvm/include/dmlc/any.h	/^class any::TypeInfo$/;"	c	class:dmlc::any
TypeOnHeap	dmlc-core/include/dmlc/any.h	/^class any::TypeOnHeap {$/;"	c	class:dmlc::any
TypeOnHeap	nnvm/include/dmlc/any.h	/^class any::TypeOnHeap {$/;"	c	class:dmlc::any
TypeOnStack	dmlc-core/include/dmlc/any.h	/^class any::TypeOnStack {$/;"	c	class:dmlc::any
TypeOnStack	nnvm/include/dmlc/any.h	/^class any::TypeOnStack {$/;"	c	class:dmlc::any
UNAME	dmlc-core/make/dmlc.mk	/^	UNAME=$(shell uname)$/;"	m
UNAME	dmlc-core/make/dmlc.mk	/^	UNAME=Windows$/;"	m
UNAME_S	Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	nnvm/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNITTEST	dmlc-core/test/unittest/dmlc_unittest.mk	/^UNITTEST=$(UTEST_ROOT)\/dmlc_unittest$/;"	m
UNITTEST_OBJ	dmlc-core/test/unittest/dmlc_unittest.mk	/^UNITTEST_OBJ=$(patsubst %.cc,%.o,$(UNITTEST_SRC))$/;"	m
UNITTEST_SRC	dmlc-core/test/unittest/dmlc_unittest.mk	/^UNITTEST_SRC=$(wildcard $(UTEST_ROOT)\/*.cc)$/;"	m
URI	dmlc-core/src/io/filesys.h	/^  URI(void) {}$/;"	f	struct:dmlc::io::URI
URI	dmlc-core/src/io/filesys.h	/^  explicit URI(const char *uri) {$/;"	f	struct:dmlc::io::URI
URI	dmlc-core/src/io/filesys.h	/^struct URI {$/;"	s	namespace:dmlc::io
URISpec	dmlc-core/src/io/uri_spec.h	/^  explicit URISpec(const std::string& uri,$/;"	f	class:dmlc::io::URISpec
URISpec	dmlc-core/src/io/uri_spec.h	/^class URISpec {$/;"	c	namespace:dmlc::io
USE_AZURE	dmlc-core/make/config.mk	/^USE_AZURE = 0$/;"	m
USE_FUSION	Makefile	/^USE_FUSION = 0$/;"	m
USE_HDFS	dmlc-core/make/config.mk	/^USE_HDFS = 0$/;"	m
USE_S3	dmlc-core/make/config.mk	/^USE_S3 = 0$/;"	m
USE_SSE	dmlc-core/Makefile	/^	USE_SSE = 1$/;"	m
UTEST_ROOT	dmlc-core/test/unittest/dmlc_unittest.mk	/^UTEST_ROOT=test\/unittest$/;"	m
UndefinedHandler	dmlc-core/include/dmlc/lua.h	/^struct UndefinedHandler {$/;"	s	namespace:dmlc::lua_stack
UndefinedSerializerFor	dmlc-core/include/dmlc/serializer.h	/^struct UndefinedSerializerFor {$/;"	s	namespace:dmlc::serializer
Update	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^void Update(std::unordered_map<const Node*, NodePtr>& m_mirror) {$/;"	f	namespace:nnvm::fusion::__anon4
UpdateAttrMap	nnvm/src/core/op.cc	/^void Op::UpdateAttrMap(const std::string& key,$/;"	f	class:nnvm::Op
UpdateNodeVersion	nnvm/src/core/symbolic.cc	/^inline void UpdateNodeVersion(Node *n) {$/;"	f	namespace:nnvm
Upload	dmlc-core/src/io/s3_filesys.cc	/^void WriteStream::Upload(bool force_upload_even_if_zero_bytes) {$/;"	f	class:dmlc::io::s3::WriteStream
Value	dmlc-core/include/dmlc/threadediter.h	/^  virtual const DType &Value(void) const {$/;"	f	class:dmlc::ThreadedIter
Value	dmlc-core/src/data/basic_row_iter.h	/^  virtual const RowBlock<IndexType> &Value(void) const {$/;"	f	class:dmlc::data::BasicRowIter
Value	dmlc-core/src/data/disk_row_iter.h	/^  virtual const RowBlock<IndexType> &Value(void) const {$/;"	f	class:dmlc::data::DiskRowIter
Value	dmlc-core/src/data/parser.h	/^  virtual const RowBlock<IndexType> &Value(void) const {$/;"	f	class:dmlc::data::ParserImpl
VarState	src/session.cc	/^struct VarState {$/;"	s	namespace:tinyflow	file:
Variable	nnvm/python/nnvm/symbol.py	/^def Variable(name, **kwargs):$/;"	f
Variable	python/tinyflow/_base.py	/^def Variable(init=None, name=None):$/;"	f
VariableAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  VariableAST(std::string name)$/;"	f	class:nnvm::fusion::VariableAST
VariableAST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^class VariableAST : public AST {$/;"	c	namespace:nnvm::fusion
VariableParam	nnvm/src/core/symbolic.cc	/^struct VariableParam {$/;"	s	namespace:nnvm	file:
W	example/mnist_softmax.py	/^W = tf.Variable(tf.zeros([784, 10]))$/;"	v
W	example/mnist_softmax_minimum.py	/^W = tf.Variable(tf.zeros([784, 10]))$/;"	v
WHOLE_ARCH	Makefile	/^	WHOLE_ARCH= --whole-archive$/;"	m
WHOLE_ARCH	Makefile	/^	WHOLE_ARCH= -all_load$/;"	m
WHOLE_ARCH	nnvm/Makefile	/^	WHOLE_ARCH= --whole-archive$/;"	m
WHOLE_ARCH	nnvm/Makefile	/^	WHOLE_ARCH= -all_load$/;"	m
WITH_FPIC	dmlc-core/make/config.mk	/^WITH_FPIC = 1$/;"	m
WITH_FPIC	dmlc-core/make/dmlc.mk	/^	WITH_FPIC = 1$/;"	m
W_grad	example/mnist_softmax_minimum.py	/^W_grad = tf.gradients(cross_entropy, [W])[0]$/;"	v
Write	dmlc-core/include/dmlc/io.h	/^inline void Stream::Write(const T &data) {$/;"	f	class:dmlc::Stream
Write	dmlc-core/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const ContainerType &array) {$/;"	f	struct:dmlc::json::ArrayHandler
Write	dmlc-core/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const ContainerType &map) {$/;"	f	struct:dmlc::json::MapHandler
Write	dmlc-core/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const T &data) {$/;"	f	struct:dmlc::json::Handler
Write	dmlc-core/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const T &value) {$/;"	f	struct:dmlc::json::CommonJSONSerializer
Write	dmlc-core/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const ValueType &value) {$/;"	f	struct:dmlc::json::NumericHandler
Write	dmlc-core/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const any &data) {$/;"	f	struct:dmlc::json::Handler
Write	dmlc-core/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const std::pair<K, V> &kv) {$/;"	f	struct:dmlc::json::Handler
Write	dmlc-core/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const std::string &value) {$/;"	f	struct:dmlc::json::Handler
Write	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::Write(const ValueType &value) {$/;"	f	class:dmlc::JSONWriter
Write	dmlc-core/include/dmlc/memory_io.h	/^  virtual void Write(const void *ptr, size_t size) {$/;"	f	struct:dmlc::MemoryFixedSizeStream
Write	dmlc-core/include/dmlc/memory_io.h	/^  virtual void Write(const void *ptr, size_t size) {$/;"	f	struct:dmlc::MemoryStringStream
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const ContainerType &data) {$/;"	f	struct:dmlc::serializer::CollectionHandler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const ListType &data) {$/;"	f	struct:dmlc::serializer::ListHandler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const T &data) {$/;"	f	struct:dmlc::serializer::Handler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const T &data) {$/;"	f	struct:dmlc::serializer::IfThenElse
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const T &data) {$/;"	f	struct:dmlc::serializer::PODHandler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const T &data) {$/;"	f	struct:dmlc::serializer::SaveLoadClassHandler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const std::basic_string<T> &data) {$/;"	f	struct:dmlc::serializer::Handler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const std::basic_string<T> &vec) {$/;"	f	struct:dmlc::serializer::PODStringHandler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const std::pair<TA, TB> &data) {$/;"	f	struct:dmlc::serializer::Handler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const std::pair<TA, TB> &data) {$/;"	f	struct:dmlc::serializer::PairHandler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const std::vector<T> &data) {$/;"	f	struct:dmlc::serializer::Handler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const std::vector<T> &vec) {$/;"	f	struct:dmlc::serializer::ComposeVectorHandler
Write	dmlc-core/include/dmlc/serializer.h	/^  inline static void Write(Stream *strm, const std::vector<T> &vec) {$/;"	f	struct:dmlc::serializer::PODVectorHandler
Write	dmlc-core/src/io/hdfs_filesys.cc	/^  virtual void Write(const void *ptr, size_t size) {$/;"	f	class:dmlc::io::HDFSStream
Write	dmlc-core/src/io/local_filesys.cc	/^  virtual void Write(const void *ptr, size_t size) {$/;"	f	class:dmlc::io::FileStream
Write	dmlc-core/src/io/s3_filesys.cc	/^  virtual void Write(const void *ptr, size_t size) {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
Write	dmlc-core/src/io/s3_filesys.cc	/^void WriteStream::Write(const void *ptr, size_t size) {$/;"	f	class:dmlc::io::s3::WriteStream
Write	dmlc-core/src/io/single_file_split.h	/^  virtual void Write(const void *ptr, size_t size) {$/;"	f	class:dmlc::io::SingleFileSplit
Write	nnvm/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const ContainerType &array) {$/;"	f	struct:dmlc::json::ArrayHandler
Write	nnvm/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const ContainerType &map) {$/;"	f	struct:dmlc::json::MapHandler
Write	nnvm/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const T &data) {$/;"	f	struct:dmlc::json::Handler
Write	nnvm/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const T &value) {$/;"	f	struct:dmlc::json::CommonJSONSerializer
Write	nnvm/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const ValueType &value) {$/;"	f	struct:dmlc::json::NumericHandler
Write	nnvm/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const any &data) {$/;"	f	struct:dmlc::json::Handler
Write	nnvm/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const std::pair<K, V> &kv) {$/;"	f	struct:dmlc::json::Handler
Write	nnvm/include/dmlc/json.h	/^  inline static void Write(JSONWriter *writer, const std::string &value) {$/;"	f	struct:dmlc::json::Handler
Write	nnvm/include/dmlc/json.h	/^inline void JSONWriter::Write(const ValueType &value) {$/;"	f	class:dmlc::JSONWriter
Write	nnvm/src/pass/saveload_json.cc	/^  inline static void Write(JSONWriter *writer, const std::shared_ptr<any> &data) {$/;"	f	struct:dmlc::json::Handler
WriteAny	dmlc-core/include/dmlc/json.h	/^  inline static void WriteAny(JSONWriter *writer, const any &data) {$/;"	f	class:dmlc::json::AnyJSONManager
WriteAny	nnvm/include/dmlc/json.h	/^  inline static void WriteAny(JSONWriter *writer, const any &data) {$/;"	f	class:dmlc::json::AnyJSONManager
WriteArrayItem	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::WriteArrayItem(const ValueType &value) {$/;"	f	class:dmlc::JSONWriter
WriteArrayItem	nnvm/include/dmlc/json.h	/^inline void JSONWriter::WriteArrayItem(const ValueType &value) {$/;"	f	class:dmlc::JSONWriter
WriteArraySeperator	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::WriteArraySeperator() {$/;"	f	class:dmlc::JSONWriter
WriteArraySeperator	nnvm/include/dmlc/json.h	/^inline void JSONWriter::WriteArraySeperator() {$/;"	f	class:dmlc::JSONWriter
WriteNoEscape	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::WriteNoEscape(const std::string &s) {$/;"	f	class:dmlc::JSONWriter
WriteNoEscape	nnvm/include/dmlc/json.h	/^inline void JSONWriter::WriteNoEscape(const std::string &s) {$/;"	f	class:dmlc::JSONWriter
WriteNumber	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::WriteNumber(const ValueType &v) {$/;"	f	class:dmlc::JSONWriter
WriteNumber	nnvm/include/dmlc/json.h	/^inline void JSONWriter::WriteNumber(const ValueType &v) {$/;"	f	class:dmlc::JSONWriter
WriteObjectKeyValue	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::WriteObjectKeyValue(const std::string &key,$/;"	f	class:dmlc::JSONWriter
WriteObjectKeyValue	nnvm/include/dmlc/json.h	/^inline void JSONWriter::WriteObjectKeyValue(const std::string &key,$/;"	f	class:dmlc::JSONWriter
WriteRecord	dmlc-core/include/dmlc/recordio.h	/^  inline void WriteRecord(const std::string &data) {$/;"	f	class:dmlc::RecordIOWriter
WriteRecord	dmlc-core/src/recordio.cc	/^void RecordIOWriter::WriteRecord(const void *buf, size_t size) {$/;"	f	class:dmlc::RecordIOWriter
WriteSStreamCallback	dmlc-core/src/io/s3_filesys.cc	/^size_t WriteSStreamCallback(char *buf, size_t size, size_t count, void *fp) {$/;"	f	namespace:dmlc::io::s3
WriteSeperator	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::WriteSeperator() {$/;"	f	class:dmlc::JSONWriter
WriteSeperator	nnvm/include/dmlc/json.h	/^inline void JSONWriter::WriteSeperator() {$/;"	f	class:dmlc::JSONWriter
WriteStream	dmlc-core/src/io/s3_filesys.cc	/^  WriteStream(const URI &path,$/;"	f	class:dmlc::io::s3::WriteStream
WriteStream	dmlc-core/src/io/s3_filesys.cc	/^class WriteStream : public Stream {$/;"	c	namespace:dmlc::io::s3	file:
WriteString	dmlc-core/include/dmlc/json.h	/^inline void JSONWriter::WriteString(const std::string &s) {$/;"	f	class:dmlc::JSONWriter
WriteString	nnvm/include/dmlc/json.h	/^inline void JSONWriter::WriteString(const std::string &s) {$/;"	f	class:dmlc::JSONWriter
WriteStringCallback	dmlc-core/src/io/s3_filesys.cc	/^size_t WriteStringCallback(char *buf, size_t size, size_t count, void *fp) {$/;"	f	namespace:dmlc::io::s3
XMLIter	dmlc-core/src/io/s3_filesys.cc	/^  XMLIter()$/;"	f	struct:dmlc::io::s3::XMLIter
XMLIter	dmlc-core/src/io/s3_filesys.cc	/^  explicit XMLIter(const char *content)$/;"	f	struct:dmlc::io::s3::XMLIter
XMLIter	dmlc-core/src/io/s3_filesys.cc	/^struct XMLIter {$/;"	s	namespace:dmlc::io::s3	file:
ZeroParam	src/op_tensor.cc	/^struct ZeroParam : public dmlc::Parameter<ZeroParam> {$/;"	s	namespace:tinyflow	file:
ZeroShape	src/op_tensor.cc	/^inline bool ZeroShape(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
ZeroType	src/op_tensor.cc	/^inline bool ZeroType(const NodeAttrs& attrs,$/;"	f	namespace:tinyflow
_Group	nnvm/python/nnvm/graph.py	/^from .symbol import Symbol, Group as _Group$/;"	i
_HELPER	dmlc-core/scripts/lint.py	/^_HELPER = LintHelper()$/;"	v
_HELPER	dmlc-core/scripts/lint3.py	/^_HELPER = LintHelper()$/;"	v
_LIB	nnvm/python/nnvm/_base.py	/^_LIB = _load_lib()$/;"	v
_LIB	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import _LIB$/;"	i
_LIB	nnvm/python/nnvm/graph.py	/^from ._base import _LIB$/;"	i
_LIB	nnvm/python/nnvm/symbol.py	/^from ._base import _LIB, check_call as _check_call$/;"	i
_LIB	python/tinyflow/_base.py	/^from nnvm._base import c_str, check_call, _LIB$/;"	i
_LIB	python/tinyflow/_session.py	/^from nnvm._base import c_str, check_call, _LIB, c_array, nn_uint$/;"	i
_Number	nnvm/python/nnvm/cython/symbol.pyx	/^from numbers import Number as _Number$/;"	i
_Number	nnvm/python/nnvm/symbol.py	/^from numbers import Number as _Number$/;"	i
__DICT__	dmlc-core/include/dmlc/parameter.h	/^  inline std::map<std::string, std::string> __DICT__() const {$/;"	f	struct:dmlc::Parameter
__DICT__	nnvm/include/dmlc/parameter.h	/^  inline std::map<std::string, std::string> __DICT__() const {$/;"	f	struct:dmlc::Parameter
__DOC__	dmlc-core/include/dmlc/parameter.h	/^  inline static std::string __DOC__() {$/;"	f	struct:dmlc::Parameter
__DOC__	nnvm/include/dmlc/parameter.h	/^  inline static std::string __DOC__() {$/;"	f	struct:dmlc::Parameter
__FIELDS__	dmlc-core/include/dmlc/parameter.h	/^  inline static std::vector<ParamFieldInfo> __FIELDS__() {$/;"	f	struct:dmlc::Parameter
__FIELDS__	nnvm/include/dmlc/parameter.h	/^  inline static std::vector<ParamFieldInfo> __FIELDS__() {$/;"	f	struct:dmlc::Parameter
__REGISTER_OR_GET__	dmlc-core/include/dmlc/registry.h	/^  inline EntryType &__REGISTER_OR_GET__(const std::string& name) {$/;"	f	class:dmlc::Registry
__REGISTER_OR_GET__	nnvm/include/dmlc/registry.h	/^  inline EntryType &__REGISTER_OR_GET__(const std::string& name) {$/;"	f	class:dmlc::Registry
__REGISTER__	dmlc-core/include/dmlc/registry.h	/^  inline EntryType &__REGISTER__(const std::string& name) {$/;"	f	class:dmlc::Registry
__REGISTER__	nnvm/include/dmlc/registry.h	/^  inline EntryType &__REGISTER__(const std::string& name) {$/;"	f	class:dmlc::Registry
__add__	nnvm/python/nnvm/symbol.py	/^    def __add__(self, other):$/;"	m	class:Symbol	file:
__all__	nnvm/python/nnvm/_base.py	/^__all__ = ['NNNetError']$/;"	v
__all__	python/tinyflow/_base.py	/^__all__ = ["float32", "placeholder", "Variable", "group",$/;"	v
__builtin__	nnvm/python/nnvm/libinfo.py	/^    import __builtin__$/;"	i
__builtin__	nnvm/python/nnvm/libinfo.py	/^    import builtins as __builtin__$/;"	i
__builtin__	python/tinyflow/_base.py	/^    import __builtin__$/;"	i
__builtin__	python/tinyflow/_base.py	/^    import builtins as __builtin__$/;"	i
__call__	nnvm/python/nnvm/_ctypes/symbol.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:SymbolBase	file:
__copy__	nnvm/python/nnvm/symbol.py	/^    def __copy__(self):$/;"	m	class:Symbol	file:
__dealloc__	nnvm/python/nnvm/cython/symbol.pyx	/^    def __dealloc__(self):$/;"	m	class:SymbolBase	file:
__deepcopy__	nnvm/python/nnvm/symbol.py	/^    def __deepcopy__(self, _=None):$/;"	m	class:Symbol	file:
__del__	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def __del__(self):$/;"	m	class:RabitTracker	file:
__del__	nnvm/python/nnvm/_ctypes/symbol.py	/^    def __del__(self):$/;"	m	class:SymbolBase	file:
__del__	nnvm/python/nnvm/graph.py	/^    def __del__(self):$/;"	m	class:Graph	file:
__del__	python/tinyflow/_session.py	/^    def __del__(self):$/;"	m	class:Session	file:
__div__	nnvm/python/nnvm/symbol.py	/^    def __div__(self, other):$/;"	m	class:Symbol	file:
__enter__	nnvm/python/nnvm/attribute.py	/^    def __enter__(self):$/;"	m	class:AttrScope	file:
__enter__	nnvm/python/nnvm/name.py	/^    def __enter__(self):$/;"	m	class:NameManager	file:
__exit__	nnvm/python/nnvm/attribute.py	/^    def __exit__(self, ptype, value, trace):$/;"	m	class:AttrScope	file:
__exit__	nnvm/python/nnvm/name.py	/^    def __exit__(self, ptype, value, trace):$/;"	m	class:NameManager	file:
__getitem__	nnvm/python/nnvm/symbol.py	/^    def __getitem__(self, index):$/;"	m	class:Symbol	file:
__init__	dmlc-core/scripts/lint.py	/^    def __init__(self):$/;"	m	class:LintHelper
__init__	dmlc-core/scripts/lint3.py	/^    def __init__(self):$/;"	m	class:LintHelper
__init__	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def __init__(self, hostIP, cmd, port=9091, port_end=9999, envs=None):$/;"	m	class:PSTracker
__init__	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def __init__(self, hostIP, nslave, port=9091, port_end=9999):$/;"	m	class:RabitTracker
__init__	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def __init__(self, sock):$/;"	m	class:ExSocket
__init__	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def __init__(self, sock, s_addr):$/;"	m	class:SlaveEntry
__init__	nnvm/python/nnvm/_ctypes/symbol.py	/^    def __init__(self, handle):$/;"	m	class:SymbolBase
__init__	nnvm/python/nnvm/attribute.py	/^    def __init__(self, **kwargs):$/;"	m	class:AttrScope
__init__	nnvm/python/nnvm/cython/symbol.pyx	/^    def __init__(self, handle):$/;"	m	class:SymbolBase
__init__	nnvm/python/nnvm/graph.py	/^    def __init__(self, handle):$/;"	m	class:Graph
__init__	nnvm/python/nnvm/name.py	/^    def __init__(self):$/;"	m	class:NameManager
__init__	nnvm/python/nnvm/name.py	/^    def __init__(self, prefix):$/;"	m	class:Prefix
__init__	python/tinyflow/_session.py	/^    def __init__(self, config='cpu'):$/;"	m	class:Session
__init__	python/tinyflow/datasets.py	/^    def __init__(self, X, Y):$/;"	m	class:ArrayPacker
__init__	python/tinyflow/train.py	/^    def __init__(self, learning_rate, name="GradientDescent"):$/;"	m	class:GradientDescentOptimizer
__init__	python/tinyflow/train.py	/^    def __init__(self, learning_rate=0.001, beta1=0.9, beta2=0.999, epsilon=1e-04, name='Adam'):$/;"	m	class:AdamOptimizer
__mul__	nnvm/python/nnvm/symbol.py	/^    def __mul__(self, other):$/;"	m	class:Symbol	file:
__neg__	nnvm/python/nnvm/symbol.py	/^    def __neg__(self):$/;"	m	class:Symbol	file:
__pow__	nnvm/python/nnvm/symbol.py	/^    def __pow__(self, other):$/;"	m	class:Symbol	file:
__radd__	nnvm/python/nnvm/symbol.py	/^    def __radd__(self, other):$/;"	m	class:Symbol	file:
__rdiv__	nnvm/python/nnvm/symbol.py	/^    def __rdiv__(self, other):$/;"	m	class:Symbol	file:
__rmul__	nnvm/python/nnvm/symbol.py	/^    def __rmul__(self, other):$/;"	m	class:Symbol	file:
__rpow__	nnvm/python/nnvm/symbol.py	/^    def __rpow__(self, other):$/;"	m	class:Symbol	file:
__rsub__	nnvm/python/nnvm/symbol.py	/^    def __rsub__(self, other):$/;"	m	class:Symbol	file:
__rtruediv__	nnvm/python/nnvm/symbol.py	/^    def __rtruediv__(self, other):$/;"	m	class:Symbol	file:
__slots__	nnvm/python/nnvm/_ctypes/symbol.py	/^    __slots__ = ["handle"]$/;"	v	class:SymbolBase
__slots__	nnvm/python/nnvm/symbol.py	/^    __slots__ = []$/;"	v	class:Symbol
__sub__	nnvm/python/nnvm/symbol.py	/^    def __sub__(self, other):$/;"	m	class:Symbol	file:
__truediv__	nnvm/python/nnvm/symbol.py	/^    def __truediv__(self, other):$/;"	m	class:Symbol	file:
__version__	nnvm/python/nnvm/__init__.py	/^__version__ = _base.__version__$/;"	v
__version__	nnvm/python/nnvm/_base.py	/^__version__ = libinfo.__version__$/;"	v
__version__	nnvm/python/nnvm/libinfo.py	/^__version__ = "0.7.0"$/;"	v
_abs	nnvm/python/nnvm/__init__.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	nnvm/python/nnvm/_ctypes/symbol.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	nnvm/python/nnvm/cython/symbol.pyx	/^from __future__ import absolute_import as _abs$/;"	i
_abs	nnvm/python/nnvm/graph.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	nnvm/python/nnvm/name.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	nnvm/python/nnvm/symbol.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	python/tinyflow/__init__.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	python/tinyflow/_base.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	python/tinyflow/_ops.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	python/tinyflow/_session.py	/^from __future__ import absolute_import as _abs$/;"	i
_abs	python/tinyflow/_util.py	/^from __future__ import absolute_import as _abs$/;"	i
_add_control_deps	nnvm/python/nnvm/symbol.py	/^    def _add_control_deps(self, deps):$/;"	m	class:Symbol
_all_variable_inits	python/tinyflow/_base.py	/^_all_variable_inits = []$/;"	v
_base	nnvm/python/nnvm/__init__.py	/^from . import _base$/;"	i
_base	nnvm/python/nnvm/symbol.py	/^from . import _base$/;"	i
_base	python/tinyflow/__init__.py	/^from . import _base$/;"	i
_base	python/tinyflow/train.py	/^from . import _base$/;"	i
_check_call	nnvm/python/nnvm/symbol.py	/^from ._base import _LIB, check_call as _check_call$/;"	i
_compose	nnvm/python/nnvm/_ctypes/symbol.py	/^    def _compose(self, *args, **kwargs):$/;"	m	class:SymbolBase
_cpplint_state	dmlc-core/scripts/lint.py	/^from cpplint import _cpplint_state$/;"	i
_cpplint_state	dmlc-core/scripts/lint3.py	/^from cpplint import _cpplint_state$/;"	i
_ctypes	nnvm/python/nnvm/cython/symbol.pyx	/^import ctypes as _ctypes$/;"	i
_ctypes	nnvm/python/nnvm/symbol.py	/^import ctypes as _ctypes$/;"	i
_ctypes	python/tinyflow/_base.py	/^import ctypes as _ctypes$/;"	i
_ctypes	python/tinyflow/_session.py	/^import ctypes as _ctypes$/;"	i
_get_list_copt	nnvm/python/nnvm/symbol.py	/^    def _get_list_copt(self, option):$/;"	m	class:Symbol
_get_numpy	python/tinyflow/_session.py	/^def _get_numpy(cptr, dtype, shape):$/;"	f
_init_symbol_module	nnvm/python/nnvm/_ctypes/symbol.py	/^def _init_symbol_module(symbol_class, root_namespace):$/;"	f
_init_symbol_module	nnvm/python/nnvm/cython/symbol.pyx	/^def _init_symbol_module(symbol_class, root_namespace):$/;"	f
_init_symbol_module	nnvm/python/nnvm/symbol.py	/^        from ._ctypes.symbol import SymbolBase,  _init_symbol_module$/;"	i
_init_symbol_module	nnvm/python/nnvm/symbol.py	/^        from ._cy2.symbol import SymbolBase,  _init_symbol_module$/;"	i
_init_symbol_module	nnvm/python/nnvm/symbol.py	/^        from ._cy3.symbol import SymbolBase,  _init_symbol_module$/;"	i
_init_symbol_module	nnvm/python/nnvm/symbol.py	/^    from ._ctypes.symbol import SymbolBase,  _init_symbol_module$/;"	i
_internal	nnvm/python/nnvm/symbol.py	/^from . import _symbol_internal as _internal$/;"	i
_load_lib	nnvm/python/nnvm/_base.py	/^def _load_lib():$/;"	f
_make_atomic_symbol_function	nnvm/python/nnvm/_ctypes/symbol.py	/^def _make_atomic_symbol_function(handle, name):$/;"	f
_make_atomic_symbol_function	nnvm/python/nnvm/cython/symbol.pyx	/^cdef _make_atomic_symbol_function(OpHandle handle, string name):$/;"	f
_os	nnvm/python/nnvm/symbol.py	/^import os as _os$/;"	i
_print_summary_map	dmlc-core/scripts/lint.py	/^    def _print_summary_map(strm, result_map, ftype):$/;"	m	class:LintHelper
_print_summary_map	dmlc-core/scripts/lint3.py	/^    def _print_summary_map(strm, result_map, ftype):$/;"	m	class:LintHelper
_set_attr	nnvm/python/nnvm/_ctypes/symbol.py	/^    def _set_attr(self, **kwargs):$/;"	m	class:SymbolBase
_set_attr	nnvm/python/nnvm/cython/symbol.pyx	/^    def _set_attr(self, **kwargs):$/;"	m	class:SymbolBase
_set_json_attr	nnvm/python/nnvm/graph.py	/^    def _set_json_attr(self, key, value, type_name=None):$/;"	m	class:Graph
_set_symbol_class	nnvm/python/nnvm/_ctypes/symbol.py	/^def _set_symbol_class(cls):$/;"	f
_set_symbol_class	nnvm/python/nnvm/cython/symbol.pyx	/^cdef _set_symbol_class(cls):$/;"	f
_set_symbol_list_attr	nnvm/python/nnvm/graph.py	/^    def _set_symbol_list_attr(self, key, value):$/;"	m	class:Graph
_sym	python/tinyflow/nn.py	/^from nnvm import symbol as _sym$/;"	i
_sym	python/tinyflow/train.py	/^from nnvm import symbol as _sym$/;"	i
_symbol_cls	nnvm/python/nnvm/_ctypes/symbol.py	/^_symbol_cls = SymbolBase$/;"	v
_symbol_cls	nnvm/python/nnvm/cython/symbol.pyx	/^_symbol_cls = SymbolBase$/;"	v
_symbol_internal	python/tinyflow/_base.py	/^from nnvm import _symbol_internal$/;"	i
_symbol_internal	python/tinyflow/_ops.py	/^from nnvm import _symbol_internal$/;"	i
_sys	nnvm/python/nnvm/cython/symbol.pyx	/^import sys as _sys$/;"	i
_sys	nnvm/python/nnvm/symbol.py	/^import sys as _sys$/;"	i
a	dmlc-core/test/unittest/unittest_serializer.cc	/^  int a;$/;"	m	struct:Param	file:
abortDiagnosis	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private String abortDiagnosis = "";$/;"	f	class:ApplicationMaster	file:
abortJob	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized void abortJob(String msg) {$/;"	m	class:ApplicationMaster	file:
abortRequested	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^    public boolean abortRequested = false;$/;"	f	class:TaskRecord
absolute_import	dmlc-core/tracker/dmlc_tracker/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	dmlc-core/tracker/dmlc_tracker/local.py	/^from __future__ import absolute_import$/;"	i
absolute_import	dmlc-core/tracker/dmlc_tracker/mpi.py	/^from __future__ import absolute_import$/;"	i
absolute_import	dmlc-core/tracker/dmlc_tracker/sge.py	/^from __future__ import absolute_import$/;"	i
absolute_import	dmlc-core/tracker/dmlc_tracker/ssh.py	/^from __future__ import absolute_import$/;"	i
absolute_import	dmlc-core/tracker/dmlc_tracker/submit.py	/^from __future__ import absolute_import$/;"	i
absolute_import	dmlc-core/tracker/dmlc_tracker/tracker.py	/^from __future__ import absolute_import$/;"	i
absolute_import	dmlc-core/tracker/dmlc_tracker/yarn.py	/^from __future__ import absolute_import$/;"	i
absolute_import	nnvm/python/nnvm/_base.py	/^from __future__ import absolute_import$/;"	i
absolute_import	nnvm/python/nnvm/attribute.py	/^from __future__ import absolute_import$/;"	i
absolute_import	nnvm/python/nnvm/libinfo.py	/^from __future__ import absolute_import$/;"	i
accept_slaves	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def accept_slaves(self, nslave):$/;"	m	class:RabitTracker
accuracy	example/cifar_resnet.py	/^accuracy = tf.reduce_mean(correct_prediction)$/;"	v
accuracy	example/mnist_lenet.py	/^accuracy = tf.reduce_mean(correct_prediction)$/;"	v
accuracy	example/mnist_mlp_auto_shape_inference.py	/^accuracy = tf.reduce_mean(correct_prediction)$/;"	v
accuracy	example/mnist_softmax.py	/^accuracy = tf.reduce_mean(correct_prediction)$/;"	v
accuracy	example/mnist_softmax_minimum.py	/^accuracy = tf.reduce_mean(correct_prediction)$/;"	v
act	dmlc-core/test/parameter_test.cc	/^  int act;$/;"	m	struct:Param	file:
activation	dmlc-core/example/parameter.cc	/^  int activation;$/;"	m	struct:MyParam	file:
add_alias	nnvm/src/core/op.cc	/^Op& Op::add_alias(const std::string& alias) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::Op
add_argument	dmlc-core/include/dmlc/registry.h	/^  inline EntryType &add_argument(const std::string &name,$/;"	f	class:dmlc::FunctionRegEntryBase
add_argument	nnvm/include/dmlc/registry.h	/^  inline EntryType &add_argument(const std::string &name,$/;"	f	class:dmlc::FunctionRegEntryBase
add_argument	nnvm/include/nnvm/op.h	/^inline Op& Op::add_argument(const std::string &name,$/;"	f	class:nnvm::Op
add_arguments	dmlc-core/include/dmlc/registry.h	/^  inline EntryType &add_arguments(const std::vector<ParamFieldInfo> &args) {$/;"	f	class:dmlc::FunctionRegEntryBase
add_arguments	nnvm/include/dmlc/registry.h	/^  inline EntryType &add_arguments(const std::vector<ParamFieldInfo> &args) {$/;"	f	class:dmlc::FunctionRegEntryBase
add_arguments	nnvm/include/nnvm/op.h	/^inline Op& Op::add_arguments(const std::vector<ParamFieldInfo> &args) {$/;"	f	class:nnvm::Op
add_enum	dmlc-core/include/dmlc/parameter.h	/^  inline FieldEntry<int> &add_enum(const std::string &key, int value) {$/;"	f	class:dmlc::parameter::FieldEntry
add_enum	nnvm/include/dmlc/parameter.h	/^  inline FieldEntry<int> &add_enum(const std::string &key, int value) {$/;"	f	class:dmlc::parameter::FieldEntry
addr	dmlc-core/include/dmlc/json.h	/^    void *addr;$/;"	m	struct:dmlc::JSONObjectReadHelper::Entry
addr	nnvm/include/dmlc/json.h	/^    void *addr;$/;"	m	struct:dmlc::JSONObjectReadHelper::Entry
align_bytes_	dmlc-core/src/io/input_split_base.h	/^  size_t align_bytes_;$/;"	m	class:dmlc::io::InputSplitBase
alignof	dmlc-core/include/dmlc/base.h	238;"	d
alignof	nnvm/include/dmlc/base.h	238;"	d
allocate	dmlc-core/include/dmlc/memory.h	/^  inline T* allocate(size_t n) {$/;"	f	class:dmlc::ThreadlocalAllocator
allocate	dmlc-core/include/dmlc/memory.h	/^  inline void* allocate() {$/;"	f	class:dmlc::MemoryPool
allocate	nnvm/include/dmlc/memory.h	/^  inline T* allocate(size_t n) {$/;"	f	class:dmlc::ThreadlocalAllocator
allocate	nnvm/include/dmlc/memory.h	/^  inline void* allocate() {$/;"	f	class:dmlc::MemoryPool
allocated_	dmlc-core/include/dmlc/memory.h	/^  std::vector<std::unique_ptr<Page> > allocated_;$/;"	m	class:dmlc::MemoryPool
allocated_	nnvm/include/dmlc/memory.h	/^  std::vector<std::unique_ptr<Page> > allocated_;$/;"	m	class:dmlc::MemoryPool
any	dmlc-core/include/dmlc/any.h	/^class any {$/;"	c	namespace:dmlc
any	dmlc-core/include/dmlc/any.h	/^inline any::any(T&& other) {$/;"	f	class:dmlc::any
any	dmlc-core/include/dmlc/any.h	/^inline any::any(any&& other) {$/;"	f	class:dmlc::any
any	dmlc-core/include/dmlc/any.h	/^inline any::any(const any& other) {$/;"	f	class:dmlc::any
any	nnvm/include/dmlc/any.h	/^class any {$/;"	c	namespace:dmlc
any	nnvm/include/dmlc/any.h	/^inline any::any(T&& other) {$/;"	f	class:dmlc::any
any	nnvm/include/dmlc/any.h	/^inline any::any(any&& other) {$/;"	f	class:dmlc::any
any	nnvm/include/dmlc/any.h	/^inline any::any(const any& other) {$/;"	f	class:dmlc::any
appArgs	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private String appArgs = "";$/;"	f	class:Client	file:
appCp	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private String appCp = null;$/;"	f	class:Client	file:
appHostName	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private String appHostName = "";$/;"	f	class:ApplicationMaster	file:
appId	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^        private ApplicationId appId;$/;"	f	class:Client.CtrlCHandler	file:
appPriority	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int appPriority = 0;$/;"	f	class:ApplicationMaster	file:
appTrackerPort	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int appTrackerPort = 0;$/;"	f	class:ApplicationMaster	file:
appTrackerUrl	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private String appTrackerUrl = "";$/;"	f	class:ApplicationMaster	file:
apply	nnvm/python/nnvm/graph.py	/^    def apply(self, passes):$/;"	m	class:Graph
arg_nodes	nnvm/src/pass/saveload_json.cc	/^  std::vector<uint32_t> arg_nodes;$/;"	m	struct:nnvm::pass::__anon5::JSONGraph	file:
argmax	python/tinyflow/_ops.py	/^def argmax(x, axis):$/;"	f
argparse	dmlc-core/tracker/dmlc_tracker/opts.py	/^import argparse$/;"	i
argparse	dmlc-core/tracker/dmlc_tracker/tracker.py	/^import argparse$/;"	i
args	dmlc-core/src/io/uri_spec.h	/^  std::map<std::string, std::string> args;$/;"	m	class:dmlc::io::URISpec
args_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  std::vector<ASTPtr> args_;$/;"	m	class:nnvm::fusion::CallAST
arguments	dmlc-core/include/dmlc/registry.h	/^  std::vector<ParamFieldInfo> arguments;$/;"	m	class:dmlc::FunctionRegEntryBase
arguments	nnvm/include/dmlc/registry.h	/^  std::vector<ParamFieldInfo> arguments;$/;"	m	class:dmlc::FunctionRegEntryBase
arguments	nnvm/include/nnvm/op.h	/^  std::vector<ParamFieldInfo> arguments;$/;"	m	class:nnvm::Op
array_view	dmlc-core/include/dmlc/array_view.h	/^  array_view(const ValueType* begin, const ValueType* end) {$/;"	f	class:dmlc::array_view
array_view	dmlc-core/include/dmlc/array_view.h	/^  array_view(const std::array<ValueType, size>& other) {  \/\/ NOLINT(*)$/;"	f	class:dmlc::array_view
array_view	dmlc-core/include/dmlc/array_view.h	/^  array_view(const std::vector<ValueType>& other) {  \/\/ NOLINT(*)$/;"	f	class:dmlc::array_view
array_view	dmlc-core/include/dmlc/array_view.h	/^class array_view {$/;"	c	namespace:dmlc
array_view	nnvm/include/dmlc/array_view.h	/^  array_view(array_view<ValueType>&& other) { \/\/ NOLINT(*)$/;"	f	class:dmlc::array_view
array_view	nnvm/include/dmlc/array_view.h	/^  array_view(const ValueType* begin, const ValueType* end) {$/;"	f	class:dmlc::array_view
array_view	nnvm/include/dmlc/array_view.h	/^  array_view(const std::array<ValueType, size>& other) {  \/\/ NOLINT(*)$/;"	f	class:dmlc::array_view
array_view	nnvm/include/dmlc/array_view.h	/^  array_view(const std::vector<ValueType>& other) {  \/\/ NOLINT(*)$/;"	f	class:dmlc::array_view
array_view	nnvm/include/dmlc/array_view.h	/^class array_view {$/;"	c	namespace:dmlc
assign	nnvm/include/nnvm/tuple.h	/^  inline void assign(RandomAccessIterator begin,$/;"	f	class:nnvm::Tuple
assign_rank	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def assign_rank(self, rank, wait_conn, tree_map, parent_map, ring_map):$/;"	m	class:SlaveEntry
assign_var_nids_	src/session.cc	/^  std::vector<uint32_t> assign_var_nids_;$/;"	m	class:tinyflow::TorchExecutor	file:
at_end_	dmlc-core/src/io/s3_filesys.cc	/^  bool at_end_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
at_head_	dmlc-core/src/data/basic_row_iter.h	/^  bool at_head_;$/;"	m	class:dmlc::data::BasicRowIter
atof	dmlc-core/src/data/strtonum.h	/^inline float atof(const char *nptr) {$/;"	f	namespace:dmlc::data
atol	dmlc-core/src/data/strtonum.h	/^inline long atol(const char* p) {  \/\/ NOLINT(*)$/;"	f	namespace:dmlc::data
attemptCounter	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^    public int attemptCounter = 0;$/;"	f	class:TaskRecord
attr	nnvm/python/nnvm/symbol.py	/^    def attr(self, key):$/;"	m	class:Symbol
attr	nnvm/src/core/op.cc	/^  std::unordered_map<std::string, std::unique_ptr<any> > attr;$/;"	m	struct:nnvm::OpManager	file:
attr_name_	nnvm/include/nnvm/op.h	/^  std::string attr_name_;$/;"	m	class:nnvm::OpMap
attr_parser	nnvm/include/nnvm/op.h	/^  std::function<void(NodeAttrs* attrs)> attr_parser = nullptr;$/;"	m	class:nnvm::Op
attrs	nnvm/include/nnvm/graph.h	/^  std::unordered_map<std::string, std::shared_ptr<any> > attrs;$/;"	m	class:nnvm::Graph
attrs	nnvm/include/nnvm/node.h	/^  NodeAttrs attrs;$/;"	m	class:nnvm::Node
attrs	nnvm/src/pass/saveload_json.cc	/^  std::unordered_map<std::string, std::shared_ptr<any> > attrs;$/;"	m	struct:nnvm::pass::__anon5::JSONGraph	file:
author	dmlc-core/doc/conf.py	/^author = u'dmlc-core developers'$/;"	v
aws_access_id_	dmlc-core/src/io/s3_filesys.h	/^  std::string aws_access_id_;$/;"	m	class:dmlc::io::S3FileSystem
aws_id_	dmlc-core/src/io/s3_filesys.cc	/^  std::string aws_id_, aws_key_;$/;"	m	class:dmlc::io::s3::ReadStream	file:
aws_id_	dmlc-core/src/io/s3_filesys.cc	/^  std::string aws_id_, aws_key_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
aws_key_	dmlc-core/src/io/s3_filesys.cc	/^  std::string aws_id_, aws_key_;$/;"	m	class:dmlc::io::s3::ReadStream	file:
aws_key_	dmlc-core/src/io/s3_filesys.cc	/^  std::string aws_id_, aws_key_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
aws_secret_key_	dmlc-core/src/io/s3_filesys.h	/^  std::string aws_secret_key_;$/;"	m	class:dmlc::io::S3FileSystem
azure_account_	dmlc-core/src/io/azure_filesys.h	/^  std::string azure_account_;$/;"	m	class:dmlc::io::AzureFileSystem
azure_key_	dmlc-core/src/io/azure_filesys.h	/^  std::string azure_key_;$/;"	m	class:dmlc::io::AzureFileSystem
b	dmlc-core/test/unittest/unittest_serializer.cc	/^  int b;$/;"	m	struct:Param	file:
base_	dmlc-core/src/data/parser.h	/^  Parser<IndexType> *base_;$/;"	m	class:dmlc::data::ThreadedParser
base_	dmlc-core/src/io/cached_input_split.h	/^  InputSplitBase *base_;$/;"	m	class:dmlc::io::CachedInputSplit
base_	dmlc-core/src/io/threaded_input_split.h	/^  InputSplitBase *base_;$/;"	m	class:dmlc::io::ThreadedInputSplit
batch_size	example/cifar_resnet.py	/^batch_size = 100$/;"	v
begin	dmlc-core/include/dmlc/array_view.h	/^  inline const ValueType* begin() const {$/;"	f	class:dmlc::array_view
begin	dmlc-core/src/config.cc	/^Config::ConfigIterator Config::begin() const {$/;"	f	class:dmlc::Config
begin	dmlc-core/src/io/input_split_base.h	/^    char *begin;$/;"	m	struct:dmlc::io::InputSplitBase::Chunk
begin	nnvm/include/dmlc/array_view.h	/^  inline const ValueType* begin() const {$/;"	f	class:dmlc::array_view
begin	nnvm/include/nnvm/tuple.h	/^  inline ValueType *begin() {$/;"	f	class:nnvm::Tuple
begin	nnvm/include/nnvm/tuple.h	/^  inline const ValueType *begin() const {$/;"	f	class:nnvm::Tuple
begin_	dmlc-core/include/dmlc/parameter.h	/^  DType begin_, end_;$/;"	m	class:dmlc::parameter::FieldEntryNumeric
begin_	nnvm/include/dmlc/parameter.h	/^  DType begin_, end_;$/;"	m	class:dmlc::parameter::FieldEntryNumeric
blackList	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private Collection<String> blackList = new java.util.HashSet();$/;"	f	class:ApplicationMaster	file:
blob	src/session.cc	/^  TBlob blob;$/;"	m	struct:tinyflow::VarState	file:
block_	dmlc-core/include/dmlc/memory.h	/^  RefBlock *block_;$/;"	m	struct:dmlc::ThreadlocalSharedPtr
block_	dmlc-core/src/data/parser.h	/^  RowBlock<IndexType> block_;$/;"	m	class:dmlc::data::ParserImpl
block_	nnvm/include/dmlc/memory.h	/^  RefBlock *block_;$/;"	m	struct:dmlc::ThreadlocalSharedPtr
body	dmlc-core/include/dmlc/registry.h	/^  FunctionType body;$/;"	m	class:dmlc::FunctionRegEntryBase
body	nnvm/include/dmlc/registry.h	/^  FunctionType body;$/;"	m	class:dmlc::FunctionRegEntryBase
breathe_default_project	dmlc-core/doc/conf.py	/^breathe_default_project = 'dmlc-core'$/;"	v
breathe_projects	dmlc-core/doc/conf.py	/^breathe_projects = {'dmlc-core' : 'doxygen\/xml\/'}$/;"	v
buf	dmlc-core/src/config.cc	/^  std::string buf;$/;"	m	struct:dmlc::Token	file:
buf_	dmlc-core/include/dmlc/io.h	/^  InBuf buf_;$/;"	m	class:dmlc::istream
buf_	dmlc-core/include/dmlc/io.h	/^  OutBuf buf_;$/;"	m	class:dmlc::ostream
buffer_	dmlc-core/include/dmlc/io.h	/^    std::vector<char> buffer_;$/;"	m	class:dmlc::istream::InBuf
buffer_	dmlc-core/include/dmlc/io.h	/^    std::vector<char> buffer_;$/;"	m	class:dmlc::ostream::OutBuf
buffer_	dmlc-core/src/io/s3_filesys.cc	/^  std::string buffer_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
buffer_	dmlc-core/src/io/s3_filesys.cc	/^  std::string buffer_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
buffer_	dmlc-core/src/io/single_file_split.h	/^  std::string buffer_;$/;"	m	class:dmlc::io::SingleFileSplit
buffer_size_	dmlc-core/include/dmlc/memory_io.h	/^  size_t buffer_size_;$/;"	m	struct:dmlc::MemoryFixedSizeStream
buffer_size_	dmlc-core/src/io/cached_input_split.h	/^  size_t buffer_size_;$/;"	m	class:dmlc::io::CachedInputSplit
buffer_size_	dmlc-core/src/io/input_split_base.h	/^  size_t buffer_size_;$/;"	m	class:dmlc::io::InputSplitBase
buffer_size_	dmlc-core/src/io/single_file_split.h	/^  size_t buffer_size_;$/;"	m	class:dmlc::io::SingleFileSplit
buffer_size_	dmlc-core/src/io/threaded_input_split.h	/^  size_t buffer_size_;$/;"	m	class:dmlc::io::ThreadedInputSplit
bytes_out	dmlc-core/include/dmlc/io.h	/^    inline size_t bytes_out() const { return bytes_out_; }$/;"	f	class:dmlc::ostream::OutBuf
bytes_out_	dmlc-core/include/dmlc/io.h	/^    size_t bytes_out_;$/;"	m	class:dmlc::ostream::OutBuf
bytes_read	dmlc-core/include/dmlc/io.h	/^    inline size_t bytes_read(void) const {$/;"	f	class:dmlc::istream::InBuf
bytes_read	dmlc-core/include/dmlc/io.h	/^  inline size_t bytes_read(void) const {$/;"	f	class:dmlc::istream
bytes_read_	dmlc-core/include/dmlc/io.h	/^    size_t bytes_read_;$/;"	m	class:dmlc::istream::InBuf
bytes_read_	dmlc-core/src/data/text_parser.h	/^  size_t bytes_read_;$/;"	m	class:dmlc::data::TextParserBase
bytes_written	dmlc-core/include/dmlc/io.h	/^  inline size_t bytes_written(void) const {$/;"	f	class:dmlc::ostream
cPickle	python/tinyflow/datasets.py	/^import cPickle$/;"	i
c_array	nnvm/python/nnvm/_base.py	/^def c_array(ctype, values):$/;"	f
c_array	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
c_array	nnvm/python/nnvm/graph.py	/^from ._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
c_array	python/tinyflow/_session.py	/^from nnvm._base import c_str, check_call, _LIB, c_array, nn_uint$/;"	i
c_str	nnvm/python/nnvm/_base.py	/^def c_str(string):$/;"	f
c_str	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
c_str	nnvm/python/nnvm/graph.py	/^from ._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
c_str	python/tinyflow/_base.py	/^from nnvm._base import c_str, check_call, _LIB$/;"	i
c_str	python/tinyflow/_session.py	/^from nnvm._base import c_str, check_call, _LIB, c_array, nn_uint$/;"	i
cacheFileArg	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private String cacheFileArg = "";$/;"	f	class:Client	file:
cacheFiles	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private Map<String, String> cacheFiles = new java.util.HashMap<String, String>();$/;"	f	class:Client	file:
cache_file	dmlc-core/src/io/uri_spec.h	/^  std::string cache_file;$/;"	m	class:dmlc::io::URISpec
cache_file_	dmlc-core/src/data/disk_row_iter.h	/^  std::string cache_file_;$/;"	m	class:dmlc::data::DiskRowIter
cache_file_	dmlc-core/src/io/cached_input_split.h	/^  std::string cache_file_;$/;"	m	class:dmlc::io::CachedInputSplit
cached_execs_	src/session.cc	/^  std::unordered_map<uint64_t, ExecEntry> cached_execs_;$/;"	m	class:tinyflow::TorchSession	file:
cached_symbol	src/session.cc	/^    nnvm::Symbol cached_symbol;$/;"	m	struct:tinyflow::TorchSession::ExecEntry	file:
call	python/tinyflow/datasets.py	/^from subprocess import call$/;"	i
callee_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  std::string callee_;$/;"	m	class:nnvm::fusion::CallAST
cend_	dmlc-core/src/io/s3_filesys.cc	/^  const char *cend_;$/;"	m	struct:dmlc::io::s3::XMLIter	file:
check_call	nnvm/python/nnvm/_base.py	/^def check_call(ret):$/;"	f
check_call	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import check_call, ctypes2docstring$/;"	i
check_call	nnvm/python/nnvm/graph.py	/^from ._base import check_call$/;"	i
check_call	python/tinyflow/_base.py	/^from nnvm._base import c_str, check_call, _LIB$/;"	i
check_call	python/tinyflow/_session.py	/^from nnvm._base import c_str, check_call, _LIB, c_array, nn_uint$/;"	i
check_ewise	tests/python/test_ops.py	/^def check_ewise(ufunc):$/;"	f
check_ewise_rscalar	tests/python/test_ops.py	/^def check_ewise_rscalar(ufunc):$/;"	f
check_ewise_scalar	tests/python/test_ops.py	/^def check_ewise_scalar(ufunc):$/;"	f
check_type	dmlc-core/include/dmlc/any.h	/^inline void any::check_type() const {$/;"	f	class:dmlc::any
check_type	nnvm/include/dmlc/any.h	/^inline void any::check_type() const {$/;"	f	class:dmlc::any
chunk_begin_	dmlc-core/src/io/single_file_split.h	/^  char *chunk_begin_;$/;"	m	class:dmlc::io::SingleFileSplit
chunk_end_	dmlc-core/src/io/single_file_split.h	/^  char *chunk_end_;$/;"	m	class:dmlc::io::SingleFileSplit
cifar	example/cifar_resnet.py	/^cifar = get_cifar10()$/;"	v
clear	dmlc-core/include/dmlc/any.h	/^inline void any::clear() {$/;"	f	class:dmlc::any
clear	nnvm/include/dmlc/any.h	/^inline void any::clear() {$/;"	f	class:dmlc::any
closed_	dmlc-core/src/io/s3_filesys.cc	/^  bool closed_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
codecs	dmlc-core/scripts/lint.py	/^import codecs$/;"	i
codecs	dmlc-core/scripts/lint3.py	/^import codecs$/;"	i
command	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private String command = "";$/;"	f	class:ApplicationMaster	file:
compile	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^char* RTC::compile(const std::string& name, const std::string& code) {$/;"	f	class:nnvm::fusion::RTC
conf	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private Configuration conf = new YarnConfiguration();$/;"	f	class:ApplicationMaster	file:
conf	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private YarnConfiguration conf = new YarnConfiguration();$/;"	f	class:Client	file:
config	dmlc-core/Makefile	/^		config = config.mk$/;"	m
config	dmlc-core/Makefile	/^		config = make\/config.mk$/;"	m
config	nnvm/Makefile	/^	config = config.mk$/;"	m
config	nnvm/Makefile	/^	config = make\/config.mk$/;"	m
config_	dmlc-core/include/dmlc/config.h	/^    const Config* config_;$/;"	m	class:dmlc::Config::ConfigIterator
config_cython	nnvm/python/setup.py	/^def config_cython():$/;"	f
config_logger	dmlc-core/tracker/dmlc_tracker/submit.py	/^def config_logger(args):$/;"	f
config_map_	dmlc-core/include/dmlc/config.h	/^  std::map<std::string, ConfigValue> config_map_;$/;"	m	class:dmlc::Config
const_list_	dmlc-core/include/dmlc/registry.h	/^  std::vector<const EntryType*> const_list_;$/;"	m	class:dmlc::Registry
const_list_	nnvm/include/dmlc/registry.h	/^  std::vector<const EntryType*> const_list_;$/;"	m	class:dmlc::Registry
const_ptr	dmlc-core/include/dmlc/memory.h	/^  typedef const T* const_ptr;$/;"	t	class:dmlc::ThreadlocalAllocator
const_ptr	nnvm/include/dmlc/memory.h	/^  typedef const T* const_ptr;$/;"	t	class:dmlc::ThreadlocalAllocator
constexpr	dmlc-core/include/dmlc/base.h	237;"	d
constexpr	nnvm/include/dmlc/base.h	237;"	d
construct	dmlc-core/include/dmlc/any.h	/^inline void any::construct(any&& other) {$/;"	f	class:dmlc::any
construct	dmlc-core/include/dmlc/any.h	/^inline void any::construct(const any& other) {$/;"	f	class:dmlc::any
construct	nnvm/include/dmlc/any.h	/^inline void any::construct(any&& other) {$/;"	f	class:dmlc::any
construct	nnvm/include/dmlc/any.h	/^inline void any::construct(const any& other) {$/;"	f	class:dmlc::any
consumer_cond_	dmlc-core/include/dmlc/threadediter.h	/^  std::condition_variable consumer_cond_;$/;"	m	class:dmlc::ThreadedIter
container	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^    public Container container = null;$/;"	f	class:TaskRecord
containerRequest	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^    public ContainerRequest containerRequest = null;$/;"	f	class:TaskRecord
content_	dmlc-core/src/io/s3_filesys.cc	/^  const char *content_;$/;"	m	struct:dmlc::io::s3::XMLIter	file:
control_deps	nnvm/include/nnvm/graph.h	/^    array_view<uint32_t> control_deps;$/;"	m	struct:nnvm::IndexedGraph::Node
control_deps	nnvm/include/nnvm/node.h	/^  std::vector<NodePtr> control_deps;$/;"	m	class:nnvm::Node
control_deps	nnvm/src/pass/saveload_json.cc	/^  std::vector<uint32_t> control_deps;$/;"	m	struct:nnvm::pass::__anon5::JSONNode	file:
control_deps_	nnvm/include/nnvm/graph.h	/^  std::vector<uint32_t> control_deps_;$/;"	m	class:nnvm::IndexedGraph
conv1	example/cifar_resnet.py	/^conv1 = tf.nn.conv2d(x, num_filter=16, ksize=[1, 5, 5, 1], padding='SAME')$/;"	v
conv1	example/mnist_lenet.py	/^conv1 = tf.nn.conv2d(x, num_filter=20, ksize=[1, 5, 5, 1], name="conv1", no_bias=False)$/;"	v
conv2	example/cifar_resnet.py	/^conv2 = tf.nn.conv2d(pool1, num_filter=16, ksize=[1, 5, 5, 1])$/;"	v
conv2	example/mnist_lenet.py	/^conv2 = tf.nn.conv2d(pool1, num_filter=50, ksize=[1, 5, 5, 1], name="conv2", no_bias=False)$/;"	v
conv2d	python/tinyflow/nn.py	/^def conv2d(data, weight=None,$/;"	f
conv_factory	example/cifar_resnet.py	/^def conv_factory(x, filter_size, in_filters, out_filters):$/;"	f
copy	nnvm/python/nnvm/_ctypes/symbol.py	/^import copy$/;"	i
copyright	dmlc-core/doc/conf.py	/^copyright = u'2015, dmlc-core developers'$/;"	v
correct_prediction	example/cifar_resnet.py	/^correct_prediction = tf.equal(tf.argmax(fc1, 1), label)$/;"	v
correct_prediction	example/mnist_lenet.py	/^correct_prediction = tf.equal(tf.argmax(fc2, 1), label)$/;"	v
correct_prediction	example/mnist_mlp_auto_shape_inference.py	/^correct_prediction = tf.equal(tf.argmax(fc2, 1), label)$/;"	v
correct_prediction	example/mnist_softmax.py	/^correct_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))$/;"	v
correct_prediction	example/mnist_softmax_minimum.py	/^correct_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))$/;"	v
count	nnvm/include/nnvm/op.h	/^inline int OpMap<ValueType>::count(const Op* op) const {$/;"	f	class:nnvm::OpMap
counter	dmlc-core/test/unittest/unittest_threaditer.cc	/^  int counter;$/;"	m	struct:producer_test::IntProducer	file:
cpplint	dmlc-core/scripts/lint.py	/^import cpplint$/;"	i
cpplint	dmlc-core/scripts/lint3.py	/^import cpplint$/;"	i
create	nnvm/python/nnvm/graph.py	/^def create(symbol):$/;"	f
create_from_data	dmlc-core/include/dmlc/any.h	/^    void (*create_from_data)(Data* dst, const Data& src);$/;"	m	struct:dmlc::any::Type
create_from_data	dmlc-core/include/dmlc/any.h	/^  inline static void create_from_data(any::Data* dst, const any::Data& data) {$/;"	f	class:dmlc::any::TypeOnHeap
create_from_data	dmlc-core/include/dmlc/any.h	/^  inline static void create_from_data(any::Data* dst, const any::Data& data) {$/;"	f	class:dmlc::any::TypeOnStack
create_from_data	nnvm/include/dmlc/any.h	/^    void (*create_from_data)(Data* dst, const Data& src);$/;"	m	struct:dmlc::any::Type
create_from_data	nnvm/include/dmlc/any.h	/^  inline static void create_from_data(any::Data* dst, const any::Data& data) {$/;"	f	class:dmlc::any::TypeOnHeap
create_from_data	nnvm/include/dmlc/any.h	/^  inline static void create_from_data(any::Data* dst, const any::Data& data) {$/;"	f	class:dmlc::any::TypeOnStack
creator	nnvm/python/nnvm/_ctypes/symbol.py	/^    def creator(*args, **kwargs):$/;"	f	function:_make_atomic_symbol_function
creator	nnvm/python/nnvm/cython/symbol.pyx	/^    def creator(*args, **kwargs):$/;"	f	function:_make_atomic_symbol_function
credentials	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private Credentials credentials = null;$/;"	f	class:ApplicationMaster	file:
credentials	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private Credentials credentials = null;$/;"	f	class:Client	file:
cross_entropy	example/cifar_resnet.py	/^cross_entropy = tf.nn.mean_sparse_softmax_cross_entropy_with_logits(fc1, label)$/;"	v
cross_entropy	example/mnist_lenet.py	/^cross_entropy = tf.nn.mean_sparse_softmax_cross_entropy_with_logits(fc2, label)$/;"	v
cross_entropy	example/mnist_mlp_auto_shape_inference.py	/^cross_entropy = tf.nn.mean_sparse_softmax_cross_entropy_with_logits(fc2, label)$/;"	v
cross_entropy	example/mnist_softmax.py	/^cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))$/;"	v
cross_entropy	example/mnist_softmax_minimum.py	/^cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))$/;"	v
ctypes	nnvm/python/nnvm/_base.py	/^import ctypes$/;"	i
ctypes	nnvm/python/nnvm/_ctypes/symbol.py	/^import ctypes$/;"	i
ctypes	nnvm/python/nnvm/graph.py	/^import ctypes$/;"	i
ctypes2buffer	nnvm/python/nnvm/_base.py	/^def ctypes2buffer(cptr, length):$/;"	f
ctypes2docstring	nnvm/python/nnvm/_base.py	/^def ctypes2docstring(num_args, arg_names, arg_types, arg_descs, remove_dup=True):$/;"	f
ctypes2docstring	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import check_call, ctypes2docstring$/;"	i
ctypes2numpy_shared	nnvm/python/nnvm/_base.py	/^def ctypes2numpy_shared(cptr, shape):$/;"	f
curl_global	dmlc-core/src/io/s3_filesys.cc	/^static CURLGlobal curl_global;$/;"	m	namespace:dmlc::io::s3	file:
curr_bytes_	dmlc-core/src/io/s3_filesys.cc	/^  size_t curr_bytes_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
curr_page_	dmlc-core/include/dmlc/memory.h	/^  std::unique_ptr<Page> curr_page_;$/;"	m	class:dmlc::MemoryPool
curr_page_	nnvm/include/dmlc/memory.h	/^  std::unique_ptr<Page> curr_page_;$/;"	m	class:dmlc::MemoryPool
curr_path	dmlc-core/doc/conf.py	/^curr_path = os.path.dirname(os.path.abspath(os.path.expanduser(__file__)))$/;"	v
curr_path	dmlc-core/tracker/dmlc-submit	/^curr_path = os.path.dirname(os.path.abspath(os.path.expanduser(__file__)))$/;"	v
curr_path	python/tinyflow/_base.py	/^curr_path = os.path.dirname(os.path.abspath(os.path.expanduser(__file__)))$/;"	v
curr_ptr_	dmlc-core/include/dmlc/memory_io.h	/^  size_t curr_ptr_;$/;"	m	struct:dmlc::MemoryFixedSizeStream
curr_ptr_	dmlc-core/include/dmlc/memory_io.h	/^  size_t curr_ptr_;$/;"	m	struct:dmlc::MemoryStringStream
current	nnvm/python/nnvm/attribute.py	/^    current = None$/;"	v	class:AttrScope
current	nnvm/python/nnvm/name.py	/^    current = None$/;"	v	class:NameManager
cv_	dmlc-core/include/dmlc/concurrency.h	/^  std::condition_variable cv_;$/;"	m	class:dmlc::ConcurrentBlockingQueue
cythonize	nnvm/python/setup.py	/^        from Cython.Build import cythonize$/;"	i
data	dmlc-core/include/dmlc/concurrency.h	/^    T data;$/;"	m	struct:dmlc::ConcurrentBlockingQueue::Entry
data	dmlc-core/include/dmlc/memory.h	/^    typename std::aligned_storage<size, align>::type data[kPageSize];$/;"	m	struct:dmlc::MemoryPool::Page
data	dmlc-core/include/dmlc/memory.h	/^    typename std::aligned_storage<sizeof(T), alignof(T)>::type data;$/;"	m	struct:dmlc::ThreadlocalSharedPtr::RefBlock
data	dmlc-core/src/data.cc	/^namespace data {$/;"	n	namespace:dmlc	file:
data	dmlc-core/src/data/basic_row_iter.h	/^namespace data {$/;"	n	namespace:dmlc
data	dmlc-core/src/data/csv_parser.h	/^namespace data {$/;"	n	namespace:dmlc
data	dmlc-core/src/data/disk_row_iter.h	/^namespace data {$/;"	n	namespace:dmlc
data	dmlc-core/src/data/libsvm_parser.h	/^namespace data {$/;"	n	namespace:dmlc
data	dmlc-core/src/data/parser.h	/^namespace data {$/;"	n	namespace:dmlc
data	dmlc-core/src/data/row_block.h	/^namespace data {$/;"	n	namespace:dmlc
data	dmlc-core/src/data/strtonum.h	/^namespace data {$/;"	n	namespace:dmlc
data	dmlc-core/src/data/text_parser.h	/^namespace data {$/;"	n	namespace:dmlc
data	dmlc-core/src/io/input_split_base.h	/^    std::vector<size_t> data;$/;"	m	struct:dmlc::io::InputSplitBase::Chunk
data	nnvm/include/dmlc/memory.h	/^    typename std::aligned_storage<size, align>::type data[kPageSize];$/;"	m	struct:dmlc::MemoryPool::Page
data	nnvm/include/dmlc/memory.h	/^    typename std::aligned_storage<sizeof(T), alignof(T)>::type data;$/;"	m	struct:dmlc::ThreadlocalSharedPtr::RefBlock
data	nnvm/include/nnvm/tuple.h	/^  inline const index_t *data() const {$/;"	f	class:nnvm::TShape
data	nnvm/include/nnvm/tuple.h	/^  inline index_t *data() {$/;"	f	class:nnvm::TShape
data_	dmlc-core/include/dmlc/any.h	/^  Data data_;$/;"	m	class:dmlc::any
data_	dmlc-core/include/dmlc/thread_local.h	/^  std::vector<T*> data_;$/;"	m	class:dmlc::ThreadLocalStore
data_	dmlc-core/src/data/basic_row_iter.h	/^  RowBlockContainer<IndexType> data_;$/;"	m	class:dmlc::data::BasicRowIter
data_	dmlc-core/src/data/parser.h	/^  std::vector<RowBlockContainer<IndexType> > data_;$/;"	m	class:dmlc::data::ParserImpl
data_	dmlc-core/test/unittest/unittest_json.cc	/^  std::vector<std::string> data_;$/;"	m	class:json::MyClass	file:
data_	dmlc-core/test/unittest/unittest_serializer.cc	/^  std::string data_;$/;"	m	class:MyClass	file:
data_	nnvm/include/dmlc/any.h	/^  Data data_;$/;"	m	class:dmlc::any
data_	nnvm/include/dmlc/thread_local.h	/^  std::vector<T*> data_;$/;"	m	class:dmlc::ThreadLocalStore
data_	nnvm/include/nnvm/op.h	/^  std::vector<std::pair<ValueType, int> > data_;$/;"	m	class:nnvm::OpMap
data_	nnvm/src/pass/plan_memory.cc	/^  std::vector<std::unique_ptr<StorageEntry> > data_;$/;"	m	class:nnvm::pass::__anon7::GraphAllocator	file:
data_end_	dmlc-core/src/data/parser.h	/^  IndexType data_ptr_, data_end_;$/;"	m	class:dmlc::data::ParserImpl
data_entry_	src/session.cc	/^  std::vector<LuaRef> data_entry_;$/;"	m	class:tinyflow::TorchExecutor	file:
data_entry_is_var_	src/session.cc	/^  std::vector<bool> data_entry_is_var_;$/;"	m	class:tinyflow::TorchExecutor	file:
data_format	src/op_nn.cc	/^  std::string data_format;$/;"	m	struct:tinyflow::ConvPoolParam	file:
data_on_stack	dmlc-core/include/dmlc/any.h	/^  struct data_on_stack {$/;"	s	class:dmlc::any
data_on_stack	nnvm/include/dmlc/any.h	/^  struct data_on_stack {$/;"	s	class:dmlc::any
data_ptr_	dmlc-core/src/data/parser.h	/^  IndexType data_ptr_, data_end_;$/;"	m	class:dmlc::data::ParserImpl
data_stack_	nnvm/include/nnvm/tuple.h	/^  ValueType data_stack_[kStackCache];$/;"	m	class:nnvm::Tuple
deallocate	dmlc-core/include/dmlc/memory.h	/^  inline void deallocate(T* p, size_t n) {$/;"	f	class:dmlc::ThreadlocalAllocator
deallocate	dmlc-core/include/dmlc/memory.h	/^  inline void deallocate(void* p) {$/;"	f	class:dmlc::MemoryPool
deallocate	nnvm/include/dmlc/memory.h	/^  inline void deallocate(T* p, size_t n) {$/;"	f	class:dmlc::ThreadlocalAllocator
deallocate	nnvm/include/dmlc/memory.h	/^  inline void deallocate(void* p) {$/;"	f	class:dmlc::MemoryPool
debug_str	nnvm/python/nnvm/symbol.py	/^    def debug_str(self):$/;"	m	class:Symbol
decide_rank	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def decide_rank(self, job_map):$/;"	m	class:SlaveEntry
default_value_	dmlc-core/include/dmlc/parameter.h	/^  DType default_value_;$/;"	m	class:dmlc::parameter::FieldEntryBase
default_value_	nnvm/include/dmlc/parameter.h	/^  DType default_value_;$/;"	m	class:dmlc::parameter::FieldEntryBase
delay	dmlc-core/test/unittest/unittest_threaditer.cc	/^inline void delay(int sleep) {$/;"	f	namespace:producer_test
depend_graph_attr	nnvm/include/nnvm/pass.h	/^  PassFunctionReg& depend_graph_attr(const std::string& attr_name) {  \/\/ NOLINT(*)$/;"	f	struct:nnvm::PassFunctionReg
depend_op_attr	nnvm/include/nnvm/pass.h	/^  PassFunctionReg& depend_op_attr(const std::string& attr_name) {  \/\/ NOLINT(*)$/;"	f	struct:nnvm::PassFunctionReg
describe	dmlc-core/include/dmlc/parameter.h	/^  inline TEntry &describe(const std::string &description) {$/;"	f	class:dmlc::parameter::FieldEntryBase
describe	dmlc-core/include/dmlc/registry.h	/^  inline EntryType &describe(const std::string &description) {$/;"	f	class:dmlc::FunctionRegEntryBase
describe	nnvm/include/dmlc/parameter.h	/^  inline TEntry &describe(const std::string &description) {$/;"	f	class:dmlc::parameter::FieldEntryBase
describe	nnvm/include/dmlc/registry.h	/^  inline EntryType &describe(const std::string &description) {$/;"	f	class:dmlc::FunctionRegEntryBase
describe	nnvm/include/nnvm/op.h	/^inline Op& Op::describe(const std::string& descr) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::Op
description	dmlc-core/include/dmlc/parameter.h	/^  std::string description;$/;"	m	struct:dmlc::ParamFieldInfo
description	dmlc-core/include/dmlc/registry.h	/^  std::string description;$/;"	m	class:dmlc::FunctionRegEntryBase
description	nnvm/include/dmlc/parameter.h	/^  std::string description;$/;"	m	struct:dmlc::ParamFieldInfo
description	nnvm/include/dmlc/registry.h	/^  std::string description;$/;"	m	class:dmlc::FunctionRegEntryBase
description	nnvm/include/nnvm/op.h	/^  std::string description;$/;"	m	class:nnvm::Op
description_	dmlc-core/include/dmlc/parameter.h	/^  std::string description_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
description_	nnvm/include/dmlc/parameter.h	/^  std::string description_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
destroy	dmlc-core/include/dmlc/any.h	/^    void (*destroy)(Data* data);$/;"	m	struct:dmlc::any::Type
destroy	dmlc-core/include/dmlc/any.h	/^  inline static void destroy(Data* data) {$/;"	f	class:dmlc::any::TypeOnHeap
destroy	dmlc-core/include/dmlc/any.h	/^  inline static void destroy(Data* data) {$/;"	f	class:dmlc::any::TypeOnStack
destroy	nnvm/include/dmlc/any.h	/^    void (*destroy)(Data* data);$/;"	m	struct:dmlc::any::Type
destroy	nnvm/include/dmlc/any.h	/^  inline static void destroy(Data* data) {$/;"	f	class:dmlc::any::TypeOnHeap
destroy	nnvm/include/dmlc/any.h	/^  inline static void destroy(Data* data) {$/;"	f	class:dmlc::any::TypeOnStack
device_id	nnvm/src/pass/plan_memory.cc	/^    int device_id;$/;"	m	struct:nnvm::pass::__anon7::GraphAllocator::StorageEntry	file:
dfs	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private FileSystem dfs;$/;"	f	class:ApplicationMaster	file:
dfs	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private FileSystem dfs;$/;"	f	class:Client	file:
dict	nnvm/include/nnvm/node.h	/^  std::unordered_map<std::string, std::string> dict;$/;"	m	struct:nnvm::NodeAttrs
dim	src/op_nn.cc	/^  uint32_t dim;$/;"	m	struct:tinyflow::PadParam	file:
dmlc	dmlc-core/include/dmlc/any.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/array_view.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/base.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/common.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/concurrency.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/config.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/data.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/io.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/json.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/logging.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/lua.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/memory.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/memory_io.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/omp.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/parameter.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/recordio.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/registry.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/serializer.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/thread_local.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/threadediter.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/timer.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/include/dmlc/type_traits.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/config.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/data.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/data/basic_row_iter.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/data/csv_parser.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/data/disk_row_iter.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/data/libsvm_parser.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/data/parser.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/data/row_block.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/data/strtonum.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/data/text_parser.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/io/azure_filesys.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/io/azure_filesys.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/cached_input_split.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/filesys.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/hdfs_filesys.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/io/hdfs_filesys.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/input_split_base.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/io/input_split_base.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/line_split.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/io/line_split.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/local_filesys.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/io/local_filesys.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/recordio_split.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/io/recordio_split.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/s3_filesys.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/src/io/s3_filesys.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/single_file_split.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/threaded_input_split.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/io/uri_spec.h	/^namespace dmlc {$/;"	n
dmlc	dmlc-core/src/recordio.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/test/registry_test.cc	/^namespace dmlc {$/;"	n	file:
dmlc	dmlc-core/test/unittest/unittest_serializer.cc	/^namespace dmlc { DMLC_DECLARE_TRAITS(has_saveload, MyClass, true); }$/;"	n	file:
dmlc	dmlc-core/test/unittest/unittest_serializer.cc	/^namespace dmlc { DMLC_DECLARE_TRAITS(is_pod, Param, true); }$/;"	n	file:
dmlc	nnvm/include/dmlc/any.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/array_view.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/base.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/json.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/logging.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/memory.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/parameter.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/registry.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/thread_local.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/timer.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/include/dmlc/type_traits.h	/^namespace dmlc {$/;"	n
dmlc	nnvm/src/core/op.cc	/^namespace dmlc {$/;"	n	file:
dmlc	nnvm/src/core/pass.cc	/^namespace dmlc {$/;"	n	file:
dmlc	nnvm/src/pass/saveload_json.cc	/^namespace dmlc {$/;"	n	file:
dmlc	src/torch/torch_util.h	/^namespace dmlc {$/;"	n
docutils	dmlc-core/doc/sphinx_util.py	/^import docutils$/;"	i
doneAllJobs	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized boolean doneAllJobs() {$/;"	m	class:ApplicationMaster	file:
dptr	dmlc-core/include/dmlc/io.h	/^    void *dptr;$/;"	m	struct:dmlc::InputSplit::Blob
dptr	dmlc-core/src/io/s3_filesys.cc	/^  const char *dptr;$/;"	m	struct:dmlc::io::s3::ReadStringStream	file:
dtype	src/c_api.cc	/^  std::vector<nn_uint> dtype;$/;"	m	struct:TinyAPIThreadLocalEntry	file:
dtype	src/op_tensor.cc	/^  int dtype;$/;"	m	struct:tinyflow::ZeroParam	file:
dtype_size_dict_	nnvm/src/pass/plan_memory.cc	/^  std::vector<size_t> dtype_size_dict_;$/;"	m	class:nnvm::pass::__anon7::GraphAllocator	file:
ecurl_	dmlc-core/src/io/s3_filesys.cc	/^  CURL *ecurl_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
ecurl_	dmlc-core/src/io/s3_filesys.cc	/^  CURL *mcurl_, *ecurl_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
empty	dmlc-core/include/dmlc/any.h	/^inline bool any::empty() const {$/;"	f	class:dmlc::any
empty	nnvm/include/dmlc/any.h	/^inline bool any::empty() const {$/;"	f	class:dmlc::any
enable_fusion_	src/session.cc	/^  bool enable_fusion_;$/;"	m	class:tinyflow::TorchExecutor	file:
end	dmlc-core/include/dmlc/array_view.h	/^  inline const ValueType* end() const {$/;"	f	class:dmlc::array_view
end	dmlc-core/src/config.cc	/^Config::ConfigIterator Config::end() const {$/;"	f	class:dmlc::Config
end	dmlc-core/src/io/input_split_base.h	/^    char *end;$/;"	m	struct:dmlc::io::InputSplitBase::Chunk
end	nnvm/include/dmlc/array_view.h	/^  inline const ValueType* end() const {$/;"	f	class:dmlc::array_view
end	nnvm/include/nnvm/tuple.h	/^  inline ValueType* end() {$/;"	f	class:nnvm::Tuple
end	nnvm/include/nnvm/tuple.h	/^  inline const ValueType* end() const {$/;"	f	class:nnvm::Tuple
end_	dmlc-core/include/dmlc/parameter.h	/^  DType begin_, end_;$/;"	m	class:dmlc::parameter::FieldEntryNumeric
end_	nnvm/include/dmlc/parameter.h	/^  DType begin_, end_;$/;"	m	class:dmlc::parameter::FieldEntryNumeric
end_of_stream_	dmlc-core/include/dmlc/recordio.h	/^  bool end_of_stream_;$/;"	m	class:dmlc::RecordIOReader
entry_	dmlc-core/include/dmlc/parameter.h	/^  std::vector<FieldAccessEntry*> entry_;$/;"	m	class:dmlc::parameter::ParamManager
entry_	nnvm/include/dmlc/parameter.h	/^  std::vector<FieldAccessEntry*> entry_;$/;"	m	class:dmlc::parameter::ParamManager
entry_id	nnvm/include/nnvm/graph.h	/^  inline uint32_t entry_id(const NodeEntry& e) const {$/;"	f	class:nnvm::IndexedGraph
entry_id	nnvm/include/nnvm/graph.h	/^  inline uint32_t entry_id(const nnvm::NodeEntry& e) const {$/;"	f	class:nnvm::IndexedGraph
entry_id	nnvm/include/nnvm/graph.h	/^  inline uint32_t entry_id(uint32_t node_id, uint32_t index) const {$/;"	f	class:nnvm::IndexedGraph
entry_list_	dmlc-core/include/dmlc/registry.h	/^  std::vector<EntryType*> entry_list_;$/;"	m	class:dmlc::Registry
entry_list_	nnvm/include/dmlc/registry.h	/^  std::vector<EntryType*> entry_list_;$/;"	m	class:dmlc::Registry
entry_map_	dmlc-core/include/dmlc/parameter.h	/^  std::map<std::string, FieldAccessEntry*> entry_map_;$/;"	m	class:dmlc::parameter::ParamManager
entry_map_	nnvm/include/dmlc/parameter.h	/^  std::map<std::string, FieldAccessEntry*> entry_map_;$/;"	m	class:dmlc::parameter::ParamManager
entry_rptr_	nnvm/include/nnvm/graph.h	/^  std::vector<size_t> entry_rptr_;$/;"	m	class:nnvm::IndexedGraph
enum_back_map_	dmlc-core/include/dmlc/parameter.h	/^  std::map<int, std::string> enum_back_map_;$/;"	m	class:dmlc::parameter::FieldEntry
enum_back_map_	nnvm/include/dmlc/parameter.h	/^  std::map<int, std::string> enum_back_map_;$/;"	m	class:dmlc::parameter::FieldEntry
enum_map_	dmlc-core/include/dmlc/parameter.h	/^  std::map<std::string, int> enum_map_;$/;"	m	class:dmlc::parameter::FieldEntry
enum_map_	nnvm/include/dmlc/parameter.h	/^  std::map<std::string, int> enum_map_;$/;"	m	class:dmlc::parameter::FieldEntry
env	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private final Map<String, String> env = new java.util.HashMap<String, String>();$/;"	f	class:ApplicationMaster	file:
env	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private Map<String, String> env = new java.util.HashMap<String, String>();$/;"	f	class:Client	file:
epylint	dmlc-core/scripts/lint.py	/^from pylint import epylint$/;"	i
epylint	dmlc-core/scripts/lint3.py	/^from pylint import epylint$/;"	i
etags_	dmlc-core/src/io/s3_filesys.cc	/^  std::vector<std::string> etags_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
except_counter	dmlc-core/include/dmlc/recordio.h	/^  inline size_t except_counter(void) const {$/;"	f	class:dmlc::RecordIOWriter
except_counter_	dmlc-core/include/dmlc/recordio.h	/^  size_t except_counter_;$/;"	m	class:dmlc::RecordIOWriter
exclude_patterns	dmlc-core/doc/conf.py	/^exclude_patterns = ['_build']$/;"	v
exec	src/session.cc	/^    std::shared_ptr<TorchExecutor> exec;$/;"	m	struct:tinyflow::TorchSession::ExecEntry	file:
exec_cmd	dmlc-core/tracker/dmlc_tracker/local.py	/^def exec_cmd(cmd, role, taskid, pass_env):$/;"	f
exit_now_	dmlc-core/include/dmlc/concurrency.h	/^  std::atomic<bool> exit_now_;$/;"	m	class:dmlc::ConcurrentBlockingQueue
expect_file_size_	dmlc-core/src/io/s3_filesys.cc	/^  size_t expect_file_size_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
ext_modules	nnvm/python/setup.py	/^    ext_modules = config_cython()$/;"	v
extensions	dmlc-core/doc/conf.py	/^extensions = [$/;"	v
fc1	example/cifar_resnet.py	/^fc1 = tf.nn.linear(flatten, num_hidden=10, name="fc1")$/;"	v
fc1	example/mnist_lenet.py	/^fc1 = tf.nn.linear(flatten, num_hidden=500, name="fc1")$/;"	v
fc1	example/mnist_mlp_auto_shape_inference.py	/^fc1 = tf.nn.linear(x, num_hidden=100, name="fc1", no_bias=False)$/;"	v
fc2	example/mnist_lenet.py	/^fc2 = tf.nn.linear(tanh3, num_hidden=10, name="fc2")$/;"	v
fc2	example/mnist_mlp_auto_shape_inference.py	/^fc2 = tf.nn.linear(relu1, num_hidden=10, name="fc2")$/;"	v
fcopy_from_to_	src/torch/torch_util.h	/^  LuaRef fcopy_from_to_;$/;"	m	class:tinyflow::TorchState
fetch_mldata	python/tinyflow/datasets.py	/^from sklearn.datasets import fetch_mldata$/;"	i
fget_internal_	src/torch/torch_util.h	/^  LuaRef fget_internal_;$/;"	m	class:tinyflow::TorchState
fi_	dmlc-core/src/data/disk_row_iter.h	/^  SeekStream *fi_;$/;"	m	class:dmlc::data::DiskRowIter
fi_	dmlc-core/src/io/cached_input_split.h	/^  dmlc::SeekStream *fi_;$/;"	m	class:dmlc::io::CachedInputSplit
fifo_queue_	dmlc-core/include/dmlc/concurrency.h	/^  std::queue<T> fifo_queue_;$/;"	m	class:dmlc::ConcurrentBlockingQueue
file_offset_	dmlc-core/src/io/input_split_base.h	/^  std::vector<size_t> file_offset_;$/;"	m	class:dmlc::io::InputSplitBase
file_ptr_	dmlc-core/src/io/input_split_base.h	/^  size_t file_ptr_;$/;"	m	class:dmlc::io::InputSplitBase
file_ptr_end_	dmlc-core/src/io/input_split_base.h	/^  size_t file_ptr_end_;$/;"	m	class:dmlc::io::InputSplitBase
files_	dmlc-core/src/io/input_split_base.h	/^  std::vector<FileInfo> files_;$/;"	m	class:dmlc::io::InputSplitBase
filesys_	dmlc-core/src/io/input_split_base.h	/^  FileSystem *filesys_;$/;"	m	class:dmlc::io::InputSplitBase
find_lib_path	nnvm/python/nnvm/libinfo.py	/^def find_lib_path():$/;"	f
find_share_ring	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def find_share_ring(self, tree_map, parent_map, r):$/;"	m	class:RabitTracker
finishedTasks	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private final Collection<TaskRecord> finishedTasks = new java.util.LinkedList<TaskRecord>();$/;"	f	class:ApplicationMaster	file:
flatten	example/cifar_resnet.py	/^flatten = tf.nn.flatten_layer(conv2)$/;"	v
flatten	example/mnist_lenet.py	/^flatten = tf.nn.flatten_layer(pool2)$/;"	v
float32	python/tinyflow/_base.py	/^float32 = 0$/;"	v
floatp	src/c_api.cc	/^  std::vector<const float*> floatp;$/;"	m	struct:TinyAPIThreadLocalEntry	file:
fmap_	dmlc-core/include/dmlc/registry.h	/^  std::map<std::string, EntryType*> fmap_;$/;"	m	class:dmlc::Registry
fmap_	nnvm/include/dmlc/registry.h	/^  std::map<std::string, EntryType*> fmap_;$/;"	m	class:dmlc::Registry
fo_	dmlc-core/src/io/cached_input_split.h	/^  dmlc::Stream *fo_;$/;"	m	class:dmlc::io::CachedInputSplit
fopen64	dmlc-core/include/dmlc/base.h	128;"	d
fopen64	dmlc-core/include/dmlc/base.h	131;"	d
fopen64	dmlc-core/include/dmlc/base.h	149;"	d
fopen64	dmlc-core/src/io/local_filesys.cc	21;"	d	file:
fopen64	dmlc-core/src/io/single_file_split.h	17;"	d
fopen64	nnvm/include/dmlc/base.h	128;"	d
fopen64	nnvm/include/dmlc/base.h	131;"	d
fopen64	nnvm/include/dmlc/base.h	149;"	d
for_each	dmlc-core/include/dmlc/lua.h	/^inline void for_each(const std::tuple<Args...>& args, F f) {$/;"	f	namespace:dmlc
for_each_dispatcher_	dmlc-core/include/dmlc/lua.h	/^struct for_each_dispatcher_ {$/;"	s	namespace:dmlc
for_each_dispatcher_	dmlc-core/include/dmlc/lua.h	/^struct for_each_dispatcher_<true, I, F, Args...>  {$/;"	s	namespace:dmlc
format	dmlc-core/src/data/csv_parser.h	/^  std::string format;$/;"	m	struct:dmlc::data::CSVParserParam
forward_readonly_inputs	src/op_util.h	/^  uint32_t forward_readonly_inputs;$/;"	m	struct:tinyflow::NNBackwardParam
fp_	dmlc-core/src/io/hdfs_filesys.cc	/^  hdfsFile fp_;$/;"	m	class:dmlc::io::HDFSStream	file:
fp_	dmlc-core/src/io/local_filesys.cc	/^  std::FILE *fp_;$/;"	m	class:dmlc::io::FileStream	file:
fp_	dmlc-core/src/io/single_file_split.h	/^  std::FILE *fp_;$/;"	m	class:dmlc::io::SingleFileSplit
freeUnusedContainers	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized void freeUnusedContainers($/;"	m	class:ApplicationMaster	file:
free_	nnvm/src/pass/plan_memory.cc	/^  std::multimap<size_t, StorageEntry*> free_;$/;"	m	class:nnvm::pass::__anon7::GraphAllocator	file:
free_cells_	dmlc-core/include/dmlc/threadediter.h	/^  std::queue<DType*> free_cells_;$/;"	m	class:dmlc::ThreadedIter
fs_	dmlc-core/src/io/hdfs_filesys.cc	/^  hdfsFS fs_;$/;"	m	class:dmlc::io::HDFSStream	file:
fs_	dmlc-core/src/io/hdfs_filesys.h	/^  hdfsFS fs_;$/;"	m	class:dmlc::io::HDFSFileSystem
fs_	dmlc-core/src/io/input_split_base.h	/^  SeekStream *fs_;$/;"	m	class:dmlc::io::InputSplitBase
fstorage_new_	src/torch/torch_util.h	/^  LuaRef fstorage_new_;$/;"	m	class:tinyflow::TorchState
ftensor_new_	src/torch/torch_util.h	/^  LuaRef ftensor_new_;$/;"	m	class:tinyflow::TorchState
ftensor_new_shared_	src/torch/torch_util.h	/^  LuaRef ftensor_new_shared_;$/;"	m	class:tinyflow::TorchState
ftensor_set_	src/torch/torch_util.h	/^  LuaRef ftensor_set_;$/;"	m	class:tinyflow::TorchState
func	dmlc-core/include/dmlc/json.h	/^    ReadFunction func;$/;"	m	struct:dmlc::JSONObjectReadHelper::Entry
func	nnvm/include/dmlc/json.h	/^    ReadFunction func;$/;"	m	struct:dmlc::JSONObjectReadHelper::Entry
fusion	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^namespace fusion {$/;"	n	namespace:nnvm
fusion	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/base.h	/^namespace fusion {$/;"	n	namespace:nnvm
fusion	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^namespace fusion {$/;"	n	namespace:nnvm
fusion	nnvm/plugin/nnvm-fusion/src/codegen.cc	/^namespace fusion {$/;"	n	namespace:nnvm	file:
fusion	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^namespace fusion {$/;"	n	namespace:nnvm	file:
fusion	nnvm/plugin/nnvm-fusion/src/internal.h	/^namespace fusion {$/;"	n	namespace:nnvm
fusion	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^namespace fusion {$/;"	n	namespace:nnvm	file:
gaierror	dmlc-core/tracker/dmlc_tracker/tracker.py	/^        from socket import gaierror$/;"	i
generate_doxygen_xml	dmlc-core/doc/conf.py	/^def generate_doxygen_xml(app):$/;"	f
get	dmlc-core/include/dmlc/any.h	/^inline T& get(any& src) { \/\/ NOLINT(*)$/;"	f	namespace:dmlc
get	dmlc-core/include/dmlc/any.h	/^inline const T& get(const any& src) {$/;"	f	namespace:dmlc
get	dmlc-core/include/dmlc/memory.h	/^  inline T* get() const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
get	dmlc-core/src/data/strtonum.h	/^  static inline float get(const char * begin, const char * end) {$/;"	f	class:dmlc::data::Str2T
get	dmlc-core/src/data/strtonum.h	/^  static inline int32_t get(const char * begin, const char * end) {$/;"	f	class:dmlc::data::Str2T
get	dmlc-core/src/data/strtonum.h	/^  static inline int64_t get(const char * begin, const char * end) {$/;"	f	class:dmlc::data::Str2T
get	dmlc-core/src/data/strtonum.h	/^  static inline uint32_t get(const char * begin, const char * end) {$/;"	f	class:dmlc::data::Str2T
get	dmlc-core/src/data/strtonum.h	/^  static inline uint64_t get(const char * begin, const char * end) {$/;"	f	class:dmlc::data::Str2T
get	nnvm/include/dmlc/any.h	/^inline T& get(any& src) { \/\/ NOLINT(*)$/;"	f	namespace:dmlc
get	nnvm/include/dmlc/any.h	/^inline const T& get(const any& src) {$/;"	f	namespace:dmlc
get	nnvm/include/dmlc/memory.h	/^  inline T* get() const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
get	nnvm/include/nnvm/op.h	/^inline const ValueType& OpMap<ValueType>::get(const Op* op, const ValueType& def_value) const {$/;"	f	class:nnvm::OpMap
get	nnvm/include/nnvm/tuple.h	/^  inline mshadow::Shape<dim> get() const {$/;"	f	class:nnvm::TShape
get	nnvm/python/nnvm/attribute.py	/^    def get(self, attr):$/;"	m	class:AttrScope
get	nnvm/python/nnvm/name.py	/^    def get(self, name, hint):$/;"	m	class:NameManager
get	nnvm/python/nnvm/name.py	/^    def get(self, name, hint):$/;"	m	class:Prefix
getEnvInteger	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int getEnvInteger(String name, boolean required, int defv)$/;"	m	class:ApplicationMaster	file:
getEnvironment	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private Map<String, String> getEnvironment() {$/;"	m	class:Client	file:
getProgress	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public float getProgress() {$/;"	m	class:ApplicationMaster.RMCallbackHandler
get_cache_file_set	dmlc-core/tracker/dmlc_tracker/opts.py	/^def get_cache_file_set(args):$/;"	f
get_cifar10	example/cifar_resnet.py	/^from tinyflow.datasets import get_cifar10$/;"	i
get_cifar10	python/tinyflow/datasets.py	/^def get_cifar10(swap_axes=False):$/;"	f
get_env	dmlc-core/tracker/dmlc_tracker/ssh.py	/^def get_env(pass_envs):$/;"	f
get_family	dmlc-core/tracker/dmlc_tracker/tracker.py	/^def get_family(addr):$/;"	f
get_header_guard_dmlc	dmlc-core/scripts/lint.py	/^def get_header_guard_dmlc(filename):$/;"	f
get_header_guard_dmlc	dmlc-core/scripts/lint3.py	/^def get_header_guard_dmlc(filename):$/;"	f
get_host_ip	dmlc-core/tracker/dmlc_tracker/tracker.py	/^def get_host_ip(hostIP=None):$/;"	f
get_index	dmlc-core/include/dmlc/data.h	/^  inline IndexType get_index(size_t i) const {$/;"	f	class:dmlc::Row
get_internals	nnvm/python/nnvm/symbol.py	/^    def get_internals(self):$/;"	m	class:Symbol
get_link_map	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def get_link_map(self, nslave):$/;"	m	class:RabitTracker
get_memory_mb	dmlc-core/tracker/dmlc_tracker/opts.py	/^def get_memory_mb(mem_str):$/;"	f
get_mnist	example/mnist_lenet.py	/^from tinyflow.datasets import get_mnist$/;"	i
get_mnist	example/mnist_mlp_auto_shape_inference.py	/^from tinyflow.datasets import get_mnist$/;"	i
get_mnist	example/mnist_softmax.py	/^from tinyflow.datasets import get_mnist$/;"	i
get_mnist	example/mnist_softmax_minimum.py	/^from tinyflow.datasets import get_mnist$/;"	i
get_mnist	python/tinyflow/datasets.py	/^def get_mnist(flatten=False, onehot=False):$/;"	f
get_mpi_env	dmlc-core/tracker/dmlc_tracker/mpi.py	/^def get_mpi_env(envs):$/;"	f
get_neighbor	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def get_neighbor(rank, nslave):$/;"	m	class:RabitTracker
get_num_inputs	nnvm/include/nnvm/op.h	/^  std::function<uint32_t(const NodeAttrs& attrs)> get_num_inputs = nullptr;$/;"	m	class:nnvm::Op
get_num_outputs	nnvm/include/nnvm/op.h	/^  std::function<uint32_t(const NodeAttrs& attrs)> get_num_outputs = nullptr;$/;"	m	class:nnvm::Op
get_opts	dmlc-core/tracker/dmlc_tracker/opts.py	/^def get_opts(args=None):$/;"	f
get_ptr	dmlc-core/include/dmlc/any.h	/^  inline static T* get_ptr(any::Data* data) {$/;"	f	class:dmlc::any::TypeOnHeap
get_ptr	dmlc-core/include/dmlc/any.h	/^  inline static T* get_ptr(any::Data* data) {$/;"	f	class:dmlc::any::TypeOnStack
get_ptr	dmlc-core/include/dmlc/any.h	/^  inline static const T* get_ptr(const any::Data* data) {$/;"	f	class:dmlc::any::TypeOnHeap
get_ptr	dmlc-core/include/dmlc/any.h	/^  inline static const T* get_ptr(const any::Data* data) {$/;"	f	class:dmlc::any::TypeOnStack
get_ptr	nnvm/include/dmlc/any.h	/^  inline static T* get_ptr(any::Data* data) {$/;"	f	class:dmlc::any::TypeOnHeap
get_ptr	nnvm/include/dmlc/any.h	/^  inline static T* get_ptr(any::Data* data) {$/;"	f	class:dmlc::any::TypeOnStack
get_ptr	nnvm/include/dmlc/any.h	/^  inline static const T* get_ptr(const any::Data* data) {$/;"	f	class:dmlc::any::TypeOnHeap
get_ptr	nnvm/include/dmlc/any.h	/^  inline static const T* get_ptr(const any::Data* data) {$/;"	f	class:dmlc::any::TypeOnStack
get_ring	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def get_ring(self, tree_map, parent_map):$/;"	m	class:RabitTracker
get_some_ip	dmlc-core/tracker/dmlc_tracker/tracker.py	/^def get_some_ip(host):$/;"	f
get_tree	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def get_tree(self, nslave):$/;"	m	class:RabitTracker
get_type	dmlc-core/include/dmlc/any.h	/^  inline static const Type* get_type() {$/;"	f	class:dmlc::any::TypeInfo
get_type	nnvm/include/dmlc/any.h	/^  inline static const Type* get_type() {$/;"	f	class:dmlc::any::TypeInfo
get_value	dmlc-core/include/dmlc/data.h	/^  inline real_t get_value(size_t i) const {$/;"	f	class:dmlc::Row
get_with_default	nnvm/src/pass/order_mutation.cc	/^inline T get_with_default(const std::unordered_map<Node*, T> &map,$/;"	f	namespace:nnvm::pass::__anon6
github_doc_root	dmlc-core/doc/conf.py	/^github_doc_root = 'https:\/\/github.com\/dmlc-core\/dmlc-core\/tree\/master\/doc\/'$/;"	v
glob	dmlc-core/tracker/dmlc_tracker/launcher.py	/^import glob$/;"	i
grad	nnvm/tests/python/test_gradient.py	/^def grad(ys, xs, ys_grads):$/;"	f
gradients	python/tinyflow/_base.py	/^def gradients(ys, xs, grad_ys=None):$/;"	f
grads	nnvm/src/pass/gradient.cc	/^  std::vector<NodeEntry> grads;$/;"	m	struct:nnvm::pass::__anon8::GradEntry	file:
graph	nnvm/tests/python/test_gradient.py	/^import nnvm.graph as graph$/;"	i
graph	nnvm/tests/python/test_graph.py	/^import nnvm.graph as graph$/;"	i
graph	python/tinyflow/_base.py	/^from nnvm import symbol, graph$/;"	i
graph	python/tinyflow/_util.py	/^from nnvm import symbol, graph$/;"	i
graph_	src/session.cc	/^  nnvm::Graph graph_;$/;"	m	class:tinyflow::TorchExecutor	file:
graph_attr_dependency	nnvm/include/nnvm/pass.h	/^  std::vector<std::string> graph_attr_dependency;$/;"	m	struct:nnvm::PassFunctionReg
graph_attr_targets	nnvm/include/nnvm/pass.h	/^  std::vector<std::string> graph_attr_targets;$/;"	m	struct:nnvm::PassFunctionReg
group	python/tinyflow/_base.py	/^def group(*inputs):$/;"	f
group_name	nnvm/include/nnvm/op.h	/^  std::string group_name;$/;"	m	class:nnvm::OpGroup
handle	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^        public void handle(Signal signal){$/;"	m	class:Client.CtrlCHandler
handle	nnvm/python/nnvm/cython/symbol.pyx	/^    def handle(self):$/;"	m	class:SymbolBase
handleFailure	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized void handleFailure(Collection<ContainerId> failed) {$/;"	m	class:ApplicationMaster	file:
has_begin_	dmlc-core/include/dmlc/parameter.h	/^  bool has_begin_, has_end_;$/;"	m	class:dmlc::parameter::FieldEntryNumeric
has_begin_	nnvm/include/dmlc/parameter.h	/^  bool has_begin_, has_end_;$/;"	m	class:dmlc::parameter::FieldEntryNumeric
has_default_	dmlc-core/include/dmlc/parameter.h	/^  bool has_default_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
has_default_	nnvm/include/dmlc/parameter.h	/^  bool has_default_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
has_end_	dmlc-core/include/dmlc/parameter.h	/^  bool has_begin_, has_end_;$/;"	m	class:dmlc::parameter::FieldEntryNumeric
has_end_	nnvm/include/dmlc/parameter.h	/^  bool has_begin_, has_end_;$/;"	m	class:dmlc::parameter::FieldEntryNumeric
has_saveload	dmlc-core/include/dmlc/type_traits.h	/^struct has_saveload {$/;"	s	namespace:dmlc
has_saveload	nnvm/include/dmlc/type_traits.h	/^struct has_saveload {$/;"	s	namespace:dmlc
head	dmlc-core/include/dmlc/parameter.h	/^  inline PType *head() const {$/;"	f	struct:dmlc::Parameter
head	nnvm/include/dmlc/parameter.h	/^  inline PType *head() const {$/;"	f	struct:dmlc::Parameter
header_	dmlc-core/src/io/s3_filesys.cc	/^  std::string header_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
heads	nnvm/src/pass/saveload_json.cc	/^  std::vector<JSONNode::Entry> heads;$/;"	m	struct:nnvm::pass::__anon5::JSONGraph	file:
host	dmlc-core/src/io/filesys.h	/^  std::string host;$/;"	m	struct:dmlc::io::URI
html_static_path	dmlc-core/doc/conf.py	/^html_static_path = ['_static']$/;"	v
htmlhelp_basename	dmlc-core/doc/conf.py	/^htmlhelp_basename = project + 'doc'$/;"	v
id	nnvm/src/pass/plan_memory.cc	/^    StorageID id;$/;"	m	struct:nnvm::pass::__anon7::GraphAllocator::StorageEntry	file:
idx_	nnvm/src/pass/plan_memory.cc	/^  const IndexedGraph* idx_;$/;"	m	class:nnvm::pass::__anon7::GraphAllocator	file:
include	nnvm/src/core/op.cc	/^Op& Op::include(const std::string& group_name) {$/;"	f	class:nnvm::Op
index	dmlc-core/include/dmlc/data.h	/^  const IndexType *index;$/;"	m	class:dmlc::Row
index	dmlc-core/include/dmlc/data.h	/^  const IndexType *index;$/;"	m	struct:dmlc::RowBlock
index	dmlc-core/src/data/row_block.h	/^  std::vector<IndexType> index;$/;"	m	struct:dmlc::data::RowBlockContainer
index	nnvm/include/nnvm/graph.h	/^    uint32_t index;$/;"	m	struct:nnvm::IndexedGraph::NodeEntry
index	nnvm/include/nnvm/node.h	/^  uint32_t index;$/;"	m	struct:nnvm::NodeEntry
index	nnvm/src/pass/saveload_json.cc	/^    uint32_t index;$/;"	m	struct:nnvm::pass::__anon5::JSONNode::Entry	file:
index_	dmlc-core/include/dmlc/config.h	/^    size_t index_;$/;"	m	class:dmlc::Config::ConfigIterator
index_	dmlc-core/include/dmlc/parameter.h	/^  size_t index_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
index_	nnvm/include/dmlc/parameter.h	/^  size_t index_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
index_t	dmlc-core/include/dmlc/data.h	/^typedef unsigned index_t;$/;"	t	namespace:dmlc
index_t	nnvm/include/nnvm/tuple.h	/^typedef uint32_t index_t;$/;"	t	namespace:nnvm
index_t	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^typedef unsigned index_t;$/;"	t	namespace:nnvm::fusion
indexed_graph	nnvm/src/core/graph.cc	/^const IndexedGraph& Graph::indexed_graph() {$/;"	f	class:nnvm::Graph
indexed_graph_	nnvm/include/nnvm/graph.h	/^  std::shared_ptr<const IndexedGraph> indexed_graph_;$/;"	m	class:nnvm::Graph
infer_variable_shapes	python/tinyflow/__init__.py	/^from ._util import infer_variable_shapes$/;"	i
infer_variable_shapes	python/tinyflow/_util.py	/^def infer_variable_shapes(net, feed_dict):$/;"	f
initArgs	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private void initArgs(String args[]) throws IOException {$/;"	m	class:ApplicationMaster	file:
initArgs	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private void initArgs(String[] args) {$/;"	m	class:Client	file:
init_step	example/cifar_resnet.py	/^init_step = []$/;"	v
init_step	example/mnist_lenet.py	/^init_step = []$/;"	v
init_step	example/mnist_mlp_auto_shape_inference.py	/^init_step = []$/;"	v
initialize_all_variables	python/tinyflow/_base.py	/^def initialize_all_variables():$/;"	f
initialized	src/session.cc	/^  inline bool initialized() const {$/;"	f	struct:tinyflow::VarState
input_entries_	nnvm/include/nnvm/graph.h	/^  std::vector<NodeEntry> input_entries_;$/;"	m	class:nnvm::IndexedGraph
input_nodes	nnvm/include/nnvm/graph.h	/^  inline const std::vector<uint32_t>& input_nodes() const {$/;"	f	class:nnvm::IndexedGraph
input_nodes_	nnvm/include/nnvm/graph.h	/^  std::vector<uint32_t> input_nodes_;$/;"	m	class:nnvm::IndexedGraph
inputs	nnvm/include/nnvm/graph.h	/^    array_view<NodeEntry> inputs;$/;"	m	struct:nnvm::IndexedGraph::Node
inputs	nnvm/include/nnvm/node.h	/^  std::vector<NodeEntry> inputs;$/;"	m	class:nnvm::Node
inputs	nnvm/src/pass/saveload_json.cc	/^  std::vector<Entry> inputs;$/;"	m	struct:nnvm::pass::__anon5::JSONNode	file:
insert_index	dmlc-core/include/dmlc/config.h	/^    std::vector<size_t> insert_index;$/;"	m	struct:dmlc::Config::ConfigValue
int16_t	dmlc-core/include/dmlc/base.h	/^typedef __int16 int16_t;$/;"	t
int16_t	nnvm/include/dmlc/base.h	/^typedef __int16 int16_t;$/;"	t
int32_t	dmlc-core/include/dmlc/base.h	/^typedef __int32 int32_t;$/;"	t
int32_t	nnvm/include/dmlc/base.h	/^typedef __int32 int32_t;$/;"	t
int64_t	dmlc-core/include/dmlc/base.h	/^typedef __int64 int64_t;$/;"	t
int64_t	nnvm/include/dmlc/base.h	/^typedef __int64 int64_t;$/;"	t
int8_t	dmlc-core/include/dmlc/base.h	/^typedef signed char int8_t;$/;"	t
int8_t	nnvm/include/dmlc/base.h	/^typedef signed char int8_t;$/;"	t
io	dmlc-core/src/io.cc	/^namespace io {$/;"	n	namespace:dmlc	file:
io	dmlc-core/src/io/azure_filesys.cc	/^namespace io {$/;"	n	namespace:dmlc	file:
io	dmlc-core/src/io/azure_filesys.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/cached_input_split.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/filesys.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/hdfs_filesys.cc	/^namespace io {$/;"	n	namespace:dmlc	file:
io	dmlc-core/src/io/hdfs_filesys.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/input_split_base.cc	/^namespace io {$/;"	n	namespace:dmlc	file:
io	dmlc-core/src/io/input_split_base.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/line_split.cc	/^namespace io {$/;"	n	namespace:dmlc	file:
io	dmlc-core/src/io/line_split.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/local_filesys.cc	/^namespace io {$/;"	n	namespace:dmlc	file:
io	dmlc-core/src/io/local_filesys.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/recordio_split.cc	/^namespace io {$/;"	n	namespace:dmlc	file:
io	dmlc-core/src/io/recordio_split.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/s3_filesys.cc	/^namespace io {$/;"	n	namespace:dmlc	file:
io	dmlc-core/src/io/s3_filesys.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/single_file_split.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/threaded_input_split.h	/^namespace io {$/;"	n	namespace:dmlc
io	dmlc-core/src/io/uri_spec.h	/^namespace io {$/;"	n	namespace:dmlc
is_	dmlc-core/include/dmlc/json.h	/^  std::istream *is_;$/;"	m	class:dmlc::JSONReader
is_	dmlc-core/src/config.cc	/^  istream& is_;$/;"	m	class:dmlc::Tokenizer	file:
is_	nnvm/include/dmlc/json.h	/^  std::istream *is_;$/;"	m	class:dmlc::JSONReader
is_arithmetic	dmlc-core/include/dmlc/type_traits.h	/^struct is_arithmetic {$/;"	s	namespace:dmlc
is_arithmetic	nnvm/include/dmlc/type_traits.h	/^struct is_arithmetic {$/;"	s	namespace:dmlc
is_enum_	dmlc-core/include/dmlc/parameter.h	/^  bool is_enum_;$/;"	m	class:dmlc::parameter::FieldEntry
is_enum_	nnvm/include/dmlc/parameter.h	/^  bool is_enum_;$/;"	m	class:dmlc::parameter::FieldEntry
is_floating_point	dmlc-core/include/dmlc/type_traits.h	/^struct is_floating_point {$/;"	s	namespace:dmlc
is_floating_point	nnvm/include/dmlc/type_traits.h	/^struct is_floating_point {$/;"	s	namespace:dmlc
is_integral	dmlc-core/include/dmlc/type_traits.h	/^struct is_integral {$/;"	s	namespace:dmlc
is_integral	nnvm/include/dmlc/type_traits.h	/^struct is_integral {$/;"	s	namespace:dmlc
is_nil	dmlc-core/include/dmlc/lua.h	/^inline bool LuaRef::is_nil() const {$/;"	f	class:dmlc::LuaRef
is_pod	dmlc-core/include/dmlc/type_traits.h	/^struct is_pod {$/;"	s	namespace:dmlc
is_pod	nnvm/include/dmlc/type_traits.h	/^struct is_pod {$/;"	s	namespace:dmlc
is_string	dmlc-core/include/dmlc/config.h	/^    bool is_string;$/;"	m	struct:dmlc::Config::ConfigValue
is_string	dmlc-core/src/config.cc	/^  bool is_string;$/;"	m	struct:dmlc::Token	file:
is_variable	nnvm/include/nnvm/node.h	/^inline bool Node::is_variable() const {$/;"	f	class:nnvm::Node
isblank	dmlc-core/src/data/strtonum.h	/^inline bool isblank(char c) {$/;"	f	namespace:dmlc::data
isdigit	dmlc-core/src/data/strtonum.h	/^inline bool isdigit(char c) {$/;"	f	namespace:dmlc::data
isdigitchars	dmlc-core/src/data/strtonum.h	/^inline bool isdigitchars(char c) {$/;"	f	namespace:dmlc::data
isspace	dmlc-core/src/data/strtonum.h	/^inline bool isspace(char c) {$/;"	f	namespace:dmlc::data
istream	dmlc-core/include/dmlc/io.h	/^  explicit istream(Stream *stream,$/;"	f	class:dmlc::istream
istream	dmlc-core/include/dmlc/io.h	/^class istream : public std::basic_istream<char> {$/;"	c	namespace:dmlc
iter_	dmlc-core/src/data/disk_row_iter.h	/^  ThreadedIter<RowBlockContainer<IndexType> > iter_;$/;"	m	class:dmlc::data::DiskRowIter
iter_	dmlc-core/src/data/parser.h	/^  ThreadedIter<std::vector<RowBlockContainer<IndexType> > > iter_;$/;"	m	class:dmlc::data::ThreadedParser
iter_	dmlc-core/src/io/threaded_input_split.h	/^  ThreadedIter<InputSplitBase::Chunk> iter_;$/;"	m	class:dmlc::io::ThreadedInputSplit
iter_cached_	dmlc-core/src/io/cached_input_split.h	/^  ThreadedIter<InputSplitBase::Chunk> iter_cached_;$/;"	m	class:dmlc::io::CachedInputSplit
iter_preproc_	dmlc-core/src/io/cached_input_split.h	/^  ThreadedIter<InputSplitBase::Chunk> *iter_preproc_;$/;"	m	class:dmlc::io::CachedInputSplit
jobName	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private String jobName = "";$/;"	f	class:Client	file:
join	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def join(self):$/;"	m	class:PSTracker
join	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def join(self):$/;"	m	class:RabitTracker
json	dmlc-core/include/dmlc/json.h	/^namespace json {$/;"	n	namespace:dmlc
json	dmlc-core/test/unittest/unittest_json.cc	/^namespace json {$/;"	n	file:
json	nnvm/include/dmlc/json.h	/^namespace json {$/;"	n	namespace:dmlc
json	nnvm/python/nnvm/graph.py	/^import json$/;"	i
json	nnvm/src/pass/saveload_json.cc	/^namespace json {$/;"	n	namespace:dmlc	file:
json	nnvm/tests/python/test_gradient.py	/^import json$/;"	i
json	nnvm/tests/python/test_graph.py	/^import json$/;"	i
json	python/tinyflow/_util.py	/^import json$/;"	i
json_attr	nnvm/python/nnvm/graph.py	/^    def json_attr(self, key):$/;"	m	class:Graph
kAlign	dmlc-core/include/dmlc/any.h	/^  static const size_t kAlign = sizeof(void*);$/;"	m	class:dmlc::any
kAlign	nnvm/include/dmlc/any.h	/^  static const size_t kAlign = sizeof(void*);$/;"	m	class:dmlc::any
kAll	nnvm/include/nnvm/symbolic.h	/^    kAll = 0,$/;"	e	enum:nnvm::Symbol::ListInputOption
kAllMatch	dmlc-core/include/dmlc/parameter.h	/^  kAllMatch$/;"	e	enum:dmlc::parameter::ParamInitOption
kAllMatch	nnvm/include/dmlc/parameter.h	/^  kAllMatch,$/;"	e	enum:dmlc::parameter::ParamInitOption
kAllowHidden	nnvm/include/dmlc/parameter.h	/^  kAllowHidden$/;"	e	enum:dmlc::parameter::ParamInitOption
kAllowUnknown	dmlc-core/include/dmlc/parameter.h	/^  kAllowUnknown,$/;"	e	enum:dmlc::parameter::ParamInitOption
kAllowUnknown	nnvm/include/dmlc/parameter.h	/^  kAllowUnknown,$/;"	e	enum:dmlc::parameter::ParamInitOption
kAuxiliaryStates	nnvm/include/nnvm/symbolic.h	/^    kAuxiliaryStates = 2$/;"	e	enum:nnvm::Symbol::ListInputOption
kBadStorageID	nnvm/src/pass/plan_memory.cc	/^  static const StorageID kBadStorageID = -1;$/;"	m	class:nnvm::pass::__anon7::GraphAllocator	file:
kBeforeFirst	dmlc-core/include/dmlc/threadediter.h	/^    kBeforeFirst,$/;"	e	enum:dmlc::ThreadedIter::Signal
kBufferSize	dmlc-core/src/io/input_split_base.h	/^  static const size_t kBufferSize = 2UL << 20UL;$/;"	m	class:dmlc::io::InputSplitBase
kBufferSize	dmlc-core/src/io/single_file_split.h	/^  static const size_t kBufferSize = 1 << 18UL;$/;"	m	class:dmlc::io::SingleFileSplit
kCPU	include/tinyflow/base.h	/^  kCPU = 1,$/;"	e	enum:tinyflow::DeviceMask
kDestroy	dmlc-core/include/dmlc/threadediter.h	/^    kDestroy$/;"	e	enum:dmlc::ThreadedIter::Signal
kDirectory	dmlc-core/src/io/filesys.h	/^  kDirectory$/;"	e	enum:dmlc::io::FileType
kFIFO	dmlc-core/include/dmlc/concurrency.h	/^  kFIFO,$/;"	m	class:dmlc::ConcurrentQueueType
kFile	dmlc-core/src/io/filesys.h	/^  kFile,$/;"	e	enum:dmlc::io::FileType
kFinish	dmlc-core/src/config.cc	/^    kFinish,$/;"	e	enum:dmlc::Tokenizer::ParseState	file:
kFloat32	include/tinyflow/base.h	/^  kFloat32 = 0$/;"	e	enum:tinyflow::DataType
kGPU	include/tinyflow/base.h	/^  kGPU = 2$/;"	e	enum:tinyflow::DeviceMask
kLocking	dmlc-core/include/dmlc/lua.h	/^    kLocking,$/;"	e	enum:dmlc::LuaState::Option
kLuaNOP	src/op_special.cc	/^const FLuaCompute kLuaNOP = "function(x, y, kwarg) return function() end end";$/;"	m	namespace:tinyflow	file:
kLuaNOP	src/torch/op_special_torch.cc	/^const FLuaCompute kLuaNOP = "function(x, y, kwarg) return function() end end";$/;"	m	namespace:tinyflow	file:
kMagic	dmlc-core/include/dmlc/recordio.h	/^  static const uint32_t kMagic = 0xced7230a;$/;"	m	class:dmlc::RecordIOWriter
kMagic	dmlc-core/tracker/dmlc_tracker/tracker.py	/^kMagic = 0xff99$/;"	v
kNamespaceSeparator	nnvm/src/core/symbolic.cc	/^const char *kNamespaceSeparator = "$";$/;"	m	namespace:nnvm::symbol_constants	file:
kNoThreadProtect	dmlc-core/include/dmlc/lua.h	/^    kNoThreadProtect,$/;"	e	enum:dmlc::LuaState::Option
kNone	dmlc-core/src/config.cc	/^    kNone = 0,$/;"	e	enum:dmlc::Tokenizer::ParseState	file:
kPageSize	dmlc-core/include/dmlc/memory.h	/^  static const int kPageSize = ((1 << 22) \/ size);$/;"	m	class:dmlc::MemoryPool
kPageSize	dmlc-core/src/data/disk_row_iter.h	/^  static const size_t kPageSize = 64UL << 20UL;$/;"	m	class:dmlc::data::DiskRowIter
kPageSize	nnvm/include/dmlc/memory.h	/^  static const int kPageSize = ((1 << 22) \/ size);$/;"	m	class:dmlc::MemoryPool
kProduce	dmlc-core/include/dmlc/threadediter.h	/^    kProduce,$/;"	e	enum:dmlc::ThreadedIter::Signal
kReadOnlyArgs	nnvm/include/nnvm/symbolic.h	/^    kReadOnlyArgs = 1,$/;"	e	enum:nnvm::Symbol::ListInputOption
kRecursive	nnvm/include/nnvm/symbolic.h	/^    kRecursive = 0,$/;"	e	enum:nnvm::Symbol::ListAttrOption
kShallow	nnvm/include/nnvm/symbolic.h	/^    kShallow = 1$/;"	e	enum:nnvm::Symbol::ListAttrOption
kStack	dmlc-core/include/dmlc/any.h	/^  static const size_t kStack = sizeof(void*) * 3;$/;"	m	class:dmlc::any
kStack	nnvm/include/dmlc/any.h	/^  static const size_t kStack = sizeof(void*) * 3;$/;"	m	class:dmlc::any
kStackCache	nnvm/include/nnvm/tuple.h	/^  static const uint32_t kStackCache = 4;$/;"	m	class:nnvm::Tuple
kThreadLocal	dmlc-core/include/dmlc/lua.h	/^    kThreadLocal,$/;"	e	enum:dmlc::LuaState::Option
kToken	dmlc-core/src/config.cc	/^    kToken,$/;"	e	enum:dmlc::Tokenizer::ParseState	file:
kVarg	nnvm/include/nnvm/op.h	/^static const uint32_t kVarg = std::numeric_limits<uint32_t>::max();$/;"	m	namespace:nnvm
kernel_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^  std::string kernel_;$/;"	m	class:nnvm::fusion::RTC
kernel_registry	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^  static std::unordered_map<std::string, char*> kernel_registry;$/;"	m	class:nnvm::fusion::RTC
kernel_registry	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^std::unordered_map<std::string, char*> RTC::kernel_registry;$/;"	m	class:nnvm::fusion::RTC	file:
key_	dmlc-core/include/dmlc/parameter.h	/^  std::string key_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
key_	nnvm/include/dmlc/parameter.h	/^  std::string key_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
killedTasks	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private final Collection<TaskRecord> killedTasks = new java.util.LinkedList<TaskRecord>();$/;"	f	class:ApplicationMaster	file:
known_shape	example/cifar_resnet.py	/^known_shape = {x: [batch_size, 3, 32, 32], label: [batch_size]}$/;"	v
known_shape	example/mnist_lenet.py	/^known_shape = {x: [100, 1, 28, 28], label: [100]}$/;"	v
known_shape	example/mnist_mlp_auto_shape_inference.py	/^known_shape = {x: [100, 28 * 28], label: [100]}$/;"	v
ksize	src/op_nn.cc	/^  TShape ksize;$/;"	m	struct:tinyflow::ConvPoolParam	file:
kwarg_symbol	nnvm/src/c_api/c_api_common.h	/^  std::unordered_map<std::string, const nnvm::Symbol*> kwarg_symbol;$/;"	m	struct:NNAPIThreadLocalEntry
label	dmlc-core/include/dmlc/data.h	/^  const real_t *label;$/;"	m	struct:dmlc::RowBlock
label	dmlc-core/include/dmlc/data.h	/^  real_t label;$/;"	m	class:dmlc::Row
label	dmlc-core/src/data/row_block.h	/^  std::vector<real_t> label;$/;"	m	struct:dmlc::data::RowBlockContainer
label	example/cifar_resnet.py	/^label = tf.placeholder(tf.float32)$/;"	v
label	example/mnist_lenet.py	/^label = tf.placeholder(tf.float32)$/;"	v
label	example/mnist_mlp_auto_shape_inference.py	/^label = tf.placeholder(tf.float32)$/;"	v
label_column	dmlc-core/src/data/csv_parser.h	/^  int label_column;$/;"	m	struct:dmlc::data::CSVParserParam
language	dmlc-core/doc/conf.py	/^language = None$/;"	v
last_error	nnvm/src/c_api/c_api_error.cc	/^  std::string last_error;$/;"	m	struct:ErrorEntry	file:
latex_documents	dmlc-core/doc/conf.py	/^latex_documents = [$/;"	v
latex_elements	dmlc-core/doc/conf.py	/^latex_elements = {$/;"	v
launchDummyTask	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized void launchDummyTask(Container container){$/;"	m	class:ApplicationMaster	file:
launchTask	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private void launchTask(Container container, TaskRecord task) {$/;"	m	class:ApplicationMaster	file:
learning_rate	dmlc-core/example/parameter.cc	/^  float learning_rate;$/;"	m	struct:MyParam	file:
learning_rate	dmlc-core/test/parameter_test.cc	/^  float learning_rate;$/;"	m	struct:Param	file:
learning_rate	example/mnist_softmax_minimum.py	/^learning_rate = 0.5$/;"	v
length	dmlc-core/include/dmlc/data.h	/^  size_t length;$/;"	m	class:dmlc::Row
lhs_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  ASTPtr lhs_, rhs_;$/;"	m	class:nnvm::fusion::ArraySubscriptAST
lhs_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  ASTPtr lhs_, rhs_;$/;"	m	class:nnvm::fusion::BinaryAST
libinfo	nnvm/python/nnvm/_base.py	/^from . import libinfo$/;"	i
line_count_n_	dmlc-core/include/dmlc/json.h	/^  size_t line_count_n_;$/;"	m	class:dmlc::JSONReader
line_count_n_	nnvm/include/dmlc/json.h	/^  size_t line_count_n_;$/;"	m	class:dmlc::JSONReader
line_count_r_	dmlc-core/include/dmlc/json.h	/^  size_t line_count_r_;$/;"	m	class:dmlc::JSONReader
line_count_r_	nnvm/include/dmlc/json.h	/^  size_t line_count_r_;$/;"	m	class:dmlc::JSONReader
line_info	dmlc-core/include/dmlc/json.h	/^  inline std::string line_info() const {$/;"	f	class:dmlc::JSONReader
line_info	nnvm/include/dmlc/json.h	/^  inline std::string line_info() const {$/;"	f	class:dmlc::JSONReader
list_attr	nnvm/python/nnvm/symbol.py	/^    def list_attr(self, recursive=False):$/;"	m	class:Symbol
list_input_names	nnvm/python/nnvm/symbol.py	/^    def list_input_names(self, option='all'):$/;"	m	class:Symbol
list_input_variables	nnvm/python/nnvm/symbol.py	/^    def list_input_variables(self, option='all'):$/;"	m	class:Symbol
list_output_names	nnvm/python/nnvm/symbol.py	/^    def list_output_names(self):$/;"	m	class:Symbol
load_batch	python/tinyflow/datasets.py	/^def load_batch(fpath, label_key='labels'):$/;"	f
local	dmlc-core/tracker/dmlc_tracker/submit.py	/^from . import local$/;"	i
lock_	dmlc-core/include/dmlc/concurrency.h	/^  std::atomic_flag lock_;$/;"	m	class:dmlc::Spinlock
logging	dmlc-core/tracker/dmlc_tracker/local.py	/^import logging$/;"	i
logging	dmlc-core/tracker/dmlc_tracker/mpi.py	/^import subprocess, logging$/;"	i
logging	dmlc-core/tracker/dmlc_tracker/ssh.py	/^import os, subprocess, logging$/;"	i
logging	dmlc-core/tracker/dmlc_tracker/submit.py	/^import logging$/;"	i
logging	dmlc-core/tracker/dmlc_tracker/tracker.py	/^import logging$/;"	i
logging	dmlc-core/tracker/dmlc_tracker/yarn.py	/^import logging$/;"	i
lua_abs_index	dmlc-core/include/dmlc/lua.h	/^inline int lua_abs_index(lua_State* L, int index) {$/;"	f	namespace:dmlc::lua_stack
lua_stack	dmlc-core/include/dmlc/lua.h	/^namespace lua_stack {$/;"	n	namespace:dmlc
lua_stack	src/torch/torch_util.h	/^namespace lua_stack {$/;"	n	namespace:dmlc
main	dmlc-core/example/parameter.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/scripts/lint.py	/^def main():$/;"	f
main	dmlc-core/scripts/lint3.py	/^def main():$/;"	f
main	dmlc-core/test/csv_parser_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/dataiter_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/filesys_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/iostream_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/libsvm_parser_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/logging_test.cc	/^int main(void) {$/;"	f
main	dmlc-core/test/parameter_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/recordio_test.cc	/^int main(int argc, char *argv[]) {  $/;"	f
main	dmlc-core/test/registry_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/split_read_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/split_repeat_read_test.cc	/^int main(int argc, char *argv[]) {  $/;"	f
main	dmlc-core/test/split_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/stream_read_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/strtonum_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	dmlc-core/test/unittest/unittest_main.cc	/^int main(int argc, char ** argv) {$/;"	f
main	dmlc-core/tracker/dmlc_tracker/launcher.py	/^def main():$/;"	f
main	dmlc-core/tracker/dmlc_tracker/submit.py	/^def main():$/;"	f
main	dmlc-core/tracker/dmlc_tracker/tracker.py	/^def main():$/;"	f
main	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:ApplicationMaster
main	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:Client
main	nnvm/tests/cpp/op_test.cc	/^int main(int argc, char ** argv) {$/;"	f
main	nnvm/tests/cpp/tuple_test.cc	/^int main(int argc, char ** argv) {$/;"	f
manager	dmlc-core/include/dmlc/parameter.h	/^  ParamManager manager;$/;"	m	struct:dmlc::parameter::ParamManagerSingleton
manager	nnvm/include/dmlc/parameter.h	/^  ParamManager manager;$/;"	m	struct:dmlc::parameter::ParamManagerSingleton
map_	dmlc-core/include/dmlc/json.h	/^  std::map<std::string, Entry> map_;$/;"	m	class:dmlc::JSONObjectReadHelper
map_	nnvm/include/dmlc/json.h	/^  std::map<std::string, Entry> map_;$/;"	m	class:dmlc::JSONObjectReadHelper
master_doc	dmlc-core/doc/conf.py	/^master_doc = 'index'$/;"	v
match_range_	nnvm/src/pass/plan_memory.cc	/^  size_t match_range_;$/;"	m	class:nnvm::pass::__anon7::GraphAllocator	file:
maxNumAttempt	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int maxNumAttempt = 3;$/;"	f	class:ApplicationMaster	file:
max_buffer_size_	dmlc-core/src/io/s3_filesys.cc	/^  size_t max_buffer_size_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
max_capacity_	dmlc-core/include/dmlc/threadediter.h	/^  size_t max_capacity_;$/;"	m	class:dmlc::ThreadedIter
max_error_retry_	dmlc-core/src/io/s3_filesys.cc	/^  int max_error_retry_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
max_index	dmlc-core/src/data/row_block.h	/^  IndexType max_index;$/;"	m	struct:dmlc::data::RowBlockContainer
max_pool	python/tinyflow/nn.py	/^def max_pool(data,$/;"	f
maxcap	dmlc-core/test/unittest/unittest_threaditer.cc	/^  int maxcap;$/;"	m	struct:producer_test::IntProducer	file:
mcurl_	dmlc-core/src/io/s3_filesys.cc	/^  CURL *mcurl_, *ecurl_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
minimize	python/tinyflow/train.py	/^    def minimize(self, obj):$/;"	m	class:AdamOptimizer
minimize	python/tinyflow/train.py	/^    def minimize(self, obj):$/;"	m	class:GradientDescentOptimizer
mnist	example/mnist_lenet.py	/^mnist = get_mnist(flatten=False, onehot=False)$/;"	v
mnist	example/mnist_mlp_auto_shape_inference.py	/^mnist = get_mnist(flatten=True, onehot=False)$/;"	v
mnist	example/mnist_softmax.py	/^mnist = get_mnist(flatten=True, onehot=True)$/;"	v
mnist	example/mnist_softmax_minimum.py	/^mnist = get_mnist(flatten=True, onehot=True)$/;"	v
mpi	dmlc-core/tracker/dmlc_tracker/submit.py	/^from . import mpi$/;"	i
mpi_submit	dmlc-core/tracker/dmlc_tracker/mpi.py	/^    def mpi_submit(nworker, nserver, pass_envs):$/;"	f	function:submit
msg_	dmlc-core/src/config.cc	/^  string msg_;$/;"	m	class:dmlc::TokenizeError	file:
mthread_submit	dmlc-core/tracker/dmlc_tracker/local.py	/^    def mthread_submit(nworker, nserver, envs):$/;"	f	function:submit
multi_value_	dmlc-core/include/dmlc/config.h	/^  const bool multi_value_;$/;"	m	class:dmlc::Config
mutable_input_nodes	nnvm/include/nnvm/graph.h	/^  inline const std::unordered_set<uint32_t>& mutable_input_nodes() const {$/;"	f	class:nnvm::IndexedGraph
mutable_input_nodes_	nnvm/include/nnvm/graph.h	/^  std::unordered_set<uint32_t> mutable_input_nodes_;$/;"	m	class:nnvm::IndexedGraph
mutex	nnvm/src/core/op.cc	/^  std::recursive_mutex mutex;$/;"	m	struct:nnvm::OpManager	file:
mutex_	dmlc-core/include/dmlc/concurrency.h	/^  std::mutex mutex_;$/;"	m	class:dmlc::ConcurrentBlockingQueue
mutex_	dmlc-core/include/dmlc/lua.h	/^  std::mutex mutex_;$/;"	m	class:dmlc::LuaState
mutex_	dmlc-core/include/dmlc/thread_local.h	/^  std::mutex mutex_;$/;"	m	class:dmlc::ThreadLocalStore
mutex_	dmlc-core/include/dmlc/threadediter.h	/^  std::mutex mutex_;$/;"	m	class:dmlc::ThreadedIter
mutex_	nnvm/include/dmlc/thread_local.h	/^  std::mutex mutex_;$/;"	m	class:dmlc::ThreadLocalStore
myproject	nnvm/example/src/operator.cc	/^namespace myproject {$/;"	n	file:
name	dmlc-core/example/parameter.cc	/^  std::string name;$/;"	m	struct:MyParam	file:
name	dmlc-core/include/dmlc/parameter.h	/^  std::string name;$/;"	m	struct:dmlc::ParamFieldInfo
name	dmlc-core/include/dmlc/registry.h	/^  std::string name;$/;"	m	class:dmlc::FunctionRegEntryBase
name	dmlc-core/src/io/filesys.h	/^  std::string name;$/;"	m	struct:dmlc::io::URI
name	dmlc-core/test/parameter_test.cc	/^  std::string name;$/;"	m	struct:Param	file:
name	nnvm/include/dmlc/parameter.h	/^  std::string name;$/;"	m	struct:dmlc::ParamFieldInfo
name	nnvm/include/dmlc/registry.h	/^  std::string name;$/;"	m	class:dmlc::FunctionRegEntryBase
name	nnvm/include/nnvm/node.h	/^  std::string name;$/;"	m	struct:nnvm::NodeAttrs
name	nnvm/include/nnvm/op.h	/^  std::string name;$/;"	m	class:nnvm::Op
name	nnvm/python/setup.py	/^    name='nnvm',$/;"	v
name	src/op_nn.cc	/^  std::string name;$/;"	m	struct:tinyflow::BatchNormalizationParam	file:
name_	dmlc-core/include/dmlc/parameter.h	/^  std::string name_;$/;"	m	class:dmlc::parameter::ParamManager
name_	nnvm/include/dmlc/parameter.h	/^  std::string name_;$/;"	m	class:dmlc::parameter::ParamManager
name_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  std::string name_;$/;"	m	class:nnvm::fusion::VariableAST
name_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^  std::string name_;$/;"	m	class:nnvm::fusion::RTC
namedtuple	python/tinyflow/datasets.py	/^from collections import namedtuple$/;"	i
namenode_	dmlc-core/src/io/hdfs_filesys.h	/^  std::string namenode_;$/;"	m	class:dmlc::io::HDFSFileSystem
ndim	nnvm/include/nnvm/tuple.h	/^  inline index_t ndim() const {$/;"	f	class:nnvm::Tuple
next_batch	python/tinyflow/datasets.py	/^    def next_batch(self, batch_size):$/;"	m	class:ArrayPacker
nleft	dmlc-core/src/io/s3_filesys.cc	/^  size_t nleft;$/;"	m	struct:dmlc::io::s3::ReadStringStream	file:
nmClient	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private NMClientAsync nmClient = null;$/;"	f	class:ApplicationMaster	file:
nn	python/tinyflow/__init__.py	/^from . import nn$/;"	i
nn_float	python/tinyflow/_session.py	/^nn_float = _ctypes.c_float$/;"	v
nn_uint	nnvm/include/nnvm/c_api.h	/^typedef unsigned int nn_uint;$/;"	t
nn_uint	nnvm/python/nnvm/_base.py	/^nn_uint = ctypes.c_uint$/;"	v
nn_uint	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
nn_uint	nnvm/python/nnvm/graph.py	/^from ._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
nn_uint	python/tinyflow/_session.py	/^from nnvm._base import c_str, check_call, _LIB, c_array, nn_uint$/;"	i
nnvm	nnvm/include/nnvm/base.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/graph.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/graph_attr_types.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/node.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/op.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/op_attr_types.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/pass.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/pass_functions.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/symbolic.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/include/nnvm/tuple.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/base.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/plugin/nnvm-fusion/src/codegen.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/plugin/nnvm-fusion/src/fusion.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/plugin/nnvm-fusion/src/internal.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/core/graph.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/core/node.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/core/op.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/core/pass.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/core/symbolic.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/pass/gradient.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/pass/graph_algorithm.h	/^namespace nnvm {$/;"	n
nnvm	nnvm/src/pass/infer_shape_type.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/pass/order_mutation.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/pass/place_device.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/pass/plan_memory.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/src/pass/saveload_json.cc	/^namespace nnvm {$/;"	n	file:
nnvm	nnvm/tests/python/test_gradient.py	/^import nnvm.graph as graph$/;"	i
nnvm	nnvm/tests/python/test_gradient.py	/^import nnvm.symbol as sym$/;"	i
nnvm	nnvm/tests/python/test_graph.py	/^import nnvm.graph as graph$/;"	i
nnvm	nnvm/tests/python/test_graph.py	/^import nnvm.symbol as sym$/;"	i
nnvm	nnvm/tests/python/test_symbol.py	/^import nnvm.symbol as sym$/;"	i
no_bias	src/op_nn.cc	/^  bool no_bias;$/;"	m	struct:tinyflow::ConvPoolParam	file:
no_bias	src/op_nn.cc	/^  bool no_bias;$/;"	m	struct:tinyflow::LinearParam	file:
node	nnvm/include/nnvm/node.h	/^  NodePtr node;$/;"	m	struct:nnvm::NodeEntry
node	nnvm/src/pass/saveload_json.cc	/^  NodePtr node;$/;"	m	struct:nnvm::pass::__anon5::JSONNode	file:
node2index_	nnvm/include/nnvm/graph.h	/^  std::unordered_map<const nnvm::Node*, uint32_t> node2index_;$/;"	m	class:nnvm::IndexedGraph
node_color_	nnvm/src/pass/plan_memory.cc	/^  std::vector<uint32_t> node_color_;$/;"	m	class:nnvm::pass::__anon7::GraphAllocator	file:
node_id	nnvm/include/nnvm/graph.h	/^    uint32_t node_id;$/;"	m	struct:nnvm::IndexedGraph::NodeEntry
node_id	nnvm/include/nnvm/graph.h	/^  inline uint32_t node_id(const nnvm::Node* node) const {$/;"	f	class:nnvm::IndexedGraph
node_id	nnvm/src/pass/saveload_json.cc	/^    uint32_t node_id;$/;"	m	struct:nnvm::pass::__anon5::JSONNode::Entry	file:
node_row_ptr	nnvm/src/pass/saveload_json.cc	/^  std::vector<uint32_t> node_row_ptr;$/;"	m	struct:nnvm::pass::__anon5::JSONGraph	file:
node_states_	src/session.cc	/^  std::vector<VarState*> node_states_;$/;"	m	class:tinyflow::TorchExecutor	file:
nodes	nnvm/src/pass/saveload_json.cc	/^  std::vector<JSONNode> nodes;$/;"	m	struct:nnvm::pass::__anon5::JSONGraph	file:
nodes_	nnvm/include/nnvm/graph.h	/^  std::vector<Node> nodes_;$/;"	m	class:nnvm::IndexedGraph
noexcept	dmlc-core/include/dmlc/base.h	177;"	d
noexcept	dmlc-core/include/dmlc/concurrency.h	/^inline void Spinlock::lock() noexcept(true) {$/;"	f	namespace:dmlc
noexcept	dmlc-core/include/dmlc/concurrency.h	/^inline void Spinlock::unlock() noexcept(true) {$/;"	f	namespace:dmlc
noexcept	nnvm/include/dmlc/base.h	177;"	d
noexcept_false	dmlc-core/include/dmlc/base.h	176;"	d
noexcept_false	nnvm/include/dmlc/base.h	176;"	d
noexcept_true	dmlc-core/include/dmlc/base.h	175;"	d
noexcept_true	nnvm/include/dmlc/base.h	175;"	d
normal	python/tinyflow/_ops.py	/^def normal(shape, stdev=1.0):$/;"	f
np	example/cifar_resnet.py	/^import numpy as np$/;"	i
np	nnvm/python/nnvm/_base.py	/^import numpy as np$/;"	i
np	python/tinyflow/_session.py	/^import numpy as np$/;"	i
np	python/tinyflow/datasets.py	/^import numpy as np$/;"	i
np	tests/python/test_gradients.py	/^import numpy as np$/;"	i
np	tests/python/test_ops.py	/^import numpy as np$/;"	i
np	tests/python/test_states.py	/^import numpy as np$/;"	i
nthread_	dmlc-core/src/data/text_parser.h	/^  int nthread_;$/;"	m	class:dmlc::data::TextParserBase
numServer	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int numServer = 0;$/;"	f	class:ApplicationMaster	file:
numTasks	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int numTasks;$/;"	f	class:ApplicationMaster	file:
numWorker	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int numWorker = 1;$/;"	f	class:ApplicationMaster	file:
num_batch	example/cifar_resnet.py	/^num_batch  = 600$/;"	v
num_batch	example/mnist_lenet.py	/^    num_batch = 600$/;"	v
num_batch	example/mnist_mlp_auto_shape_inference.py	/^    num_batch = 600$/;"	v
num_col_	dmlc-core/src/data/disk_row_iter.h	/^  size_t num_col_;$/;"	m	class:dmlc::data::DiskRowIter
num_data	dmlc-core/test/parameter_test.cc	/^  int num_data;$/;"	m	struct:SecondParam	file:
num_epoch	example/cifar_resnet.py	/^num_epoch  = 10$/;"	v
num_filter	src/op_nn.cc	/^  uint32_t num_filter;$/;"	m	struct:tinyflow::ConvPoolParam	file:
num_hidden	dmlc-core/example/parameter.cc	/^  int num_hidden;$/;"	m	struct:MyParam	file:
num_hidden	dmlc-core/test/parameter_test.cc	/^  int num_hidden;$/;"	m	struct:Param	file:
num_hidden	src/op_nn.cc	/^  uint32_t num_hidden;$/;"	m	struct:tinyflow::LinearParam	file:
num_inputs	nnvm/include/nnvm/node.h	/^inline uint32_t Node::num_inputs() const {$/;"	f	class:nnvm::Node
num_inputs	nnvm/include/nnvm/op.h	/^  uint32_t num_inputs = 1;$/;"	m	class:nnvm::Op
num_node_entries	nnvm/include/nnvm/graph.h	/^  inline size_t num_node_entries() const {$/;"	f	class:nnvm::IndexedGraph
num_nodes	nnvm/include/nnvm/graph.h	/^  inline size_t num_nodes() const {$/;"	f	class:nnvm::IndexedGraph
num_outputs	nnvm/include/nnvm/node.h	/^inline uint32_t Node::num_outputs() const {$/;"	f	class:nnvm::Node
num_outputs	nnvm/include/nnvm/op.h	/^  uint32_t num_outputs = 1;$/;"	m	class:nnvm::Op
numeric_types	nnvm/python/nnvm/_base.py	/^    numeric_types = (float, int, long, np.float32, np.int32)$/;"	v
numeric_types	nnvm/python/nnvm/_base.py	/^    numeric_types = (float, int, np.float32, np.int32)$/;"	v
nwait_consumer_	dmlc-core/include/dmlc/concurrency.h	/^  int nwait_consumer_;$/;"	m	class:dmlc::ConcurrentBlockingQueue
nwait_consumer_	dmlc-core/include/dmlc/threadediter.h	/^  unsigned nwait_consumer_;$/;"	m	class:dmlc::ThreadedIter
nwait_producer_	dmlc-core/include/dmlc/threadediter.h	/^  unsigned nwait_producer_;$/;"	m	class:dmlc::ThreadedIter
off64_t	dmlc-core/include/dmlc/base.h	148;"	d
off64_t	nnvm/include/dmlc/base.h	148;"	d
offset	dmlc-core/include/dmlc/data.h	/^  const size_t *offset;$/;"	m	struct:dmlc::RowBlock
offset	dmlc-core/src/data/row_block.h	/^  std::vector<size_t> offset;$/;"	m	struct:dmlc::data::RowBlockContainer
offset_	dmlc-core/include/dmlc/parameter.h	/^  ptrdiff_t offset_;$/;"	m	class:dmlc::parameter::FieldEntryBase
offset_	nnvm/include/dmlc/parameter.h	/^  ptrdiff_t offset_;$/;"	m	class:dmlc::parameter::FieldEntryBase
offset_begin_	dmlc-core/src/io/input_split_base.h	/^  size_t offset_begin_;$/;"	m	class:dmlc::io::InputSplitBase
offset_curr_	dmlc-core/src/io/input_split_base.h	/^  size_t offset_curr_;$/;"	m	class:dmlc::io::InputSplitBase
offset_end_	dmlc-core/src/io/input_split_base.h	/^  size_t offset_end_;$/;"	m	class:dmlc::io::InputSplitBase
omp_get_num_procs	dmlc-core/include/dmlc/omp.h	/^inline int omp_get_num_procs() { return 1; }$/;"	f
omp_get_num_threads	dmlc-core/include/dmlc/omp.h	/^inline int omp_get_num_threads() { return 1; }$/;"	f
omp_get_thread_num	dmlc-core/include/dmlc/omp.h	/^inline int omp_get_thread_num() { return 0; }$/;"	f
omp_set_num_threads	dmlc-core/include/dmlc/omp.h	/^inline void omp_set_num_threads(int nthread) {}$/;"	f
omp_uint	dmlc-core/include/dmlc/omp.h	/^typedef int omp_uint;$/;"	t	namespace:dmlc
omp_ulong	dmlc-core/include/dmlc/omp.h	/^typedef long omp_ulong;  \/\/ NOLINT(*)$/;"	t	namespace:dmlc
onContainerStarted	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onContainerStarted(ContainerId cid,$/;"	m	class:ApplicationMaster.NMCallbackHandler
onContainerStatusReceived	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onContainerStatusReceived(ContainerId cid,$/;"	m	class:ApplicationMaster.NMCallbackHandler
onContainerStopped	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onContainerStopped(ContainerId cid) {$/;"	m	class:ApplicationMaster.NMCallbackHandler
onContainersAllocated	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onContainersAllocated(List<Container> containers) {$/;"	m	class:ApplicationMaster.RMCallbackHandler
onContainersAllocated	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized void onContainersAllocated(List<Container> containers) {$/;"	m	class:ApplicationMaster	file:
onContainersCompleted	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onContainersCompleted(List<ContainerStatus> status) {$/;"	m	class:ApplicationMaster.RMCallbackHandler
onContainersCompleted	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized void onContainersCompleted(List<ContainerStatus> status) {$/;"	m	class:ApplicationMaster	file:
onError	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onError(Throwable ex) {$/;"	m	class:ApplicationMaster.RMCallbackHandler
onGetContainerStatusError	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onGetContainerStatusError(ContainerId cid, Throwable ex) {$/;"	m	class:ApplicationMaster.NMCallbackHandler
onNodesUpdated	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onNodesUpdated(List<NodeReport> nodereport) {$/;"	m	class:ApplicationMaster.RMCallbackHandler
onShutdownRequest	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onShutdownRequest() {$/;"	m	class:ApplicationMaster.RMCallbackHandler
onStartContainerError	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onStartContainerError(ContainerId cid, Throwable ex) {$/;"	m	class:ApplicationMaster.NMCallbackHandler
onStartContainerError	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized void onStartContainerError(ContainerId cid) {$/;"	m	class:ApplicationMaster	file:
onStopContainerError	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^        public void onStopContainerError(ContainerId cid, Throwable ex) {$/;"	m	class:ApplicationMaster.NMCallbackHandler
op	nnvm/include/nnvm/node.h	/^inline const Op* Node::op() const {$/;"	f	class:nnvm::Node
op_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  char op_;$/;"	m	class:nnvm::fusion::BinaryAST
op_attr_dependency	nnvm/include/nnvm/pass.h	/^  std::vector<std::string> op_attr_dependency;$/;"	m	struct:nnvm::PassFunctionReg
op_exec_modules_	src/session.cc	/^  std::vector<LuaRef> op_exec_modules_;$/;"	m	class:tinyflow::TorchExecutor	file:
op_execs_	src/session.cc	/^  std::vector<FOpExec> op_execs_;$/;"	m	class:tinyflow::TorchExecutor	file:
op_group	nnvm/src/core/op.cc	/^  std::vector<std::unordered_set<std::string> > op_group;$/;"	m	struct:nnvm::OpManager	file:
operator !=	dmlc-core/src/config.cc	/^bool Config::ConfigIterator::operator!=(const Config::ConfigIterator& rhs) const {$/;"	f	class:dmlc::Config::ConfigIterator
operator !=	nnvm/include/nnvm/tuple.h	/^  inline bool operator!=(const TShape &s) const {$/;"	f	class:nnvm::TShape
operator !=	nnvm/include/nnvm/tuple.h	/^  inline bool operator!=(const Tuple<ValueType> &s) const {$/;"	f	class:nnvm::Tuple
operator !=	nnvm/include/nnvm/tuple.h	/^  inline bool operator!=(const mshadow::Shape<dim> &s) const {$/;"	f	class:nnvm::TShape
operator ()	dmlc-core/include/dmlc/lua.h	/^  inline void operator()(const T& v) const {$/;"	f	struct:dmlc::lua_stack::PushArg
operator ()	dmlc-core/include/dmlc/lua.h	/^inline LuaRef LuaRef::operator()(Args&& ...args) const {$/;"	f	class:dmlc::LuaRef
operator ()	nnvm/src/core/symbolic.cc	/^Symbol Symbol::operator () (const array_view<const Symbol*>& args,$/;"	f	class:nnvm::Symbol
operator *	dmlc-core/include/dmlc/memory.h	/^  inline T* operator*() const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator *	dmlc-core/src/config.cc	/^Config::ConfigEntry Config::ConfigIterator::operator * () const {$/;"	f	class:dmlc::Config::ConfigIterator
operator *	nnvm/include/dmlc/memory.h	/^  inline T* operator*() const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator *	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^inline ASTPtr operator*(ASTPtr lhs, ASTPtr rhs) {$/;"	f	namespace:nnvm::fusion
operator +	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^inline ASTPtr operator+(ASTPtr lhs, ASTPtr rhs) {$/;"	f	namespace:nnvm::fusion
operator ++	dmlc-core/src/config.cc	/^Config::ConfigIterator Config::ConfigIterator::operator++(int any) {$/;"	f	class:dmlc::Config::ConfigIterator
operator ++	dmlc-core/src/config.cc	/^Config::ConfigIterator& Config::ConfigIterator::operator++() {$/;"	f	class:dmlc::Config::ConfigIterator
operator -	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^inline ASTPtr operator-(ASTPtr lhs, ASTPtr rhs) {$/;"	f	namespace:nnvm::fusion
operator ->	dmlc-core/include/dmlc/memory.h	/^  inline T* operator->() const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator ->	nnvm/include/dmlc/memory.h	/^  inline T* operator->() const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator /	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^inline ASTPtr operator\/(ASTPtr lhs, ASTPtr rhs) {$/;"	f	namespace:nnvm::fusion
operator <	dmlc-core/include/dmlc/concurrency.h	/^    inline bool operator<(const Entry &b) const {$/;"	f	struct:dmlc::ConcurrentBlockingQueue::Entry
operator <<	dmlc-core/include/dmlc/lua.h	/^std::ostream &operator<<(std::ostream &os, const LuaRef &r) {$/;"	f	namespace:dmlc
operator <<	nnvm/include/nnvm/tuple.h	/^  friend std::ostream &operator<<(std::ostream &os, const Tuple<ValueType> &t) {$/;"	f	class:nnvm::Tuple
operator =	dmlc-core/include/dmlc/any.h	/^inline any& any::operator=(T&& other) {$/;"	f	class:dmlc::any
operator =	dmlc-core/include/dmlc/any.h	/^inline any& any::operator=(any&& other) {$/;"	f	class:dmlc::any
operator =	dmlc-core/include/dmlc/any.h	/^inline any& any::operator=(const any& other) {$/;"	f	class:dmlc::any
operator =	dmlc-core/include/dmlc/lua.h	/^inline LuaRef& LuaRef::operator=(LuaRef&& other) {$/;"	f	class:dmlc::LuaRef
operator =	dmlc-core/include/dmlc/lua.h	/^inline LuaRef& LuaRef::operator=(const LuaRef& other) {$/;"	f	class:dmlc::LuaRef
operator =	dmlc-core/include/dmlc/memory.h	/^  inline ThreadlocalSharedPtr<T> &operator=(const ThreadlocalSharedPtr<T>& other) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator =	dmlc-core/include/dmlc/memory.h	/^  inline ThreadlocalSharedPtr<T>& operator=(ThreadlocalSharedPtr<T>&& other) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator =	nnvm/include/dmlc/any.h	/^inline any& any::operator=(T&& other) {$/;"	f	class:dmlc::any
operator =	nnvm/include/dmlc/any.h	/^inline any& any::operator=(any&& other) {$/;"	f	class:dmlc::any
operator =	nnvm/include/dmlc/any.h	/^inline any& any::operator=(const any& other) {$/;"	f	class:dmlc::any
operator =	nnvm/include/dmlc/memory.h	/^  inline ThreadlocalSharedPtr<T> &operator=(const ThreadlocalSharedPtr<T>& other) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator =	nnvm/include/dmlc/memory.h	/^  inline ThreadlocalSharedPtr<T>& operator=(ThreadlocalSharedPtr<T>&& other) {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator =	nnvm/include/nnvm/tuple.h	/^  inline TShape &operator=(const mshadow::Shape<dim> &shape) {$/;"	f	class:nnvm::TShape
operator =	nnvm/include/nnvm/tuple.h	/^  inline TShape& operator=(Tuple<index_t>&& src) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::TShape
operator =	nnvm/include/nnvm/tuple.h	/^  inline TShape& operator=(const Tuple<index_t>& src) {$/;"	f	class:nnvm::TShape
operator =	nnvm/include/nnvm/tuple.h	/^  inline Tuple<ValueType> &operator=(std::initializer_list<ValueType> init) {$/;"	f	class:nnvm::Tuple
operator =	nnvm/include/nnvm/tuple.h	/^  inline Tuple<ValueType>& operator=(Tuple<ValueType>&& src) {$/;"	f	class:nnvm::Tuple
operator =	nnvm/include/nnvm/tuple.h	/^  inline Tuple<ValueType>& operator=(const Tuple<ValueType>& src) {$/;"	f	class:nnvm::Tuple
operator ==	dmlc-core/include/dmlc/memory.h	/^  inline bool operator==(std::nullptr_t other) const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator ==	dmlc-core/src/config.cc	/^bool Config::ConfigIterator::operator==(const Config::ConfigIterator& rhs) const {$/;"	f	class:dmlc::Config::ConfigIterator
operator ==	dmlc-core/test/unittest/unittest_json.cc	/^  inline bool operator==(const MyClass &other) const {$/;"	f	class:json::MyClass
operator ==	dmlc-core/test/unittest/unittest_serializer.cc	/^  inline bool operator==(const MyClass &other) const {$/;"	f	class:MyClass
operator ==	dmlc-core/test/unittest/unittest_serializer.cc	/^  inline bool operator==(const Param &other) const {$/;"	f	struct:Param
operator ==	nnvm/include/dmlc/memory.h	/^  inline bool operator==(std::nullptr_t other) const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
operator ==	nnvm/include/nnvm/tuple.h	/^  inline bool operator==(const TShape &s) const {$/;"	f	class:nnvm::TShape
operator ==	nnvm/include/nnvm/tuple.h	/^  inline bool operator==(const Tuple<ValueType> &s) const {$/;"	f	class:nnvm::Tuple
operator ==	nnvm/include/nnvm/tuple.h	/^  inline bool operator==(const mshadow::Shape<dim> &s) const {$/;"	f	class:nnvm::TShape
operator >>	nnvm/include/nnvm/tuple.h	/^  friend std::istream &operator>>(std::istream &is, Tuple<ValueType> &t) {$/;"	f	class:nnvm::Tuple
operator []	dmlc-core/include/dmlc/array_view.h	/^  inline const ValueType& operator[](size_t i) const {$/;"	f	class:dmlc::array_view
operator []	dmlc-core/include/dmlc/data.h	/^RowBlock<IndexType>::operator[](size_t rowid) const {$/;"	f	class:dmlc::RowBlock
operator []	dmlc-core/include/dmlc/lua.h	/^inline LuaRef LuaRef::operator[](const std::string& key) const {$/;"	f	class:dmlc::LuaRef
operator []	dmlc-core/include/dmlc/lua.h	/^inline LuaRef LuaRef::operator[](size_t index) const {$/;"	f	class:dmlc::LuaRef
operator []	dmlc-core/include/dmlc/lua.h	/^inline LuaRef LuaState::operator[](const std::string& key) {$/;"	f	class:dmlc::LuaState
operator []	nnvm/include/dmlc/array_view.h	/^  inline const ValueType& operator[](size_t i) const {$/;"	f	class:dmlc::array_view
operator []	nnvm/include/nnvm/graph.h	/^  inline const Node& operator[](const nnvm::Node* node) const {$/;"	f	class:nnvm::IndexedGraph
operator []	nnvm/include/nnvm/graph.h	/^  inline const Node& operator[](uint32_t node_id) const {$/;"	f	class:nnvm::IndexedGraph
operator []	nnvm/include/nnvm/op.h	/^inline const ValueType& OpMap<ValueType>::operator[](const Op* op) const {$/;"	f	class:nnvm::OpMap
operator []	nnvm/include/nnvm/tuple.h	/^  inline ValueType& operator[](index_t i) {$/;"	f	class:nnvm::Tuple
operator []	nnvm/include/nnvm/tuple.h	/^  inline const ValueType& operator[](index_t i) const {$/;"	f	class:nnvm::Tuple
operator []	nnvm/src/core/symbolic.cc	/^Symbol Symbol::operator[] (size_t index) const {$/;"	f	class:nnvm::Symbol
optional	dmlc-core/include/dmlc/json.h	/^    bool optional;$/;"	m	struct:dmlc::JSONObjectReadHelper::Entry
optional	nnvm/include/dmlc/json.h	/^    bool optional;$/;"	m	struct:dmlc::JSONObjectReadHelper::Entry
opts	dmlc-core/tracker/dmlc_tracker/submit.py	/^from . import opts$/;"	i
opts	dmlc-core/tracker/dmlc_tracker/yarn.py	/^from . import opts$/;"	i
order_	dmlc-core/include/dmlc/config.h	/^  std::vector<std::pair<std::string, size_t> > order_;$/;"	m	class:dmlc::Config
org.apache.hadoop.yarn.dmlc	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^package org.apache.hadoop.yarn.dmlc;$/;"	p
org.apache.hadoop.yarn.dmlc	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^package org.apache.hadoop.yarn.dmlc;$/;"	p
org.apache.hadoop.yarn.dmlc	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^package org.apache.hadoop.yarn.dmlc;$/;"	p
os	dmlc-core/doc/conf.py	/^import os, subprocess$/;"	i
os	dmlc-core/doc/sphinx_util.py	/^import os$/;"	i
os	dmlc-core/scripts/lint.py	/^import os$/;"	i
os	dmlc-core/scripts/lint3.py	/^import os$/;"	i
os	dmlc-core/tracker/dmlc-submit	/^import os$/;"	i
os	dmlc-core/tracker/dmlc_tracker/launcher.py	/^import os$/;"	i
os	dmlc-core/tracker/dmlc_tracker/local.py	/^import os$/;"	i
os	dmlc-core/tracker/dmlc_tracker/opts.py	/^import os$/;"	i
os	dmlc-core/tracker/dmlc_tracker/sge.py	/^import os$/;"	i
os	dmlc-core/tracker/dmlc_tracker/ssh.py	/^import os, subprocess, logging$/;"	i
os	dmlc-core/tracker/dmlc_tracker/tracker.py	/^import os$/;"	i
os	dmlc-core/tracker/dmlc_tracker/yarn.py	/^import os$/;"	i
os	nnvm/python/nnvm/_base.py	/^import os$/;"	i
os	nnvm/python/nnvm/libinfo.py	/^import os$/;"	i
os	nnvm/python/setup.py	/^import os$/;"	i
os	python/tinyflow/_base.py	/^import os$/;"	i
os	python/tinyflow/datasets.py	/^import os$/;"	i
os_	dmlc-core/include/dmlc/json.h	/^  std::ostream *os_;$/;"	m	class:dmlc::JSONWriter
os_	nnvm/include/dmlc/json.h	/^  std::ostream *os_;$/;"	m	class:dmlc::JSONWriter
ostream	dmlc-core/include/dmlc/io.h	/^  explicit ostream(Stream *stream,$/;"	f	class:dmlc::ostream
ostream	dmlc-core/include/dmlc/io.h	/^class ostream : public std::basic_ostream<char> {$/;"	c	namespace:dmlc
other	dmlc-core/include/dmlc/array_view.h	/^  array_view(array_view<ValueType>&& other) = default; \/\/ NOLINT(*)$/;"	m	class:dmlc::array_view
other	dmlc-core/include/dmlc/array_view.h	/^  array_view(const array_view<ValueType> &other) = default;  \/\/ NOLINT(*)$/;"	m	class:dmlc::array_view
other	dmlc-core/include/dmlc/array_view.h	/^  array_view<ValueType>& operator=(const array_view<ValueType>& other) = default; \/\/ NOLINT(*)$/;"	m	class:dmlc::array_view
other	nnvm/include/dmlc/array_view.h	/^  array_view(array_view<ValueType>&& other) = default; \/\/ NOLINT(*)$/;"	m	class:dmlc::array_view
other	nnvm/include/dmlc/array_view.h	/^  array_view(const array_view<ValueType> &other) = default;  \/\/ NOLINT(*)$/;"	m	class:dmlc::array_view
other	nnvm/include/dmlc/array_view.h	/^  array_view<ValueType>& operator=(const array_view<ValueType>& other) = default; \/\/ NOLINT(*)$/;"	m	class:dmlc::array_view
out_data_	dmlc-core/include/dmlc/threadediter.h	/^  DType *out_data_;$/;"	m	class:dmlc::ThreadedIter
output_blobs_	src/session.cc	/^  std::vector<TBlob> output_blobs_;$/;"	m	class:tinyflow::TorchExecutor	file:
outputs	nnvm/include/nnvm/graph.h	/^  inline const std::vector<NodeEntry>& outputs() const {$/;"	f	class:nnvm::IndexedGraph
outputs	nnvm/include/nnvm/graph.h	/^  std::vector<NodeEntry> outputs;$/;"	m	class:nnvm::Graph
outputs	nnvm/include/nnvm/symbolic.h	/^  std::vector<NodeEntry> outputs;$/;"	m	class:nnvm::Symbol
outputs_	nnvm/include/nnvm/graph.h	/^  std::vector<NodeEntry> outputs_;$/;"	m	class:nnvm::IndexedGraph
outputs_	src/session.cc	/^  std::vector<LuaRef> outputs_;$/;"	m	class:tinyflow::TorchExecutor	file:
overflow	dmlc-core/include/dmlc/io.h	/^inline int ostream::OutBuf::overflow(int c) {$/;"	f	class:dmlc::ostream::OutBuf
overflow_	dmlc-core/src/io/input_split_base.h	/^  std::string overflow_;$/;"	m	class:dmlc::io::InputSplitBase
overflow_	dmlc-core/src/io/single_file_split.h	/^  std::string overflow_;$/;"	m	class:dmlc::io::SingleFileSplit
override	src/session.cc	/^      const std::unordered_map<std::string, TBlob>& inputs) override;$/;"	m	class:tinyflow::TorchSession	file:
p_buffer_	dmlc-core/include/dmlc/memory_io.h	/^  char *p_buffer_;$/;"	m	struct:dmlc::MemoryFixedSizeStream
p_buffer_	dmlc-core/include/dmlc/memory_io.h	/^  std::string *p_buffer_;$/;"	m	struct:dmlc::MemoryStringStream
pad	src/op_nn.cc	/^  int pad;$/;"	m	struct:tinyflow::PadParam	file:
padding	src/op_nn.cc	/^  std::string padding;$/;"	m	struct:tinyflow::ConvPoolParam	file:
param_	dmlc-core/src/data/csv_parser.h	/^  CSVParserParam param_;$/;"	m	class:dmlc::data::CSVParser
parameter	dmlc-core/include/dmlc/parameter.h	/^namespace parameter {$/;"	n	namespace:dmlc
parameter	nnvm/include/dmlc/parameter.h	/^namespace parameter {$/;"	n	namespace:dmlc
parsed	nnvm/include/nnvm/node.h	/^  any parsed;$/;"	m	struct:nnvm::NodeAttrs
parser	dmlc-core/doc/sphinx_util.py	/^from recommonmark import parser, transform$/;"	i
part_ids_	dmlc-core/src/io/s3_filesys.cc	/^  std::vector<size_t> part_ids_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
pass	nnvm/include/nnvm/pass_functions.h	/^namespace pass {$/;"	n	namespace:nnvm
pass	nnvm/src/pass/gradient.cc	/^namespace pass {$/;"	n	namespace:nnvm	file:
pass	nnvm/src/pass/graph_algorithm.h	/^namespace pass {$/;"	n	namespace:nnvm
pass	nnvm/src/pass/infer_shape_type.cc	/^namespace pass {$/;"	n	namespace:nnvm	file:
pass	nnvm/src/pass/order_mutation.cc	/^namespace pass {$/;"	n	namespace:nnvm	file:
pass	nnvm/src/pass/place_device.cc	/^namespace pass {$/;"	n	namespace:nnvm	file:
pass	nnvm/src/pass/plan_memory.cc	/^namespace pass {$/;"	n	namespace:nnvm	file:
pass	nnvm/src/pass/saveload_json.cc	/^namespace pass {$/;"	n	namespace:nnvm	file:
path	dmlc-core/src/io/filesys.h	/^  URI path;$/;"	m	struct:dmlc::io::FileInfo
path_	dmlc-core/src/io/s3_filesys.cc	/^  URI path_;$/;"	m	class:dmlc::io::s3::HttpReadStream	file:
path_	dmlc-core/src/io/s3_filesys.cc	/^  URI path_;$/;"	m	class:dmlc::io::s3::ReadStream	file:
path_	dmlc-core/src/io/s3_filesys.cc	/^  URI path_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
pbegin_	dmlc-core/include/dmlc/recordio.h	/^  char *pbegin_, *pend_;$/;"	m	class:dmlc::RecordIOChunkReader
pend_	dmlc-core/include/dmlc/recordio.h	/^  char *pbegin_, *pend_;$/;"	m	class:dmlc::RecordIOChunkReader
pendingTasks	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private final Queue<TaskRecord> pendingTasks = new java.util.LinkedList<TaskRecord>();$/;"	f	class:ApplicationMaster	file:
permTemp	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private static final FsPermission permTemp = new FsPermission("777");$/;"	f	class:Client	file:
pheap	dmlc-core/include/dmlc/any.h	/^    void* pheap;$/;"	m	union:dmlc::any::Data
pheap	nnvm/include/dmlc/any.h	/^    void* pheap;$/;"	m	union:dmlc::any::Data
placeholder	python/tinyflow/_base.py	/^def placeholder(dtype, shape=None, name=None):$/;"	f
placeholder_nids_	src/session.cc	/^  std::vector<uint32_t> placeholder_nids_;$/;"	m	class:tinyflow::TorchExecutor	file:
placeholder_tblobs_	src/session.cc	/^  std::vector<TBlob> placeholder_tblobs_;$/;"	m	class:tinyflow::TorchExecutor	file:
platform	dmlc-core/tracker/dmlc_tracker/yarn.py	/^import platform$/;"	i
platform	nnvm/python/nnvm/libinfo.py	/^import platform$/;"	i
pointer	dmlc-core/include/dmlc/memory.h	/^  typedef T* pointer;$/;"	t	class:dmlc::ThreadlocalAllocator
pointer	nnvm/include/dmlc/memory.h	/^  typedef T* pointer;$/;"	t	class:dmlc::ThreadlocalAllocator
pool1	example/cifar_resnet.py	/^pool1 = tf.nn.avg_pool(res, ksize=[1, 4, 4, 1], strides=[1, 2, 2, 1], padding='SAME', data_format='NCHW')$/;"	v
pool1	example/mnist_lenet.py	/^pool1 = tf.nn.max_pool(tanh1, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1])$/;"	v
pool2	example/mnist_lenet.py	/^pool2 = tf.nn.max_pool(tanh2, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1])$/;"	v
print_function	dmlc-core/scripts/lint.py	/^from __future__ import print_function$/;"	i
print_period	example/mnist_lenet.py	/^print_period = 1000$/;"	v
print_period	example/mnist_mlp_auto_shape_inference.py	/^print_period = 1000$/;"	v
print_summary	dmlc-core/scripts/lint.py	/^    def print_summary(self, strm):$/;"	m	class:LintHelper
print_summary	dmlc-core/scripts/lint3.py	/^    def print_summary(self, strm):$/;"	m	class:LintHelper
priority	dmlc-core/include/dmlc/concurrency.h	/^    int priority;$/;"	m	struct:dmlc::ConcurrentBlockingQueue::Entry
priority_queue_	dmlc-core/include/dmlc/concurrency.h	/^  std::vector<Entry> priority_queue_;$/;"	m	class:dmlc::ConcurrentBlockingQueue
process	dmlc-core/scripts/lint.py	/^def process(fname, allow_type):$/;"	f
process	dmlc-core/scripts/lint3.py	/^def process(fname, allow_type):$/;"	f
process_cpp	dmlc-core/scripts/lint.py	/^    def process_cpp(self, path, suffix):$/;"	m	class:LintHelper
process_cpp	dmlc-core/scripts/lint3.py	/^    def process_cpp(self, path, suffix):$/;"	m	class:LintHelper
process_python	dmlc-core/scripts/lint.py	/^    def process_python(self, path):$/;"	m	class:LintHelper
process_python	dmlc-core/scripts/lint3.py	/^    def process_python(self, path):$/;"	m	class:LintHelper
produce_end_	dmlc-core/include/dmlc/threadediter.h	/^  bool produce_end_;$/;"	m	class:dmlc::ThreadedIter
producer_cond_	dmlc-core/include/dmlc/threadediter.h	/^  std::condition_variable producer_cond_;$/;"	m	class:dmlc::ThreadedIter
producer_owned_	dmlc-core/include/dmlc/threadediter.h	/^  Producer *producer_owned_;$/;"	m	class:dmlc::ThreadedIter
producer_sig_	dmlc-core/include/dmlc/threadediter.h	/^  Signal producer_sig_;$/;"	m	class:dmlc::ThreadedIter
producer_sig_processed_	dmlc-core/include/dmlc/threadediter.h	/^  bool producer_sig_processed_;$/;"	m	class:dmlc::ThreadedIter
producer_test	dmlc-core/test/unittest/unittest_threaditer.cc	/^namespace producer_test {$/;"	n	file:
producer_thread_	dmlc-core/include/dmlc/threadediter.h	/^  std::thread *producer_thread_;$/;"	m	class:dmlc::ThreadedIter
project	dmlc-core/doc/conf.py	/^project = u'dmlc-core'$/;"	v
protocol	dmlc-core/src/io/filesys.h	/^  std::string protocol;$/;"	m	struct:dmlc::io::URI
provide_graph_attr	nnvm/include/nnvm/pass.h	/^  PassFunctionReg& provide_graph_attr(const std::string& attr_name) {  \/\/ NOLINT(*)$/;"	f	struct:nnvm::PassFunctionReg
ptx_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^  char* ptx_;$/;"	m	class:nnvm::fusion::RTC
ptype_info	dmlc-core/include/dmlc/any.h	/^    const std::type_info* ptype_info;$/;"	m	struct:dmlc::any::Type
ptype_info	nnvm/include/dmlc/any.h	/^    const std::type_info* ptype_info;$/;"	m	struct:dmlc::any::Type
py_str	nnvm/python/nnvm/_base.py	/^    py_str = lambda x: x$/;"	v
py_str	nnvm/python/nnvm/_base.py	/^    py_str = lambda x: x.decode('utf-8')$/;"	v
py_str	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
py_str	nnvm/python/nnvm/graph.py	/^from ._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
pygments_style	dmlc-core/doc/conf.py	/^pygments_style = 'sphinx'$/;"	v
queue	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private String queue = "default";$/;"	f	class:Client	file:
queue_	dmlc-core/include/dmlc/threadediter.h	/^  std::queue<DType*> queue_;$/;"	m	class:dmlc::ThreadedIter
re	dmlc-core/scripts/lint.py	/^import re$/;"	i
re	dmlc-core/scripts/lint3.py	/^import re$/;"	i
read	dmlc-core/include/dmlc/json.h	/^    void (*read)(JSONReader* reader, any *data);$/;"	m	struct:dmlc::json::AnyJSONManager::Entry
read	nnvm/include/dmlc/json.h	/^    void (*read)(JSONReader* reader, any *data);$/;"	m	struct:dmlc::json::AnyJSONManager::Entry
read_ptr_	dmlc-core/src/io/s3_filesys.cc	/^  size_t read_ptr_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
read_var_nids_	src/session.cc	/^  std::vector<uint32_t> read_var_nids_;$/;"	m	class:tinyflow::TorchExecutor	file:
real_t	dmlc-core/include/dmlc/data.h	/^typedef float real_t;$/;"	t	namespace:dmlc
recvall	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def recvall(self, nbytes):$/;"	m	class:ExSocket
recvint	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def recvint(self):$/;"	m	class:ExSocket
recvstr	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def recvstr(self):$/;"	m	class:ExSocket
reduction_indices	src/op_tensor.cc	/^  Tuple<int> reduction_indices;$/;"	m	struct:tinyflow::ReduceParam	file:
ref_	dmlc-core/include/dmlc/lua.h	/^  int ref_;$/;"	m	class:dmlc::LuaRef
ref_counter_	dmlc-core/src/io/hdfs_filesys.cc	/^  int *ref_counter_;$/;"	m	class:dmlc::io::HDFSStream	file:
ref_counter_	dmlc-core/src/io/hdfs_filesys.h	/^  int *ref_counter_;$/;"	m	class:dmlc::io::HDFSFileSystem
release	dmlc-core/doc/conf.py	/^release = version$/;"	v
relu1	example/mnist_mlp_auto_shape_inference.py	/^relu1 = tf.nn.relu(fc1)$/;"	v
res	example/cifar_resnet.py	/^res = resnet(tanh1, 1, 16, 64)$/;"	v
reset	dmlc-core/include/dmlc/memory.h	/^  inline void reset() {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
reset	nnvm/include/dmlc/memory.h	/^  inline void reset() {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
residual_factory	example/cifar_resnet.py	/^def residual_factory(x, in_filters, out_filters):$/;"	f
resnet	example/cifar_resnet.py	/^def resnet(x, n, in_filters, out_filters):$/;"	f
ret_handles	nnvm/src/c_api/c_api_common.h	/^  std::vector<void *> ret_handles;$/;"	m	struct:NNAPIThreadLocalEntry
ret_str	nnvm/src/c_api/c_api_common.h	/^  std::string ret_str;$/;"	m	struct:NNAPIThreadLocalEntry
ret_vec_charp	nnvm/src/c_api/c_api_common.h	/^  std::vector<const char *> ret_vec_charp;$/;"	m	struct:NNAPIThreadLocalEntry
ret_vec_str	nnvm/src/c_api/c_api_common.h	/^  std::vector<std::string> ret_vec_str;$/;"	m	struct:NNAPIThreadLocalEntry
return_type	dmlc-core/include/dmlc/registry.h	/^  std::string return_type;$/;"	m	class:dmlc::FunctionRegEntryBase
return_type	nnvm/include/dmlc/registry.h	/^  std::string return_type;$/;"	m	class:dmlc::FunctionRegEntryBase
rhs_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  ASTPtr lhs_, rhs_;$/;"	m	class:nnvm::fusion::ArraySubscriptAST
rhs_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  ASTPtr lhs_, rhs_;$/;"	m	class:nnvm::fusion::BinaryAST
rmClient	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private AMRMClientAsync<ContainerRequest> rmClient = null;$/;"	f	class:ApplicationMaster	file:
row_	dmlc-core/src/data/basic_row_iter.h	/^  RowBlock<IndexType> row_;$/;"	m	class:dmlc::data::BasicRowIter
row_	dmlc-core/src/data/disk_row_iter.h	/^  RowBlock<IndexType> row_;$/;"	m	class:dmlc::data::DiskRowIter
run	dmlc-core/include/dmlc/lua.h	/^  static inline void run(const std::tuple<Args...>& args, F f) {$/;"	f	struct:dmlc::for_each_dispatcher_
run	dmlc-core/tracker/dmlc_tracker/mpi.py	/^        def run(prog):$/;"	f	function:submit.mpi_submit
run	dmlc-core/tracker/dmlc_tracker/ssh.py	/^        def run(prog):$/;"	f	function:submit.ssh_submit
run	dmlc-core/tracker/dmlc_tracker/tracker.py	/^        def run():$/;"	f	function:RabitTracker.start
run	dmlc-core/tracker/dmlc_tracker/yarn.py	/^    def run():$/;"	f	function:yarn_submit
run	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private void run(String args[]) throws Exception {$/;"	m	class:ApplicationMaster	file:
run	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private void run(String[] args) throws Exception {$/;"	m	class:Client	file:
run	python/tinyflow/_session.py	/^    def run(self, fetch, feed_dict=None):$/;"	m	class:Session
run_doxygen	dmlc-core/doc/conf.py	/^def run_doxygen(folder):$/;"	f
runningTasks	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private final Map<ContainerId, TaskRecord> runningTasks = new java.util.HashMap<ContainerId, TaskRecord>();$/;"	f	class:ApplicationMaster	file:
s3	dmlc-core/src/io/s3_filesys.cc	/^namespace s3 {$/;"	n	namespace:dmlc::io	file:
scalars	nnvm/include/nnvm/node.h	/^  std::vector<double> scalars;$/;"	m	struct:nnvm::NodeAttrs
scope_counter_	dmlc-core/include/dmlc/json.h	/^  std::vector<size_t> scope_counter_;$/;"	m	class:dmlc::JSONReader
scope_counter_	dmlc-core/include/dmlc/json.h	/^  std::vector<size_t> scope_counter_;$/;"	m	class:dmlc::JSONWriter
scope_counter_	nnvm/include/dmlc/json.h	/^  std::vector<size_t> scope_counter_;$/;"	m	class:dmlc::JSONReader
scope_counter_	nnvm/include/dmlc/json.h	/^  std::vector<size_t> scope_counter_;$/;"	m	class:dmlc::JSONWriter
scope_multi_line_	dmlc-core/include/dmlc/json.h	/^  std::vector<bool> scope_multi_line_;$/;"	m	class:dmlc::JSONWriter
scope_multi_line_	nnvm/include/dmlc/json.h	/^  std::vector<bool> scope_multi_line_;$/;"	m	class:dmlc::JSONWriter
seek_stream_	dmlc-core/include/dmlc/recordio.h	/^  SeekStream *seek_stream_;$/;"	m	class:dmlc::RecordIOReader
seek_stream_	dmlc-core/include/dmlc/recordio.h	/^  SeekStream *seek_stream_;$/;"	m	class:dmlc::RecordIOWriter
self	dmlc-core/include/dmlc/parameter.h	/^  inline TEntry &self() {$/;"	f	class:dmlc::parameter::FieldEntryBase
self	dmlc-core/include/dmlc/registry.h	/^  inline EntryType &self() {$/;"	f	class:dmlc::FunctionRegEntryBase
self	nnvm/include/dmlc/parameter.h	/^  inline TEntry &self() {$/;"	f	class:dmlc::parameter::FieldEntryBase
self	nnvm/include/dmlc/registry.h	/^  inline EntryType &self() {$/;"	f	class:dmlc::FunctionRegEntryBase
sendint	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def sendint(self, n):$/;"	m	class:ExSocket
sendstr	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def sendstr(self, s):$/;"	m	class:ExSocket
serializer	dmlc-core/include/dmlc/serializer.h	/^namespace serializer {$/;"	n	namespace:dmlc
serverCores	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int serverCores = 1;$/;"	f	class:ApplicationMaster	file:
serverMemoryMB	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int serverMemoryMB = 10;$/;"	f	class:ApplicationMaster	file:
sess	example/cifar_resnet.py	/^sess = tf.Session(config='gpu')$/;"	v
sess	example/mnist_lenet.py	/^sess = tf.Session(config='gpu')$/;"	v
sess	example/mnist_mlp_auto_shape_inference.py	/^sess = tf.Session(config='gpu')$/;"	v
sess	example/mnist_softmax.py	/^sess = tf.Session()$/;"	v
sess	example/mnist_softmax_minimum.py	/^sess = tf.Session()$/;"	v
set_attr	nnvm/include/nnvm/op.h	/^inline Op& Op::set_attr(  \/\/ NOLINT(*)$/;"	f	class:nnvm::Op
set_attr	nnvm/include/nnvm/op.h	/^inline OpGroup& OpGroup::set_attr(const std::string& attr_name,$/;"	f	class:nnvm::OpGroup
set_attr_parser	nnvm/include/nnvm/op.h	/^inline Op& Op::set_attr_parser(std::function<void (NodeAttrs* attrs)> fn) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::Op
set_body	dmlc-core/include/dmlc/registry.h	/^  inline EntryType &set_body(FunctionType body) {$/;"	f	class:dmlc::FunctionRegEntryBase
set_body	nnvm/include/dmlc/registry.h	/^  inline EntryType &set_body(FunctionType body) {$/;"	f	class:dmlc::FunctionRegEntryBase
set_change_graph	nnvm/include/nnvm/pass.h	/^  PassFunctionReg& set_change_graph(bool v) {  \/\/ NOLINT(*)$/;"	f	struct:nnvm::PassFunctionReg
set_default	dmlc-core/include/dmlc/parameter.h	/^  inline TEntry &set_default(const DType &default_value) {$/;"	f	class:dmlc::parameter::FieldEntryBase
set_default	nnvm/include/dmlc/parameter.h	/^  inline TEntry &set_default(const DType &default_value) {$/;"	f	class:dmlc::parameter::FieldEntryBase
set_lower_bound	dmlc-core/include/dmlc/parameter.h	/^  virtual TEntry &set_lower_bound(DType begin) {$/;"	f	class:dmlc::parameter::FieldEntryNumeric
set_lower_bound	nnvm/include/dmlc/parameter.h	/^  virtual TEntry &set_lower_bound(DType begin) {$/;"	f	class:dmlc::parameter::FieldEntryNumeric
set_max_capacity	dmlc-core/include/dmlc/threadediter.h	/^  inline void set_max_capacity(size_t max_capacity) {$/;"	f	class:dmlc::ThreadedIter
set_name	dmlc-core/include/dmlc/parameter.h	/^  inline void set_name(const std::string &name) {$/;"	f	class:dmlc::parameter::ParamManager
set_name	nnvm/include/dmlc/parameter.h	/^  inline void set_name(const std::string &name) {$/;"	f	class:dmlc::parameter::ParamManager
set_num_inputs	nnvm/include/nnvm/op.h	/^inline Op& Op::set_num_inputs(std::function<uint32_t (const NodeAttrs& attr)> fn) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::Op
set_num_inputs	nnvm/include/nnvm/op.h	/^inline Op& Op::set_num_inputs(uint32_t n) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::Op
set_num_outputs	nnvm/include/nnvm/op.h	/^inline Op& Op::set_num_outputs(std::function<uint32_t (const NodeAttrs& attr)> fn) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::Op
set_num_outputs	nnvm/include/nnvm/op.h	/^inline Op& Op::set_num_outputs(uint32_t n) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::Op
set_range	dmlc-core/include/dmlc/parameter.h	/^  virtual TEntry &set_range(DType begin, DType end) {$/;"	f	class:dmlc::parameter::FieldEntryNumeric
set_range	nnvm/include/dmlc/parameter.h	/^  virtual TEntry &set_range(DType begin, DType end) {$/;"	f	class:dmlc::parameter::FieldEntryNumeric
set_return_type	dmlc-core/include/dmlc/registry.h	/^  inline EntryType &set_return_type(const std::string &type) {$/;"	f	class:dmlc::FunctionRegEntryBase
set_return_type	nnvm/include/dmlc/registry.h	/^  inline EntryType &set_return_type(const std::string &type) {$/;"	f	class:dmlc::FunctionRegEntryBase
set_stream	dmlc-core/include/dmlc/io.h	/^  inline void set_stream(Stream *stream) {$/;"	f	class:dmlc::istream
set_stream	dmlc-core/include/dmlc/io.h	/^  inline void set_stream(Stream *stream) {$/;"	f	class:dmlc::ostream
set_stream	dmlc-core/include/dmlc/io.h	/^inline void istream::InBuf::set_stream(Stream *stream) {$/;"	f	class:dmlc::istream::InBuf
set_stream	dmlc-core/include/dmlc/io.h	/^inline void ostream::OutBuf::set_stream(Stream *stream) {$/;"	f	class:dmlc::ostream::OutBuf
setup	dmlc-core/doc/conf.py	/^def setup(app):$/;"	f
setup	nnvm/python/setup.py	/^from distutils.core import setup$/;"	i
setupCacheFiles	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private Map<String, LocalResource> setupCacheFiles(ApplicationId appId) throws IOException {$/;"	m	class:Client	file:
setupTokens	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private ByteBuffer setupTokens() {$/;"	m	class:ApplicationMaster	file:
setupTokens	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private ByteBuffer setupTokens() throws IOException {$/;"	m	class:Client	file:
sge	dmlc-core/tracker/dmlc_tracker/submit.py	/^from . import sge$/;"	i
sge_submit	dmlc-core/tracker/dmlc_tracker/sge.py	/^    def sge_submit(nworker, nserver, pass_envs):$/;"	f	function:submit
shape	include/tinyflow/base.h	/^  TShape shape;$/;"	m	struct:tinyflow::TBlob
shape	src/op_tensor.cc	/^  TShape shape;$/;"	m	struct:tinyflow::ZeroParam	file:
shape_data	src/c_api.cc	/^  std::vector<const nn_uint*> shape_data;$/;"	m	struct:TinyAPIThreadLocalEntry	file:
shape_ndim	src/c_api.cc	/^  std::vector<nn_uint> shape_ndim;$/;"	m	struct:TinyAPIThreadLocalEntry	file:
shlex	dmlc-core/doc/conf.py	/^import shlex$/;"	i
size	dmlc-core/include/dmlc/array_view.h	/^  inline size_t size() const {$/;"	f	class:dmlc::array_view
size	dmlc-core/include/dmlc/data.h	/^  size_t size;$/;"	m	struct:dmlc::RowBlock
size	dmlc-core/include/dmlc/io.h	/^    size_t size;$/;"	m	struct:dmlc::InputSplit::Blob
size	dmlc-core/src/io/filesys.h	/^  size_t size;$/;"	m	struct:dmlc::io::FileInfo
size	nnvm/include/dmlc/array_view.h	/^  inline size_t size() const {$/;"	f	class:dmlc::array_view
slave_envs	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def slave_envs(self):$/;"	m	class:PSTracker
slave_envs	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def slave_envs(self):$/;"	m	class:RabitTracker
sleep	dmlc-core/test/unittest/unittest_threaditer.cc	/^  int sleep;$/;"	m	struct:producer_test::IntProducer	file:
slist_	dmlc-core/src/io/s3_filesys.cc	/^  curl_slist *slist_;$/;"	m	class:dmlc::io::s3::CURLReadStreamBase	file:
snprintf	dmlc-core/include/dmlc/base.h	137;"	d
snprintf	nnvm/include/dmlc/base.h	137;"	d
socket	dmlc-core/tracker/dmlc_tracker/tracker.py	/^import socket$/;"	i
source	nnvm/include/nnvm/graph.h	/^    const nnvm::Node* source;$/;"	m	struct:nnvm::IndexedGraph::Node
source_	dmlc-core/src/data/text_parser.h	/^  InputSplit *source_;$/;"	m	class:dmlc::data::TextParserBase
source_parsers	dmlc-core/doc/conf.py	/^source_parsers = {$/;"	v
source_suffix	dmlc-core/doc/conf.py	/^source_suffix = ['.rst', '.md']$/;"	v
split	dmlc-core/src/io/azure_filesys.cc	/^std::vector<std::string> split(std::string str, char delimiter) {$/;"	f	namespace:dmlc::io::__anon1
ssh_submit	dmlc-core/tracker/dmlc_tracker/ssh.py	/^    def ssh_submit(nworker, nserver, pass_envs):$/;"	f	function:submit
stack	dmlc-core/include/dmlc/any.h	/^    std::aligned_storage<kStack, kAlign>::type stack;$/;"	m	union:dmlc::any::Data
stack	nnvm/include/dmlc/any.h	/^    std::aligned_storage<kStack, kAlign>::type stack;$/;"	m	union:dmlc::any::Data
start	dmlc-core/tracker/dmlc_tracker/tracker.py	/^    def start(self, nslave):$/;"	m	class:RabitTracker
startAbort	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private boolean startAbort = false;$/;"	f	class:ApplicationMaster	file:
start_rabit_tracker	dmlc-core/tracker/dmlc_tracker/tracker.py	/^def start_rabit_tracker(args):$/;"	f
stat	dmlc-core/src/io/local_filesys.cc	15;"	d	file:
state_	dmlc-core/src/config.cc	/^  ParseState state_;$/;"	m	class:dmlc::Tokenizer	file:
states_	src/session.cc	/^  VarStateMap states_;$/;"	m	class:tinyflow::TorchSession	file:
stdev	example/cifar_resnet.py	/^stdev = 0.01$/;"	v
stdev	example/mnist_lenet.py	/^stdev = 0.01$/;"	v
storage_pool_	src/session.cc	/^  std::vector<LuaRef> storage_pool_;$/;"	m	class:tinyflow::TorchExecutor	file:
str	dmlc-core/src/io/filesys.h	/^  inline std::string str(void) const {$/;"	f	struct:dmlc::io::URI
str	dmlc-core/src/io/s3_filesys.cc	/^  inline std::string str(void) const {$/;"	f	struct:dmlc::io::s3::XMLIter
str_type	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/rtc.h	/^  static const char str_type[];$/;"	m	class:nnvm::fusion::RTC
str_type	nnvm/plugin/nnvm-fusion/src/rtc.cc	/^const char RTC::str_type[] = "float";$/;"	m	class:nnvm::fusion::RTC	file:
stream_	dmlc-core/include/dmlc/io.h	/^    Stream *stream_;$/;"	m	class:dmlc::istream::InBuf
stream_	dmlc-core/include/dmlc/io.h	/^    Stream *stream_;$/;"	m	class:dmlc::ostream::OutBuf
stream_	dmlc-core/include/dmlc/recordio.h	/^  Stream *stream_;$/;"	m	class:dmlc::RecordIOReader
stream_	dmlc-core/include/dmlc/recordio.h	/^  Stream *stream_;$/;"	m	class:dmlc::RecordIOWriter
strides	src/op_nn.cc	/^  TShape strides;$/;"	m	struct:tinyflow::ConvPoolParam	file:
string	nnvm/python/nnvm/cython/symbol.pyx	/^from libcpp.string cimport string$/;"	i
string_types	nnvm/python/nnvm/_base.py	/^    string_types = basestring,$/;"	v
string_types	nnvm/python/nnvm/_base.py	/^    string_types = str,$/;"	v
string_types	nnvm/python/nnvm/_ctypes/symbol.py	/^from .._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
string_types	nnvm/python/nnvm/attribute.py	/^from ._base import string_types$/;"	i
string_types	nnvm/python/nnvm/graph.py	/^from ._base import c_array, c_str, nn_uint, py_str, string_types$/;"	i
strtof	dmlc-core/src/data/strtonum.h	/^inline float strtof(const char *nptr, char **endptr) {$/;"	f	namespace:dmlc::data
strtoint	dmlc-core/src/data/strtonum.h	/^inline V strtoint(const char* nptr, char **endptr, int base) {$/;"	f	namespace:dmlc::data
strtouint	dmlc-core/src/data/strtonum.h	/^inline V strtouint(const char* nptr, char **endptr, int base) {$/;"	f	namespace:dmlc::data
strtoull	dmlc-core/src/data/strtonum.h	/^strtoull(const char* nptr, char **endptr, int base) {$/;"	f	namespace:dmlc::data
struct	dmlc-core/tracker/dmlc_tracker/tracker.py	/^import struct$/;"	i
submit	dmlc-core/tracker/dmlc-submit	/^from dmlc_tracker import submit$/;"	i
submit	dmlc-core/tracker/dmlc_tracker/local.py	/^def submit(args):$/;"	f
submit	dmlc-core/tracker/dmlc_tracker/mpi.py	/^def submit(args):$/;"	f
submit	dmlc-core/tracker/dmlc_tracker/sge.py	/^def submit(args):$/;"	f
submit	dmlc-core/tracker/dmlc_tracker/ssh.py	/^def submit(args):$/;"	f
submit	dmlc-core/tracker/dmlc_tracker/tracker.py	/^def submit(nworker, nserver, fun_submit, hostIP='auto', pscmd=None):$/;"	f
submit	dmlc-core/tracker/dmlc_tracker/yarn.py	/^def submit(args):$/;"	f
submitTasks	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private synchronized void submitTasks(Collection<TaskRecord> tasks) {$/;"	m	class:ApplicationMaster	file:
subprocess	dmlc-core/doc/conf.py	/^import os, subprocess$/;"	i
subprocess	dmlc-core/doc/sphinx_util.py	/^import subprocess$/;"	i
subprocess	dmlc-core/tracker/dmlc_tracker/launcher.py	/^import subprocess$/;"	i
subprocess	dmlc-core/tracker/dmlc_tracker/local.py	/^import subprocess$/;"	i
subprocess	dmlc-core/tracker/dmlc_tracker/mpi.py	/^import subprocess, logging$/;"	i
subprocess	dmlc-core/tracker/dmlc_tracker/sge.py	/^import subprocess$/;"	i
subprocess	dmlc-core/tracker/dmlc_tracker/ssh.py	/^import os, subprocess, logging$/;"	i
subprocess	dmlc-core/tracker/dmlc_tracker/tracker.py	/^import subprocess$/;"	i
subprocess	dmlc-core/tracker/dmlc_tracker/yarn.py	/^import subprocess$/;"	i
sum	nnvm/src/pass/gradient.cc	/^  NodeEntry sum = NodeEntry{nullptr, 0, 0};$/;"	m	struct:nnvm::pass::__anon8::GradEntry	file:
sum_loss	example/cifar_resnet.py	/^    sum_loss = 0.0$/;"	v
sum_loss	example/mnist_lenet.py	/^    sum_loss = 0.0$/;"	v
sum_loss	example/mnist_mlp_auto_shape_inference.py	/^    sum_loss = 0.0$/;"	v
swap	dmlc-core/include/dmlc/any.h	/^inline void any::swap(any& other) { \/\/ NOLINT(*)$/;"	f	class:dmlc::any
swap	dmlc-core/include/dmlc/lua.h	/^inline void LuaRef::swap(LuaRef& other) { \/\/ NOLINT(*)$/;"	f	class:dmlc::LuaRef
swap	nnvm/include/dmlc/any.h	/^inline void any::swap(any& other) { \/\/ NOLINT(*)$/;"	f	class:dmlc::any
swap	nnvm/include/nnvm/tuple.h	/^  inline void swap(Tuple<ValueType>& other) {  \/\/ NOLINT(*)$/;"	f	class:nnvm::Tuple
sym	nnvm/python/nnvm/__init__.py	/^from . import symbol as sym$/;"	i
sym	nnvm/tests/python/test_gradient.py	/^import nnvm.symbol as sym$/;"	i
sym	nnvm/tests/python/test_graph.py	/^import nnvm.symbol as sym$/;"	i
sym	nnvm/tests/python/test_symbol.py	/^import nnvm.symbol as sym$/;"	i
symbol	nnvm/python/nnvm/__init__.py	/^from . import symbol$/;"	i
symbol	nnvm/python/nnvm/graph.py	/^    def symbol(self):$/;"	m	class:Graph
symbol	python/tinyflow/_base.py	/^from nnvm import symbol, graph$/;"	i
symbol	python/tinyflow/_ops.py	/^from nnvm import symbol$/;"	i
symbol	python/tinyflow/_session.py	/^from nnvm import symbol$/;"	i
symbol	python/tinyflow/_util.py	/^from nnvm import symbol, graph$/;"	i
symbol	src/session.cc	/^  inline const nnvm::Symbol& symbol() const {$/;"	f	class:tinyflow::TorchExecutor
symbol_	src/session.cc	/^  nnvm::Symbol symbol_;$/;"	m	class:tinyflow::TorchExecutor	file:
symbol_constants	nnvm/src/core/symbolic.cc	/^namespace symbol_constants {$/;"	n	namespace:nnvm	file:
sync	dmlc-core/include/dmlc/io.h	/^inline int ostream::OutBuf::sync(void) {$/;"	f	class:dmlc::ostream::OutBuf
sync_dir	dmlc-core/tracker/dmlc_tracker/ssh.py	/^def sync_dir(local_dir, slave_node, slave_dir):$/;"	f
sys	dmlc-core/doc/conf.py	/^import sys$/;"	i
sys	dmlc-core/doc/sphinx_util.py	/^import sys$/;"	i
sys	dmlc-core/scripts/lint.py	/^import sys$/;"	i
sys	dmlc-core/scripts/lint3.py	/^import sys$/;"	i
sys	dmlc-core/tracker/dmlc-submit	/^import sys$/;"	i
sys	dmlc-core/tracker/dmlc_tracker/launcher.py	/^import sys$/;"	i
sys	dmlc-core/tracker/dmlc_tracker/local.py	/^import sys$/;"	i
sys	dmlc-core/tracker/dmlc_tracker/tracker.py	/^import sys$/;"	i
sys	nnvm/python/nnvm/_base.py	/^import sys$/;"	i
sys	nnvm/python/nnvm/_ctypes/symbol.py	/^import sys$/;"	i
sys	nnvm/python/nnvm/graph.py	/^import sys$/;"	i
sys	nnvm/python/nnvm/libinfo.py	/^import sys$/;"	i
sys	nnvm/python/setup.py	/^import sys$/;"	i
sys	python/tinyflow/_base.py	/^import sys$/;"	i
sys	python/tinyflow/datasets.py	/^import sys$/;"	i
tanh1	example/cifar_resnet.py	/^tanh1 = tf.tanh(conv1)$/;"	v
tanh1	example/mnist_lenet.py	/^tanh1 = tf.tanh(conv1)$/;"	v
tanh2	example/mnist_lenet.py	/^tanh2 = tf.tanh(conv2)$/;"	v
tanh3	example/mnist_lenet.py	/^tanh3 = tf.tanh(fc1)$/;"	v
taskId	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^    public int taskId = 0;$/;"	f	class:TaskRecord
taskRole	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/TaskRecord.java	/^    public String taskRole = "worker";$/;"	f	class:TaskRecord
temp_	dmlc-core/include/dmlc/recordio.h	/^  std::string temp_;$/;"	m	class:dmlc::RecordIOChunkReader
tempdir	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private String tempdir = "\/tmp";$/;"	f	class:Client	file:
templates_path	dmlc-core/doc/conf.py	/^templates_path = ['_templates']$/;"	v
tensor	src/session.cc	/^  LuaRef tensor;$/;"	m	struct:tinyflow::VarState	file:
test_add_grad	tests/python/test_gradients.py	/^def test_add_grad():$/;"	f
test_argmax	tests/python/test_ops.py	/^def test_argmax():$/;"	f
test_assign	tests/python/test_states.py	/^def test_assign():$/;"	f
test_compose	nnvm/tests/python/test_symbol.py	/^def test_compose():$/;"	f
test_control_dep	nnvm/tests/python/test_symbol.py	/^def test_control_dep():$/;"	f
test_copy	nnvm/tests/python/test_symbol.py	/^def test_copy():$/;"	f
test_default_input	nnvm/tests/python/test_symbol.py	/^def test_default_input():$/;"	f
test_ewise	tests/python/test_ops.py	/^def test_ewise():$/;"	f
test_exp	tests/python/test_ops.py	/^def test_exp():$/;"	f
test_graph_gradient	nnvm/tests/python/test_gradient.py	/^def test_graph_gradient():$/;"	f
test_graph_json_attr	nnvm/tests/python/test_graph.py	/^def test_graph_json_attr():$/;"	f
test_group	tests/python/test_states.py	/^def test_group():$/;"	f
test_infer_shape	nnvm/tests/python/test_graph.py	/^def test_infer_shape():$/;"	f
test_infer_shape_known_partial	nnvm/tests/python/test_graph.py	/^def test_infer_shape_known_partial():$/;"	f
test_infer_type	nnvm/tests/python/test_graph.py	/^def test_infer_type():$/;"	f
test_init	tests/python/test_states.py	/^def test_init():$/;"	f
test_json_pass	nnvm/tests/python/test_graph.py	/^def test_json_pass():$/;"	f
test_json_pass_with_attr	nnvm/tests/python/test_graph.py	/^def test_json_pass_with_attr():$/;"	f
test_list_args	nnvm/tests/python/test_graph.py	/^def test_list_args():$/;"	f
test_log	tests/python/test_ops.py	/^def test_log():$/;"	f
test_matmul	tests/python/test_ops.py	/^def test_matmul():$/;"	f
test_matmul_grad	tests/python/test_gradients.py	/^def test_matmul_grad():$/;"	f
test_mean	tests/python/test_ops.py	/^def test_mean():$/;"	f
test_mean_grad	tests/python/test_gradients.py	/^def test_mean_grad():$/;"	f
test_mul_grad	tests/python/test_gradients.py	/^def test_mul_grad():$/;"	f
test_mutate_input	nnvm/tests/python/test_symbol.py	/^def test_mutate_input():$/;"	f
test_order_mutation_pass	nnvm/tests/python/test_graph.py	/^def test_order_mutation_pass():$/;"	f
test_pad	tests/python/test_ops.py	/^def test_pad():$/;"	f
test_place_device	nnvm/tests/python/test_graph.py	/^def test_place_device():$/;"	f
test_plan_memory	nnvm/tests/python/test_graph.py	/^def test_plan_memory():$/;"	f
test_softmax	tests/python/test_ops.py	/^def test_softmax():$/;"	f
test_sqrt	tests/python/test_ops.py	/^def test_sqrt():$/;"	f
test_sum	tests/python/test_ops.py	/^def test_sum():$/;"	f
test_sum_grad	tests/python/test_gradients.py	/^def test_sum_grad():$/;"	f
tf	example/cifar_resnet.py	/^import tinyflow as tf$/;"	i
tf	example/mnist_lenet.py	/^import tinyflow as tf$/;"	i
tf	example/mnist_mlp_auto_shape_inference.py	/^import tinyflow as tf$/;"	i
tf	example/mnist_softmax.py	/^import tinyflow as tf$/;"	i
tf	example/mnist_softmax_minimum.py	/^import tinyflow as tf$/;"	i
tf	tests/python/test_gradients.py	/^import tinyflow as tf$/;"	i
tf	tests/python/test_ops.py	/^import tinyflow as tf$/;"	i
tf	tests/python/test_states.py	/^import tinyflow as tf$/;"	i
time	dmlc-core/tracker/dmlc_tracker/tracker.py	/^import time$/;"	i
tinyflow	include/tinyflow/base.h	/^namespace tinyflow {$/;"	n
tinyflow	src/op_nn.cc	/^namespace tinyflow {$/;"	n	file:
tinyflow	src/op_special.cc	/^namespace tinyflow {$/;"	n	file:
tinyflow	src/op_tensor.cc	/^namespace tinyflow {$/;"	n	file:
tinyflow	src/op_util.h	/^namespace tinyflow {$/;"	n
tinyflow	src/rtc/op_fusion.cc	/^namespace tinyflow {$/;"	n	file:
tinyflow	src/session.cc	/^namespace tinyflow {$/;"	n	file:
tinyflow	src/torch/op_nn_torch.cc	/^namespace tinyflow {$/;"	n	file:
tinyflow	src/torch/op_special_torch.cc	/^namespace tinyflow {$/;"	n	file:
tinyflow	src/torch/op_tensor_torch.cc	/^namespace tinyflow {$/;"	n	file:
tinyflow	src/torch/torch_util.h	/^namespace tinyflow {$/;"	n
tmap	nnvm/src/core/op.cc	/^  std::unordered_map<std::string, std::vector<std::function<void(Op*)>  > > tmap;$/;"	m	struct:nnvm::OpManager	file:
tmp_	dmlc-core/src/data/parser.h	/^  std::vector<RowBlockContainer<IndexType> > *tmp_;$/;"	m	class:dmlc::data::ThreadedParser
tmp_chunk_	dmlc-core/src/io/cached_input_split.h	/^  InputSplitBase::Chunk *tmp_chunk_;$/;"	m	class:dmlc::io::CachedInputSplit
tmp_chunk_	dmlc-core/src/io/input_split_base.h	/^  Chunk tmp_chunk_;$/;"	m	class:dmlc::io::InputSplitBase
tmp_chunk_	dmlc-core/src/io/threaded_input_split.h	/^  InputSplitBase::Chunk *tmp_chunk_;$/;"	m	class:dmlc::io::ThreadedInputSplit
todo_include_todos	dmlc-core/doc/conf.py	/^todo_include_todos = False$/;"	v
top	dmlc-core/include/dmlc/lua.h	/^  int top;$/;"	m	struct:dmlc::LuaState::StackReset
tracker	dmlc-core/tracker/dmlc_tracker/local.py	/^from . import tracker$/;"	i
tracker	dmlc-core/tracker/dmlc_tracker/mpi.py	/^from . import tracker$/;"	i
tracker	dmlc-core/tracker/dmlc_tracker/sge.py	/^from . import tracker$/;"	i
tracker	dmlc-core/tracker/dmlc_tracker/ssh.py	/^from . import tracker$/;"	i
tracker	dmlc-core/tracker/dmlc_tracker/yarn.py	/^from . import tracker$/;"	i
train	python/tinyflow/__init__.py	/^from . import train$/;"	i
train_step	example/cifar_resnet.py	/^train_step = tf.train.AdamOptimizer(0.0005).minimize(cross_entropy)$/;"	v
train_step	example/mnist_lenet.py	/^train_step = tf.train.AdamOptimizer(0.005).minimize(cross_entropy)$/;"	v
train_step	example/mnist_mlp_auto_shape_inference.py	/^train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)$/;"	v
train_step	example/mnist_softmax.py	/^train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)$/;"	v
train_step	example/mnist_softmax_minimum.py	/^train_step = tf.assign(W, W - learning_rate * W_grad)$/;"	v
transform	dmlc-core/doc/sphinx_util.py	/^from recommonmark import parser, transform$/;"	i
tree	dmlc-core/test/registry_test.cc	/^namespace tree {$/;"	n	file:
type	dmlc-core/include/dmlc/any.h	/^inline const std::type_info& any::type() const {$/;"	f	class:dmlc::any
type	dmlc-core/include/dmlc/parameter.h	/^  std::string type;$/;"	m	struct:dmlc::ParamFieldInfo
type	dmlc-core/src/io/filesys.h	/^  FileType type;$/;"	m	struct:dmlc::io::FileInfo
type	nnvm/include/dmlc/any.h	/^inline const std::type_info& any::type() const {$/;"	f	class:dmlc::any
type	nnvm/include/dmlc/parameter.h	/^  std::string type;$/;"	m	struct:dmlc::ParamFieldInfo
type_	dmlc-core/include/dmlc/any.h	/^  Type type_;$/;"	m	class:dmlc::any::TypeInfo
type_	dmlc-core/include/dmlc/parameter.h	/^  std::string type_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
type_	nnvm/include/dmlc/any.h	/^  Type type_;$/;"	m	class:dmlc::any::TypeInfo
type_	nnvm/include/dmlc/parameter.h	/^  std::string type_;$/;"	m	class:dmlc::parameter::FieldAccessEntry
type_info_str	dmlc-core/include/dmlc/parameter.h	/^  std::string type_info_str;$/;"	m	struct:dmlc::ParamFieldInfo
type_info_str	nnvm/include/dmlc/parameter.h	/^  std::string type_info_str;$/;"	m	struct:dmlc::ParamFieldInfo
type_map_	dmlc-core/include/dmlc/json.h	/^  std::unordered_map<std::string, Entry> type_map_;$/;"	m	class:dmlc::json::AnyJSONManager
type_map_	nnvm/include/dmlc/json.h	/^  std::unordered_map<std::string, Entry> type_map_;$/;"	m	class:dmlc::json::AnyJSONManager
type_name	dmlc-core/include/dmlc/type_traits.h	/^inline const char* type_name() {$/;"	f	namespace:dmlc
type_name	nnvm/include/dmlc/type_traits.h	/^inline const char* type_name() {$/;"	f	namespace:dmlc
type_name_	dmlc-core/include/dmlc/json.h	/^  std::unordered_map<std::type_index, std::string> type_name_;$/;"	m	class:dmlc::json::AnyJSONManager
type_name_	nnvm/include/dmlc/json.h	/^  std::unordered_map<std::type_index, std::string> type_name_;$/;"	m	class:dmlc::json::AnyJSONManager
uint16_t	dmlc-core/include/dmlc/base.h	/^typedef unsigned __int16 uint16_t;$/;"	t
uint16_t	nnvm/include/dmlc/base.h	/^typedef unsigned __int16 uint16_t;$/;"	t
uint32_t	dmlc-core/include/dmlc/base.h	/^typedef unsigned __int32 uint32_t;$/;"	t
uint32_t	nnvm/include/dmlc/base.h	/^typedef unsigned __int32 uint32_t;$/;"	t
uint64_t	dmlc-core/include/dmlc/base.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	dmlc-core/include/dmlc/io.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	nnvm/include/dmlc/base.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint8_t	dmlc-core/include/dmlc/base.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	nnvm/include/dmlc/base.h	/^typedef unsigned char uint8_t;$/;"	t
underflow	dmlc-core/include/dmlc/io.h	/^inline int istream::InBuf::underflow() {$/;"	f	class:dmlc::istream::InBuf
unique	dmlc-core/include/dmlc/memory.h	/^  inline bool unique() const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
unique	nnvm/include/dmlc/memory.h	/^  inline bool unique() const {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
unzip_archives	dmlc-core/tracker/dmlc_tracker/launcher.py	/^def unzip_archives(ar_list, env):$/;"	f
upload_id_	dmlc-core/src/io/s3_filesys.cc	/^  std::string upload_id_;$/;"	m	class:dmlc::io::s3::WriteStream	file:
uri	dmlc-core/src/io/uri_spec.h	/^  std::string uri;$/;"	m	class:dmlc::io::URISpec
use_count_	dmlc-core/include/dmlc/memory.h	/^    unsigned use_count_;$/;"	m	struct:dmlc::ThreadlocalSharedPtr::RefBlock
use_count_	nnvm/include/dmlc/memory.h	/^    unsigned use_count_;$/;"	m	struct:dmlc::ThreadlocalSharedPtr::RefBlock
use_stdin_	dmlc-core/src/io/single_file_split.h	/^  bool use_stdin_;$/;"	m	class:dmlc::io::SingleFileSplit
use_stdio_	dmlc-core/src/io/local_filesys.cc	/^  bool use_stdio_;$/;"	m	class:dmlc::io::FileStream	file:
userName	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private String userName = "";$/;"	f	class:ApplicationMaster	file:
userName	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^    private String userName = "";$/;"	f	class:Client	file:
val	dmlc-core/include/dmlc/config.h	/^    std::vector<std::string> val;$/;"	m	struct:dmlc::Config::ConfigValue
val_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  ASTPtr val_;$/;"	m	class:nnvm::fusion::AssignAST
val_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  float val_;$/;"	m	class:nnvm::fusion::FloatAST
val_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  int val_;$/;"	m	class:nnvm::fusion::IntAST
value	dmlc-core/include/dmlc/any.h	/^    static const bool value = alignof(T) <= kAlign && sizeof(T) <= kStack;$/;"	m	struct:dmlc::any::data_on_stack
value	dmlc-core/include/dmlc/data.h	/^  const real_t *value;$/;"	m	class:dmlc::Row
value	dmlc-core/include/dmlc/data.h	/^  const real_t *value;$/;"	m	struct:dmlc::RowBlock
value	dmlc-core/include/dmlc/type_traits.h	/^  static const bool value = false;$/;"	m	struct:dmlc::has_saveload
value	dmlc-core/include/dmlc/type_traits.h	/^  static const bool value = std::is_arithmetic<T>::value;$/;"	m	struct:dmlc::is_arithmetic
value	dmlc-core/include/dmlc/type_traits.h	/^  static const bool value = std::is_floating_point<T>::value;$/;"	m	struct:dmlc::is_floating_point
value	dmlc-core/include/dmlc/type_traits.h	/^  static const bool value = std::is_integral<T>::value;$/;"	m	struct:dmlc::is_integral
value	dmlc-core/include/dmlc/type_traits.h	/^  static const bool value = std::is_pod<T>::value;$/;"	m	struct:dmlc::is_pod
value	dmlc-core/src/data/row_block.h	/^  std::vector<real_t> value;$/;"	m	struct:dmlc::data::RowBlockContainer
value	nnvm/include/dmlc/any.h	/^    static const bool value = alignof(T) <= kAlign && sizeof(T) <= kStack;$/;"	m	struct:dmlc::any::data_on_stack
value	nnvm/include/dmlc/type_traits.h	/^  static const bool value = false;$/;"	m	struct:dmlc::has_saveload
value	nnvm/include/dmlc/type_traits.h	/^  static const bool value = std::is_arithmetic<T>::value;$/;"	m	struct:dmlc::is_arithmetic
value	nnvm/include/dmlc/type_traits.h	/^  static const bool value = std::is_floating_point<T>::value;$/;"	m	struct:dmlc::is_floating_point
value	nnvm/include/dmlc/type_traits.h	/^  static const bool value = std::is_integral<T>::value;$/;"	m	struct:dmlc::is_integral
value	nnvm/include/dmlc/type_traits.h	/^  static const bool value = std::is_pod<T>::value;$/;"	m	struct:dmlc::is_pod
value_	dmlc-core/test/unittest/unittest_json.cc	/^  int value_;$/;"	m	class:json::MyClass	file:
value_type	dmlc-core/include/dmlc/memory.h	/^  typedef T value_type;$/;"	t	class:dmlc::ThreadlocalAllocator
value_type	nnvm/include/dmlc/memory.h	/^  typedef T value_type;$/;"	t	class:dmlc::ThreadlocalAllocator
var_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  ASTPtr var_;$/;"	m	class:nnvm::fusion::AssignAST
var_	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  ASTPtr var_;$/;"	m	class:nnvm::fusion::DeclFloatAST
var_states_	src/session.cc	/^  VarStateMap* var_states_;$/;"	m	class:tinyflow::TorchExecutor	file:
vector	nnvm/python/nnvm/cython/symbol.pyx	/^from libcpp.vector cimport vector$/;"	i
version	dmlc-core/doc/conf.py	/^version = "0.5.0"$/;"	v
version	nnvm/include/nnvm/graph.h	/^    uint32_t version;$/;"	m	struct:nnvm::IndexedGraph::NodeEntry
version	nnvm/include/nnvm/node.h	/^  uint32_t version;$/;"	m	struct:nnvm::NodeEntry
version	nnvm/src/pass/saveload_json.cc	/^    uint32_t version;$/;"	m	struct:nnvm::pass::__anon5::JSONNode::Entry	file:
vsnprintf	dmlc-core/include/dmlc/base.h	138;"	d
vsnprintf	nnvm/include/dmlc/base.h	138;"	d
warnings	dmlc-core/tracker/dmlc_tracker/yarn.py	/^import warnings$/;"	i
weight	dmlc-core/include/dmlc/data.h	/^  const real_t *weight;$/;"	m	struct:dmlc::RowBlock
weight	dmlc-core/include/dmlc/data.h	/^  real_t weight;$/;"	m	class:dmlc::Row
weight	dmlc-core/src/data/row_block.h	/^  std::vector<real_t> weight;$/;"	m	struct:dmlc::data::RowBlockContainer
what	dmlc-core/src/config.cc	/^  virtual const char* what() const throw() {$/;"	f	class:dmlc::TokenizeError
workerCores	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int workerCores = 1;$/;"	f	class:ApplicationMaster	file:
workerMemoryMB	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private int workerMemoryMB = 10;$/;"	f	class:ApplicationMaster	file:
workerResources	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/ApplicationMaster.java	/^    private Map<String, LocalResource> workerResources = new java.util.HashMap<String, LocalResource>();$/;"	f	class:ApplicationMaster	file:
write	dmlc-core/include/dmlc/json.h	/^    void (*write)(JSONWriter* reader, const any& data);$/;"	m	struct:dmlc::json::AnyJSONManager::Entry
write	nnvm/include/dmlc/json.h	/^    void (*write)(JSONWriter* reader, const any& data);$/;"	m	struct:dmlc::json::AnyJSONManager::Entry
x	example/cifar_resnet.py	/^x = tf.placeholder(tf.float32)$/;"	v
x	example/mnist_lenet.py	/^x = tf.placeholder(tf.float32)$/;"	v
x	example/mnist_mlp_auto_shape_inference.py	/^x = tf.placeholder(tf.float32)$/;"	v
x	example/mnist_softmax.py	/^x = tf.placeholder(tf.float32, [None, 784])$/;"	v
x	example/mnist_softmax_minimum.py	/^x = tf.placeholder(tf.float32, [None, 784])$/;"	v
y	example/mnist_softmax.py	/^y = tf.nn.softmax(tf.matmul(x, W))$/;"	v
y	example/mnist_softmax_minimum.py	/^y = tf.nn.softmax(tf.matmul(x, W))$/;"	v
y_	example/mnist_softmax.py	/^y_ = tf.placeholder(tf.float32, [None, 10])$/;"	v
y_	example/mnist_softmax_minimum.py	/^y_ = tf.placeholder(tf.float32, [None, 10])$/;"	v
yarn	dmlc-core/tracker/dmlc_tracker/submit.py	/^from . import yarn$/;"	i
yarnClient	dmlc-core/tracker/yarn/src/main/java/org/apache/hadoop/yarn/dmlc/Client.java	/^        private YarnClient yarnClient;$/;"	f	class:Client.CtrlCHandler	file:
yarn_submit	dmlc-core/tracker/dmlc_tracker/yarn.py	/^def yarn_submit(args, nworker, nserver, pass_env):$/;"	f
yarn_submit_pass	dmlc-core/tracker/dmlc_tracker/yarn.py	/^    def yarn_submit_pass(nworker, nserver, pass_env):$/;"	f	function:submit
zeros	python/tinyflow/_ops.py	/^def zeros(shape):$/;"	f
~AST	nnvm/plugin/nnvm-fusion/include/nnvm-fusion/ast.h	/^  virtual ~AST() {}$/;"	f	class:nnvm::fusion::AST
~AzureFileSystem	dmlc-core/src/io/azure_filesys.h	/^  virtual ~AzureFileSystem() {}$/;"	f	class:dmlc::io::AzureFileSystem
~BasicRowIter	dmlc-core/src/data/basic_row_iter.h	/^  virtual ~BasicRowIter() {}$/;"	f	class:dmlc::data::BasicRowIter
~CURLGlobal	dmlc-core/src/io/s3_filesys.cc	/^  ~CURLGlobal() {$/;"	f	struct:dmlc::io::s3::CURLGlobal
~CURLReadStreamBase	dmlc-core/src/io/s3_filesys.cc	/^  virtual ~CURLReadStreamBase() {$/;"	f	class:dmlc::io::s3::CURLReadStreamBase
~CachedInputSplit	dmlc-core/src/io/cached_input_split.h	/^  virtual ~CachedInputSplit(void) {$/;"	f	class:dmlc::io::CachedInputSplit
~DataIter	dmlc-core/include/dmlc/data.h	/^  virtual ~DataIter(void) {}$/;"	f	class:dmlc::DataIter
~DiskRowIter	dmlc-core/src/data/disk_row_iter.h	/^  virtual ~DiskRowIter(void) {$/;"	f	class:dmlc::data::DiskRowIter
~FieldAccessEntry	dmlc-core/include/dmlc/parameter.h	/^  virtual ~FieldAccessEntry() {}$/;"	f	class:dmlc::parameter::FieldAccessEntry
~FieldAccessEntry	nnvm/include/dmlc/parameter.h	/^  virtual ~FieldAccessEntry() {}$/;"	f	class:dmlc::parameter::FieldAccessEntry
~FileStream	dmlc-core/src/io/local_filesys.cc	/^  virtual ~FileStream(void) {$/;"	f	class:dmlc::io::FileStream
~FileSystem	dmlc-core/src/io/filesys.h	/^  virtual ~FileSystem() {}$/;"	f	class:dmlc::io::FileSystem
~HDFSFileSystem	dmlc-core/src/io/hdfs_filesys.cc	/^HDFSFileSystem::~HDFSFileSystem(void) {$/;"	f	class:dmlc::io::HDFSFileSystem
~HDFSStream	dmlc-core/src/io/hdfs_filesys.cc	/^  virtual ~HDFSStream(void) {$/;"	f	class:dmlc::io::HDFSStream
~InputSplit	dmlc-core/include/dmlc/io.h	/^  virtual ~InputSplit(void) {}$/;"	f	class:dmlc::InputSplit
~InputSplitBase	dmlc-core/src/io/input_split_base.cc	/^InputSplitBase::~InputSplitBase(void) {$/;"	f	class:dmlc::io::InputSplitBase
~LocalFileSystem	dmlc-core/src/io/local_filesys.h	/^  virtual ~LocalFileSystem() {}$/;"	f	class:dmlc::io::LocalFileSystem
~LuaRef	dmlc-core/include/dmlc/lua.h	/^inline LuaRef::~LuaRef() {$/;"	f	class:dmlc::LuaRef
~LuaState	dmlc-core/include/dmlc/lua.h	/^inline LuaState::~LuaState() {$/;"	f	class:dmlc::LuaState
~Node	nnvm/src/core/node.cc	/^Node::~Node() {$/;"	f	class:nnvm::Node
~ParamManager	dmlc-core/include/dmlc/parameter.h	/^  ~ParamManager() {$/;"	f	class:dmlc::parameter::ParamManager
~ParamManager	nnvm/include/dmlc/parameter.h	/^  ~ParamManager() {$/;"	f	class:dmlc::parameter::ParamManager
~ParserImpl	dmlc-core/src/data/parser.h	/^  virtual ~ParserImpl() {}$/;"	f	class:dmlc::data::ParserImpl
~Producer	dmlc-core/include/dmlc/threadediter.h	/^    virtual ~Producer() {}$/;"	f	class:dmlc::ThreadedIter::Producer
~ReadStream	dmlc-core/src/io/s3_filesys.cc	/^  virtual ~ReadStream(void) {}$/;"	f	class:dmlc::io::s3::ReadStream
~Registry	dmlc-core/include/dmlc/registry.h	/^  ~Registry() {$/;"	f	class:dmlc::Registry
~Registry	nnvm/include/dmlc/registry.h	/^  ~Registry() {$/;"	f	class:dmlc::Registry
~S3FileSystem	dmlc-core/src/io/s3_filesys.h	/^  virtual ~S3FileSystem() {}$/;"	f	class:dmlc::io::S3FileSystem
~SeekStream	dmlc-core/include/dmlc/io.h	/^  virtual ~SeekStream(void) {}$/;"	f	class:dmlc::SeekStream
~Serializable	dmlc-core/include/dmlc/io.h	/^  virtual ~Serializable() {}$/;"	f	class:dmlc::Serializable
~Session	include/tinyflow/base.h	/^  virtual ~Session() {}$/;"	f	class:tinyflow::Session
~SingleFileSplit	dmlc-core/src/io/single_file_split.h	/^  virtual ~SingleFileSplit(void) {$/;"	f	class:dmlc::io::SingleFileSplit
~StackReset	dmlc-core/include/dmlc/lua.h	/^  ~StackReset() {$/;"	f	struct:dmlc::LuaState::StackReset
~Stream	dmlc-core/include/dmlc/io.h	/^  virtual ~Stream(void) {}$/;"	f	class:dmlc::Stream
~TextParserBase	dmlc-core/src/data/text_parser.h	/^  virtual ~TextParserBase() {$/;"	f	class:dmlc::data::TextParserBase
~ThreadLocalStore	dmlc-core/include/dmlc/thread_local.h	/^  ~ThreadLocalStore() {$/;"	f	class:dmlc::ThreadLocalStore
~ThreadLocalStore	nnvm/include/dmlc/thread_local.h	/^  ~ThreadLocalStore() {$/;"	f	class:dmlc::ThreadLocalStore
~ThreadedInputSplit	dmlc-core/src/io/threaded_input_split.h	/^  virtual ~ThreadedInputSplit(void) {$/;"	f	class:dmlc::io::ThreadedInputSplit
~ThreadedIter	dmlc-core/include/dmlc/threadediter.h	/^  virtual ~ThreadedIter(void) {$/;"	f	class:dmlc::ThreadedIter
~ThreadedParser	dmlc-core/src/data/parser.h	/^  virtual ~ThreadedParser(void) {$/;"	f	class:dmlc::data::ThreadedParser
~ThreadlocalSharedPtr	dmlc-core/include/dmlc/memory.h	/^  ~ThreadlocalSharedPtr() {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
~ThreadlocalSharedPtr	nnvm/include/dmlc/memory.h	/^  ~ThreadlocalSharedPtr() {$/;"	f	struct:dmlc::ThreadlocalSharedPtr
~TokenizeError	dmlc-core/src/config.cc	/^  ~TokenizeError() throw() {}$/;"	f	class:dmlc::TokenizeError
~Tree	dmlc-core/test/registry_test.cc	/^  virtual ~Tree() {}$/;"	f	struct:tree::Tree
~Tuple	nnvm/include/nnvm/tuple.h	/^  inline ~Tuple() {$/;"	f	class:nnvm::Tuple
~WriteStream	dmlc-core/src/io/s3_filesys.cc	/^  virtual ~WriteStream() {$/;"	f	class:dmlc::io::s3::WriteStream
~any	dmlc-core/include/dmlc/any.h	/^inline any::~any() {$/;"	f	class:dmlc::any
~any	nnvm/include/dmlc/any.h	/^inline any::~any() {$/;"	f	class:dmlc::any
